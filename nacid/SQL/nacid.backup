--
-- PostgreSQL database dump
--

-- Dumped from database version 9.4.1
-- Dumped by pg_dump version 9.6.8

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: backoffice; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA backoffice;


ALTER SCHEMA backoffice OWNER TO postgres;

--
-- Name: blobs; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA blobs;


ALTER SCHEMA blobs OWNER TO postgres;

--
-- Name: eservices; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA eservices;


ALTER SCHEMA eservices OWNER TO postgres;

--
-- Name: isobaq; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA isobaq;


ALTER SCHEMA isobaq OWNER TO postgres;

--
-- Name: nomenclatures; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA nomenclatures;


ALTER SCHEMA nomenclatures OWNER TO postgres;

--
-- Name: numgenerator; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA numgenerator;


ALTER SCHEMA numgenerator OWNER TO postgres;

--
-- Name: payments; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA payments;


ALTER SCHEMA payments OWNER TO postgres;

--
-- Name: poll; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA poll;


ALTER SCHEMA poll OWNER TO postgres;

--
-- Name: regprof; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA regprof;


ALTER SCHEMA regprof OWNER TO postgres;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: uuid-ossp; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA public;


--
-- Name: EXTENSION "uuid-ossp"; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION "uuid-ossp" IS 'generate universally unique identifiers (UUIDs)';


--
-- Name: get_num(integer, integer); Type: FUNCTION; Schema: numgenerator; Owner: postgres
--

CREATE FUNCTION numgenerator.get_num(ser_id integer, stype integer) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
BEGIN
   return numgenerator.get_num(ser_id, stype, true);
END; $$;


ALTER FUNCTION numgenerator.get_num(ser_id integer, stype integer) OWNER TO postgres;

--
-- Name: get_num(integer, integer, boolean); Type: FUNCTION; Schema: numgenerator; Owner: postgres
--

CREATE FUNCTION numgenerator.get_num(ser_id integer, stype integer, adddate boolean) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
DECLARE
     val INTEGER;
     series_name VARCHAR;
     entry_num VARCHAR;
	 isReloadable INTEGER;
	 yearLastChanged VARCHAR;
BEGIN
   
   SELECT last_allocated, code, is_reloadable, year_changed
        INTO STRICT val, series_name, isReloadable, yearLastChanged
        FROM  numgenerator.entry_num_series
        WHERE id = ser_id
        FOR UPDATE;
   
   IF isReloadable = 1 and yearLastChanged <> to_char(current_date, 'YYYY')
   THEN 
		val=1;
		UPDATE  numgenerator.entry_num_series
			SET     last_allocated = val, year_changed = to_char(current_date, 'YYYY')
			WHERE   id = ser_id;
		entry_num = series_name || val;
		if (addDate) THEN entry_num = entry_num || to_char(current_date, '/DD.MM.YYYY'); END IF;
		
		INSERT INTO numgenerator.entry_nums (allocated_num, series_id, submission_type, entry_num) VALUES (val, ser_id, stype,entry_num);
   END IF;
   
   IF isReloadable = 0 or yearLastChanged = to_char(current_date, 'YYYY')
   THEN
		val = val+1;
		UPDATE  numgenerator.entry_num_series
			SET     last_allocated = val, year_changed = to_char(current_date, 'YYYY')
			WHERE   id = ser_id;

		entry_num = series_name || val;
		if (addDate) THEN entry_num = entry_num || to_char(current_date, '/DD.MM.YYYY'); END IF;
		INSERT INTO numgenerator.entry_nums (allocated_num, series_id, submission_type, entry_num) VALUES (val, ser_id, stype,entry_num);
	END IF;


   return entry_num;
END; $$;


ALTER FUNCTION numgenerator.get_num(ser_id integer, stype integer, adddate boolean) OWNER TO postgres;

--
-- Name: get_num_without_date(integer, integer); Type: FUNCTION; Schema: numgenerator; Owner: postgres
--

CREATE FUNCTION numgenerator.get_num_without_date(ser_id integer, stype integer) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
BEGIN
   return numgenerator.get_num(ser_id, stype, false);
END; $$;


ALTER FUNCTION numgenerator.get_num_without_date(ser_id integer, stype integer) OWNER TO postgres;

--
-- Name: add_liablity_detail_for_ipas_transfer(); Type: FUNCTION; Schema: payments; Owner: postgres
--

CREATE FUNCTION payments.add_liablity_detail_for_ipas_transfer() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
  act varchar;
  liabdetid integer;
  refnum varchar;
  ipasmod integer;
BEGIN
	
     IF TG_OP = 'DELETE' THEN 
	liabdetid = old.id;
	refnum = old.reference_number;
     ELSE 
	liabdetid = new.id; 
	refnum = new.reference_number;
     END IF;
     select ipas_module into ipasmod from payments.module_configurations  where module = (select module from payments.liabilities  where reference_number = refnum);
     if (ipasmod <> 1) THEN return new; END IF;
     
     
     SELECT action into act from payments.liability_details_for_ipas_transfer where liability_detail_id = liabdetid and status = 0;
     IF act IS NOT NULL THEN
	IF TG_OP = 'DELETE' THEN 
		update payments.liability_details_for_ipas_transfer set action = 'D' where liability_detail_id = liabdetid and status = 0;
	ELSIF TG_OP = 'INSERT' THEN 
		update payments.liability_details_for_ipas_transfer set action = 'I' where liability_detail_id = liabdetid and status = 0;
	ELSIF TG_OP = 'UPDATE' THEN 
		--ignore operation, because the previous operation could be either Insert or Update. So it's not necessary to add another record...
	END IF;
     ELSE 
	IF TG_OP = 'DELETE' then act = 'D';
	ELSIF TG_OP = 'UPDATE' then act = 'U';
	ELSIF TG_OP = 'INSERT' then act = 'I';
	END IF;
	insert into payments.liability_details_for_ipas_transfer (liability_detail_id, action) VALUES (liabdetid, act);
     END IF;
     return new;
END;
$$;


ALTER FUNCTION payments.add_liablity_detail_for_ipas_transfer() OWNER TO postgres;

--
-- Name: set_liabilities_amount_outstanding(); Type: FUNCTION; Schema: payments; Owner: postgres
--

CREATE FUNCTION payments.set_liabilities_amount_outstanding() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
  liab_id integer;
BEGIN

     IF TG_OP = 'INSERT' THEN
	
	select id into liab_id from payments.liabilities WHERE reference_number = new.reference_number;

        update payments.liabilities
           set    amount_outstanding = coalesce ((select sum (amount_outstanding) from payments.liability_details where (reference_number = new.reference_number)),0),
	          amount = coalesce ((select sum (amount) from payments.liability_details where (reference_number = new.reference_number)),0)
           where reference_number = new.reference_number;
     ELSIF TG_OP = 'DELETE' THEN
        update payments.liabilities
           set    amount_outstanding = coalesce ((select sum (amount_outstanding) from payments.liability_details where (reference_number = old.reference_number)),0),
	          amount = coalesce ((select sum (amount) from payments.liability_details where (reference_number = old.reference_number)),0)
           where reference_number = old.reference_number;
     ELSIF TG_OP = 'UPDATE' THEN  
        update payments.liabilities
           set    amount_outstanding = coalesce ((select sum (amount_outstanding) from payments.liability_details where (reference_number = new.reference_number)),0),
	          amount = coalesce ((select sum (amount) from payments.liability_details where (reference_number = new.reference_number)),0)
           where reference_number = new.reference_number;
	IF old.reference_number != new.reference_number THEN
		update payments.liabilities
		   set    amount_outstanding = coalesce ((select sum (amount_outstanding) from payments.liability_details where (reference_number = old.reference_number)),0),
			  amount = coalesce ((select sum (amount) from payments.liability_details where (reference_number = old.reference_number)),0)
		   where reference_number = old.reference_number;
	END IF;           
     END IF;
     
     return new;
END;
$$;


ALTER FUNCTION payments.set_liabilities_amount_outstanding() OWNER TO postgres;

--
-- Name: set_liability_details_amount_outstanding(); Type: FUNCTION; Schema: payments; Owner: postgres
--

CREATE FUNCTION payments.set_liability_details_amount_outstanding() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE

BEGIN

     IF TG_OP = 'INSERT' THEN
        update payments.liability_details
           set    amount_outstanding = amount - coalesce ((select sum (amount) from payments.payment_details where (liability_detail_id = new.liability_detail_id)),0)
           where id = new.liability_detail_id;
        UPDATE payments.liability_details SET status = (CASE WHEN amount_outstanding <= 0 THEN 'PAID' ELSE 'NOTPAID' END) WHERE id = new.liability_detail_id;
     ELSIF TG_OP = 'DELETE' THEN
        update payments.liability_details
           set    amount_outstanding = amount - coalesce((select sum (amount) from payments.payment_details where (liability_detail_id = old.liability_detail_id)),0)
           where id = old.liability_detail_id;
        UPDATE payments.liability_details SET status = (CASE WHEN amount_outstanding <= 0 THEN 'PAID' ELSE 'NOTPAID' END) WHERE id = old.liability_detail_id;
     ELSIF TG_OP = 'UPDATE' THEN  
        update payments.liability_details
           set    amount_outstanding = amount - coalesce((select sum (amount) from payments.payment_details where liability_detail_id = old.liability_detail_id),0)
           where id = old.liability_detail_id;
        UPDATE payments.liability_details SET status = (CASE WHEN amount_outstanding <= 0 THEN 'PAID' ELSE 'NOTPAID' END) WHERE id = old.liability_detail_id;
        update payments.liability_details
           set    amount_outstanding = amount - coalesce((select sum (amount) from payments.payment_details where (liability_detail_id = old.liability_detail_id)),0)
           where id = old.liability_detail_id;
        UPDATE payments.liability_details SET status = (CASE WHEN amount_outstanding <= 0 THEN 'PAID' ELSE 'NOTPAID' END) WHERE id = old.liability_detail_id;
     END IF;
     
     return new;
END;
$$;


ALTER FUNCTION payments.set_liability_details_amount_outstanding() OWNER TO postgres;

--
-- Name: set_payment_amount_outstanding(); Type: FUNCTION; Schema: payments; Owner: postgres
--

CREATE FUNCTION payments.set_payment_amount_outstanding() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE

BEGIN

     IF TG_OP = 'INSERT' THEN
        update payments.payments
           set    amount_outstanding = amount_outstanding - new.amount
           where id=new.payment_id;
     ELSIF TG_OP = 'DELETE' THEN
        update payments.payments
           set    amount_outstanding = amount_outstanding + old.amount
           where id = old.payment_id;
     ELSIF TG_OP = 'UPDATE' THEN  
        update payments.payments
           set    amount_outstanding = amount_outstanding - new.amount + old.amount
           where id=new.payment_id;
      
     END IF;
     return new;
END;
$$;


ALTER FUNCTION payments.set_payment_amount_outstanding() OWNER TO postgres;

--
-- Name: format_username(character varying); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.format_username(str character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
    DECLARE
	result VARCHAR;
	
BEGIN
   if (str is null) then return null; END if;
   result = trim(str);
   result = replace(result, 'А','A');
   result = replace(result, 'Б','B');
   result = replace(result, 'В','V');
   result = replace(result, 'Г','G');
   result = replace(result, 'Д','D');
   result = replace(result, 'Е','E');
   result = replace(result, 'Ж','ZH');
   result = replace(result, 'З','Z');
   result = replace(result, 'И','I');
   result = replace(result, 'Й','Y');
   result = replace(result, 'К','K');
   result = replace(result, 'Л','L');
   result = replace(result, 'М','M');
   result = replace(result, 'Н','N');
   result = replace(result, 'О','O');
   result = replace(result, 'П','P');
   result = replace(result, 'Р','R');
   result = replace(result, 'С','S');
   result = replace(result, 'Т','T');
   result = replace(result, 'У','U');
   result = replace(result, 'Ф','F');
   result = replace(result, 'Х','H');
   result = replace(result, 'Ц','TS');
   result = replace(result, 'Ч','CH');
   result = replace(result, 'Ш','SH');
   result = replace(result, 'Щ','SHT');
   result = replace(result, 'Ъ','A');
   result = replace(result, 'Ь','Y');
   result = replace(result, 'Ю','YU');
   result = replace(result, 'Я','YA');
   result = replace(result, 'а','a');
   result = replace(result, 'б','b');
   result = replace(result, 'в','v');
   result = replace(result, 'г','g');
   result = replace(result, 'д','d');
   result = replace(result, 'е','e');
   result = replace(result, 'ж','zh');
   result = replace(result, 'з','z');
   result = replace(result, 'и','i');
   result = replace(result, 'й','y');
   result = replace(result, 'к','k');
   result = replace(result, 'л','l');
   result = replace(result, 'м','m');
   result = replace(result, 'н','n');
   result = replace(result, 'о','o');
   result = replace(result, 'п','p');
   result = replace(result, 'р','r');
   result = replace(result, 'с','s');
   result = replace(result, 'т','t');
   result = replace(result, 'у','u');
   result = replace(result, 'ф','f');
   result = replace(result, 'х','h');
   result = replace(result, 'ц','ts');
   result = replace(result, 'ч','ch');
   result = replace(result, 'ш','sh');
   result = replace(result, 'щ','sht');
   result = replace(result, 'ъ','a');
   result = replace(result, 'ь','y');
   result = replace(result, 'ю','yu');
   result = replace(result, 'я','ya');
   result = replace(result, ' ','.');
   result = regexp_replace(result, '@.*', '');


   
   RETURN result;
END;
$$;


ALTER FUNCTION public.format_username(str character varying) OWNER TO postgres;

--
-- Name: check_applicant_document(); Type: FUNCTION; Schema: regprof; Owner: postgres
--

CREATE FUNCTION regprof.check_applicant_document() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE 
  apt_id integer;
    BEGIN
	
	--Proverqva dali izbraniq v zaqvlenieto applicant_documents_id e za sy6tiq ext_person, koito e izbran v zaqvlenieto!
	IF NEW.applicant_documents_id is NULL THEN RETURN NEW; END IF;
        SELECT person_id INTO apt_id FROM eservices.person_document epd where epd.id = NEW.applicant_documents_id;
	IF apt_id != NEW.applicant_id THEN RAISE EXCEPTION 'the given applicant_document_id is not for the given applicant_id....'; END IF;
        RETURN NEW;
    END;
$$;


ALTER FUNCTION regprof.check_applicant_document() OWNER TO postgres;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: address; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.address (
    id integer NOT NULL,
    email character varying(80),
    address text,
    postalcode character varying(12),
    phone character varying(25),
    fax character varying(25),
    country_id integer,
    foreign_city character varying(50),
    postalbox character varying(100),
    settlement_id integer
);


ALTER TABLE backoffice.address OWNER TO postgres;

--
-- Name: address_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.address_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.address_id_seq OWNER TO postgres;

--
-- Name: address_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.address_id_seq OWNED BY backoffice.address.id;


--
-- Name: analytic_product_files; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.analytic_product_files (
    id integer NOT NULL,
    analytic_product_id bigint,
    file_id bigint,
    doc_type_id bigint,
    description character varying(255),
    created_date timestamp with time zone,
    created_user_id integer,
    copy_type_id bigint,
    updated_user_id bigint,
    updated_date timestamp with time zone,
    outgoing_number character varying
);


ALTER TABLE backoffice.analytic_product_files OWNER TO postgres;

--
-- Name: analytic_product_files_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.analytic_product_files_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.analytic_product_files_id_seq OWNER TO postgres;

--
-- Name: analytic_product_files_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.analytic_product_files_id_seq OWNED BY backoffice.analytic_product_files.id;


--
-- Name: analytic_products; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.analytic_products (
    id integer NOT NULL,
    front_office_id bigint,
    created_date timestamp with time zone,
    created_user_id bigint,
    updated_date timestamp with time zone,
    updated_user_id bigint,
    information_product integer,
    subject text,
    keywords character varying(500),
    period_ret_from smallint,
    period_ret_to smallint,
    physical_person boolean,
    deputy boolean,
    type_payment smallint,
    applicant_id integer,
    representative_id integer,
    company_id integer,
    contact_details_id integer,
    status_id bigint,
    entry_num character varying,
    courier_name_address character varying,
    archive_num character varying(50),
    declaration boolean,
    delivery_type integer,
    representative_type character varying,
    access_code integer,
    administrative_structure character varying,
    representative_administrative_id integer
);


ALTER TABLE backoffice.analytic_products OWNER TO postgres;

--
-- Name: COLUMN analytic_products.representative_administrative_id; Type: COMMENT; Schema: backoffice; Owner: postgres
--

COMMENT ON COLUMN backoffice.analytic_products.representative_administrative_id IS 'representative (public person) for administrative structure';


--
-- Name: analytic_products_hist; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.analytic_products_hist (
    id integer NOT NULL,
    front_office_id bigint,
    created_date timestamp with time zone,
    created_user_id bigint,
    updated_date timestamp with time zone,
    updated_user_id bigint,
    information_product integer,
    subject text,
    keywords character varying(500),
    period_ret_from smallint,
    period_ret_to smallint,
    physical_person boolean,
    deputy boolean,
    type_payment smallint,
    applicant_id integer,
    representative_id integer,
    company_id integer,
    contact_details_id integer,
    status_id bigint,
    entry_num character varying,
    courier_name_address character varying,
    archive_num character varying(50),
    start_date timestamp with time zone,
    end_date timestamp with time zone,
    hist_id integer NOT NULL,
    declaration boolean,
    delivery_type integer,
    representative_type character varying,
    access_code integer,
    administrative_structure character varying,
    representative_administrative_id integer
);


ALTER TABLE backoffice.analytic_products_hist OWNER TO postgres;

--
-- Name: analytic_products_hist_hist_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.analytic_products_hist_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.analytic_products_hist_hist_id_seq OWNER TO postgres;

--
-- Name: analytic_products_hist_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.analytic_products_hist_hist_id_seq OWNED BY backoffice.analytic_products_hist.hist_id;


--
-- Name: analytic_products_hist_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.analytic_products_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.analytic_products_hist_id_seq OWNER TO postgres;

--
-- Name: analytic_products_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.analytic_products_hist_id_seq OWNED BY backoffice.analytic_products_hist.id;


--
-- Name: analytic_products_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.analytic_products_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.analytic_products_id_seq OWNER TO postgres;

--
-- Name: analytic_products_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.analytic_products_id_seq OWNED BY backoffice.analytic_products.id;


--
-- Name: app_status_docflow_entry_num_series; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.app_status_docflow_entry_num_series (
    app_status_docflow_id bigint NOT NULL,
    entry_num_series_id bigint NOT NULL
);


ALTER TABLE backoffice.app_status_docflow_entry_num_series OWNER TO postgres;

--
-- Name: app_status_docflow_history; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.app_status_docflow_history (
    id integer NOT NULL,
    application_id integer NOT NULL,
    app_status_docflow_id integer NOT NULL,
    date_assigned date NOT NULL,
    user_assigned integer NOT NULL
);


ALTER TABLE backoffice.app_status_docflow_history OWNER TO postgres;

--
-- Name: app_status_docflow_history_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.app_status_docflow_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.app_status_docflow_history_id_seq OWNER TO postgres;

--
-- Name: app_status_docflow_history_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.app_status_docflow_history_id_seq OWNED BY backoffice.app_status_docflow_history.id;


--
-- Name: app_status_entry_num_series; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.app_status_entry_num_series (
    app_status_id bigint NOT NULL,
    entry_num_series_id bigint NOT NULL,
    is_legal smallint DEFAULT 0 NOT NULL
);


ALTER TABLE backoffice.app_status_entry_num_series OWNER TO postgres;

--
-- Name: assignment; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.assignment (
    id integer NOT NULL,
    app_id bigint,
    entry_num_series_id bigint,
    user_id bigint,
    created_date timestamp with time zone,
    created_user_id bigint,
    updated_date timestamp with time zone,
    updated_user_id bigint
);


ALTER TABLE backoffice.assignment OWNER TO postgres;

--
-- Name: assignment_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.assignment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.assignment_id_seq OWNER TO postgres;

--
-- Name: assignment_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.assignment_id_seq OWNED BY backoffice.assignment.id;


--
-- Name: bibliographic_references; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.bibliographic_references (
    id integer NOT NULL,
    front_office_id bigint,
    created_date timestamp with time zone,
    created_user_id bigint,
    updated_date timestamp with time zone,
    updated_user_id bigint,
    libary_bg boolean,
    libary_bg_desc boolean,
    libary_foreign boolean,
    libary_foreign_desc boolean,
    libary_foreign_desc_abstract boolean,
    subject text,
    keywords character varying(500),
    period_ret_from smallint,
    period_ret_to smallint,
    bg_language_of_publication boolean,
    ond_language_of_publication boolean,
    eng_language_of_publication boolean,
    fr_language_of_publication boolean,
    de_language_of_publication boolean,
    physical_person boolean,
    deputy boolean,
    type_payment smallint,
    applicant_id integer,
    representative_id integer,
    company_id integer,
    contact_details_id integer,
    status_id bigint,
    entry_num character varying,
    courier_name_address character varying,
    declaration boolean,
    delivery_type integer,
    representative_type character varying,
    access_code integer,
    administrative_structure character varying,
    representative_administrative_id integer,
    archive_num character varying(50)
);


ALTER TABLE backoffice.bibliographic_references OWNER TO postgres;

--
-- Name: bibliographic_references_files; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.bibliographic_references_files (
    id integer NOT NULL,
    bibliographic_references_id bigint,
    file_id bigint,
    doc_type_id bigint,
    description character varying(255),
    created_date timestamp with time zone,
    created_user_id integer,
    copy_type_id bigint,
    updated_user_id bigint,
    updated_date timestamp with time zone,
    outgoing_number character varying
);


ALTER TABLE backoffice.bibliographic_references_files OWNER TO postgres;

--
-- Name: bibliographic_references_files_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.bibliographic_references_files_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.bibliographic_references_files_id_seq OWNER TO postgres;

--
-- Name: bibliographic_references_files_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.bibliographic_references_files_id_seq OWNED BY backoffice.bibliographic_references_files.id;


--
-- Name: bibliographic_references_hist; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.bibliographic_references_hist (
    id integer NOT NULL,
    front_office_id bigint,
    created_date timestamp with time zone,
    created_user_id bigint,
    updated_date timestamp with time zone,
    updated_user_id bigint,
    libary_bg boolean,
    libary_bg_desc boolean,
    libary_foreign boolean,
    libary_foreign_desc boolean,
    libary_foreign_desc_abstract boolean,
    subject text,
    keywords character varying(500),
    period_ret_from smallint,
    period_ret_to smallint,
    bg_language_of_publication boolean,
    ond_language_of_publication boolean,
    eng_language_of_publication boolean,
    fr_language_of_publication boolean,
    de_language_of_publication boolean,
    physical_person boolean,
    deputy boolean,
    type_payment smallint,
    applicant_id integer,
    representative_id integer,
    company_id integer,
    contact_details_id integer,
    status_id bigint,
    entry_num character varying,
    courier_name_address character varying,
    declaration boolean,
    delivery_type integer,
    representative_type character varying,
    access_code integer,
    administrative_structure character varying,
    representative_administrative_id integer,
    start_date timestamp with time zone,
    end_date timestamp with time zone,
    hist_id integer NOT NULL,
    archive_num character varying(50)
);


ALTER TABLE backoffice.bibliographic_references_hist OWNER TO postgres;

--
-- Name: bibliographic_references_hist_hist_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.bibliographic_references_hist_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.bibliographic_references_hist_hist_id_seq OWNER TO postgres;

--
-- Name: bibliographic_references_hist_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.bibliographic_references_hist_hist_id_seq OWNED BY backoffice.bibliographic_references_hist.hist_id;


--
-- Name: bibliographic_references_hist_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.bibliographic_references_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.bibliographic_references_hist_id_seq OWNER TO postgres;

--
-- Name: bibliographic_references_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.bibliographic_references_hist_id_seq OWNED BY backoffice.bibliographic_references_hist.id;


--
-- Name: bibliographic_references_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.bibliographic_references_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.bibliographic_references_id_seq OWNER TO postgres;

--
-- Name: bibliographic_references_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.bibliographic_references_id_seq OWNED BY backoffice.bibliographic_references.id;


--
-- Name: company; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.company (
    id integer NOT NULL,
    name character varying(100) NOT NULL,
    country_id integer NOT NULL,
    city character varying(30),
    pcode character varying(5),
    addr_details text,
    contact_phone character varying(80),
    date_from date,
    date_to date,
    settlement_id integer,
    eik character varying(13)
);


ALTER TABLE backoffice.company OWNER TO postgres;

--
-- Name: company_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.company_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.company_id_seq OWNER TO postgres;

--
-- Name: company_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.company_id_seq OWNED BY backoffice.company.id;


--
-- Name: doc_type_entry_num_series; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.doc_type_entry_num_series (
    doc_type_id integer NOT NULL,
    num_series_id integer NOT NULL,
    out_for_user integer
);


ALTER TABLE backoffice.doc_type_entry_num_series OWNER TO postgres;

--
-- Name: document; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.document (
    id integer NOT NULL,
    data text,
    digital_catalogue boolean,
    bg_library boolean,
    foreign_library boolean,
    delivery_type integer,
    document_delivery_id integer
);


ALTER TABLE backoffice.document OWNER TO postgres;

--
-- Name: document_delivery_files; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.document_delivery_files (
    id integer NOT NULL,
    document_delivery_id bigint,
    file_id bigint,
    doc_type_id bigint,
    description character varying(255),
    created_date timestamp with time zone,
    created_user_id integer,
    copy_type_id bigint,
    updated_user_id bigint,
    updated_date timestamp with time zone,
    outgoing_number character varying
);


ALTER TABLE backoffice.document_delivery_files OWNER TO postgres;

--
-- Name: document_delivery_files_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.document_delivery_files_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.document_delivery_files_id_seq OWNER TO postgres;

--
-- Name: document_delivery_files_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.document_delivery_files_id_seq OWNED BY backoffice.document_delivery_files.id;


--
-- Name: document_deliverys; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.document_deliverys (
    id integer NOT NULL,
    archive_num character varying(50),
    front_office_id bigint,
    entry_num character varying,
    status_id bigint,
    created_user_id bigint,
    updated_user_id bigint,
    applicant_id bigint,
    representative_id bigint,
    company_id bigint,
    contact_details_id bigint,
    reg_num character varying(50),
    kind integer,
    type_payment smallint,
    courier_address character varying,
    access_code integer,
    deputy boolean,
    delivery_type integer,
    declaration boolean,
    representative_quality character varying,
    created_date timestamp with time zone,
    updated_date timestamp with time zone
);


ALTER TABLE backoffice.document_deliverys OWNER TO postgres;

--
-- Name: document_deliverys_hist; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.document_deliverys_hist (
    id integer NOT NULL,
    archive_num character varying(50),
    front_office_id bigint,
    entry_num character varying,
    status_id bigint,
    created_user_id bigint,
    updated_user_id bigint,
    applicant_id bigint,
    representative_id bigint,
    company_id bigint,
    contact_details_id bigint,
    reg_num character varying(50),
    kind integer,
    type_payment smallint,
    courier_address character varying,
    access_code integer,
    deputy boolean,
    delivery_type integer,
    declaration boolean,
    representative_quality character varying,
    created_date timestamp with time zone,
    updated_date timestamp with time zone,
    start_date timestamp with time zone,
    end_date timestamp with time zone,
    hist_id integer NOT NULL
);


ALTER TABLE backoffice.document_deliverys_hist OWNER TO postgres;

--
-- Name: document_deliverys_hist_hist_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.document_deliverys_hist_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.document_deliverys_hist_hist_id_seq OWNER TO postgres;

--
-- Name: document_deliverys_hist_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.document_deliverys_hist_hist_id_seq OWNED BY backoffice.document_deliverys_hist.hist_id;


--
-- Name: document_deliverys_hist_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.document_deliverys_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.document_deliverys_hist_id_seq OWNER TO postgres;

--
-- Name: document_deliverys_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.document_deliverys_hist_id_seq OWNED BY backoffice.document_deliverys_hist.id;


--
-- Name: document_deliverys_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.document_deliverys_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.document_deliverys_id_seq OWNER TO postgres;

--
-- Name: document_deliverys_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.document_deliverys_id_seq OWNED BY backoffice.document_deliverys.id;


--
-- Name: document_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.document_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.document_id_seq OWNER TO postgres;

--
-- Name: document_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.document_id_seq OWNED BY backoffice.document.id;


--
-- Name: impact_factor_report_rows; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.impact_factor_report_rows (
    id integer NOT NULL,
    inquiry_id integer,
    title character varying(255),
    year character varying(20),
    issn character varying(20),
    impact character varying(20)
);


ALTER TABLE backoffice.impact_factor_report_rows OWNER TO postgres;

--
-- Name: impact_factor_report_rows_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.impact_factor_report_rows_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.impact_factor_report_rows_id_seq OWNER TO postgres;

--
-- Name: impact_factor_report_rows_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.impact_factor_report_rows_id_seq OWNED BY backoffice.impact_factor_report_rows.id;


--
-- Name: inquiry; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.inquiry (
    id integer NOT NULL,
    front_office_id bigint,
    status_id bigint,
    entry_num character varying,
    created_date timestamp with time zone,
    created_user_id bigint,
    updated_date timestamp with time zone,
    updated_user_id bigint,
    information_product integer,
    deputy boolean,
    type_payment smallint,
    applicant_id integer,
    company_id integer,
    representative_id integer,
    representative_type character varying,
    contact_details_id integer,
    courier_name_address character varying,
    declaration boolean,
    delivery_type integer,
    access_code integer,
    archive_num character varying(50),
    prefix character varying(20),
    suffix character varying(20),
    citings_period character varying(20),
    citings_count character varying(20)
);


ALTER TABLE backoffice.inquiry OWNER TO postgres;

--
-- Name: inquiry_files; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.inquiry_files (
    id integer NOT NULL,
    inquiry_id bigint,
    file_id bigint,
    doc_type_id bigint,
    description character varying(255),
    created_date timestamp with time zone,
    created_user_id integer,
    copy_type_id bigint,
    updated_user_id bigint,
    updated_date timestamp with time zone,
    outgoing_number character varying
);


ALTER TABLE backoffice.inquiry_files OWNER TO postgres;

--
-- Name: inquiry_files_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.inquiry_files_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.inquiry_files_id_seq OWNER TO postgres;

--
-- Name: inquiry_files_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.inquiry_files_id_seq OWNED BY backoffice.inquiry_files.id;


--
-- Name: inquiry_hist; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.inquiry_hist (
    id integer NOT NULL,
    front_office_id bigint,
    status_id bigint,
    entry_num character varying,
    created_date timestamp with time zone,
    created_user_id bigint,
    updated_date timestamp with time zone,
    updated_user_id bigint,
    information_product integer,
    deputy boolean,
    type_payment smallint,
    applicant_id integer,
    company_id integer,
    representative_id integer,
    representative_type character varying,
    contact_details_id integer,
    courier_name_address character varying,
    declaration boolean,
    delivery_type integer,
    access_code integer,
    archive_num character varying(50),
    hist_id integer NOT NULL,
    start_date timestamp with time zone,
    end_date timestamp with time zone,
    prefix character varying(20),
    suffix character varying(20),
    citings_period character varying(20),
    citings_count character varying(20)
);


ALTER TABLE backoffice.inquiry_hist OWNER TO postgres;

--
-- Name: inquiry_hist_hist_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.inquiry_hist_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.inquiry_hist_hist_id_seq OWNER TO postgres;

--
-- Name: inquiry_hist_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.inquiry_hist_hist_id_seq OWNED BY backoffice.inquiry_hist.hist_id;


--
-- Name: inquiry_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.inquiry_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.inquiry_id_seq OWNER TO postgres;

--
-- Name: inquiry_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.inquiry_id_seq OWNED BY backoffice.inquiry.id;


--
-- Name: notes; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.notes (
    id integer NOT NULL,
    app_id bigint,
    entry_num_series_id bigint,
    created_user_id bigint,
    status_app_id bigint,
    created_date timestamp with time zone,
    note character varying(255),
    updated_user_id bigint,
    updated_date timestamp with time zone
);


ALTER TABLE backoffice.notes OWNER TO postgres;

--
-- Name: notes_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.notes_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.notes_id_seq OWNER TO postgres;

--
-- Name: notes_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.notes_id_seq OWNED BY backoffice.notes.id;


--
-- Name: notifications; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.notifications (
    id integer NOT NULL,
    app_id bigint,
    entry_num_series_id bigint,
    user_id bigint,
    user_type integer,
    updated_user_id bigint,
    created_user_id bigint,
    updated_date timestamp with time zone,
    created_date timestamp with time zone
);


ALTER TABLE backoffice.notifications OWNER TO postgres;

--
-- Name: notifications_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.notifications_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.notifications_id_seq OWNER TO postgres;

--
-- Name: notifications_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.notifications_id_seq OWNED BY backoffice.notifications.id;


--
-- Name: official_note_files; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.official_note_files (
    id integer NOT NULL,
    official_note_id bigint,
    file_id bigint,
    doc_type_id bigint,
    description character varying(255),
    created_date timestamp with time zone,
    created_user_id integer,
    copy_type_id bigint,
    updated_user_id bigint,
    updated_date timestamp with time zone,
    outgoing_number character varying
);


ALTER TABLE backoffice.official_note_files OWNER TO postgres;

--
-- Name: official_note_files_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.official_note_files_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.official_note_files_id_seq OWNER TO postgres;

--
-- Name: official_note_files_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.official_note_files_id_seq OWNED BY backoffice.official_note_files.id;


--
-- Name: official_notes; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.official_notes (
    id integer NOT NULL,
    front_office_id bigint,
    created_date timestamp with time zone,
    created_user_id bigint,
    updated_date timestamp with time zone,
    updated_user_id bigint,
    detailed_information text,
    kind integer,
    type_payment smallint,
    delivery_type integer,
    declaration boolean,
    applicant_id integer,
    physical_person boolean,
    company_id integer,
    representative_id integer,
    deputy boolean,
    representative_quality character varying,
    contact_details_id integer,
    status_id bigint,
    entry_num character varying,
    courier_address character varying,
    access_code integer,
    archive_num character varying(50),
    dissert_field text,
    akad_field text,
    prefix character varying(20),
    suffix character varying(20),
    nir_field text,
    first_applicant character varying(50),
    last_applicant character varying(50),
    draft_title text,
    draft_length character varying(10),
    draft_presented text,
    draft_num character varying(20),
    draft_applicant character varying(50),
    draft_protocol character varying(20),
    draft_date character varying(20)
);


ALTER TABLE backoffice.official_notes OWNER TO postgres;

--
-- Name: official_notes_hist; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.official_notes_hist (
    id integer NOT NULL,
    hist_id integer NOT NULL,
    front_office_id bigint,
    created_date timestamp with time zone,
    created_user_id bigint,
    updated_date timestamp with time zone,
    updated_user_id bigint,
    detailed_information text,
    kind integer,
    type_payment smallint,
    delivery_type integer,
    declaration boolean,
    applicant_id integer,
    physical_person boolean,
    company_id integer,
    representative_id integer,
    deputy boolean,
    representative_quality character varying,
    contact_details_id integer,
    status_id bigint,
    entry_num character varying,
    courier_address character varying,
    access_code integer,
    archive_num character varying(50),
    start_date timestamp with time zone,
    end_date timestamp with time zone,
    dissert_field text,
    akad_field text,
    prefix character varying(20),
    suffix character varying(20),
    nir_field text,
    first_applicant character varying(50),
    last_applicant character varying(50),
    draft_title text,
    draft_length character varying(10),
    draft_presented text,
    draft_num character varying(20),
    draft_applicant character varying(50),
    draft_protocol character varying(20),
    draft_date character varying(20)
);


ALTER TABLE backoffice.official_notes_hist OWNER TO postgres;

--
-- Name: official_notes_hist_hist_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.official_notes_hist_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.official_notes_hist_hist_id_seq OWNER TO postgres;

--
-- Name: official_notes_hist_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.official_notes_hist_hist_id_seq OWNED BY backoffice.official_notes_hist.hist_id;


--
-- Name: official_notes_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.official_notes_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.official_notes_id_seq OWNER TO postgres;

--
-- Name: official_notes_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.official_notes_id_seq OWNED BY backoffice.official_notes.id;


--
-- Name: person; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.person (
    id integer NOT NULL,
    fname character varying(50) NOT NULL,
    sname character varying(50),
    lname character varying(50) NOT NULL,
    civil_id character varying(50),
    civil_id_type integer,
    birth_country_id integer,
    birth_city character varying(30),
    birth_date date,
    citizenship_id integer,
    email character varying(100) NOT NULL,
    hash_code character varying(50),
    user_id integer,
    address_id integer
);


ALTER TABLE backoffice.person OWNER TO postgres;

--
-- Name: person_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.person_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.person_id_seq OWNER TO postgres;

--
-- Name: person_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.person_id_seq OWNED BY backoffice.person.id;


--
-- Name: public_access; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.public_access (
    id integer NOT NULL,
    front_office_id bigint,
    applicant_type integer,
    person_id integer,
    company_id integer,
    representative_id integer,
    representative_position text,
    about text,
    oral boolean,
    review boolean,
    paper boolean,
    technical boolean,
    comment text,
    email_notifications boolean,
    address_id integer,
    representative_type integer,
    created_date timestamp with time zone,
    created_user_id bigint,
    updated_date timestamp with time zone,
    updated_user_id bigint,
    entry_num character varying,
    status_id bigint,
    archive_num character varying(50)
);


ALTER TABLE backoffice.public_access OWNER TO postgres;

--
-- Name: public_access_files; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.public_access_files (
    id integer NOT NULL,
    public_access_id bigint,
    file_id bigint,
    doc_type_id bigint,
    description character varying(255),
    public_access_num character varying(20),
    created_date timestamp with time zone,
    created_user_id integer,
    copy_type_id bigint,
    updated_user_id bigint,
    updated_date timestamp with time zone,
    outgoing_number character varying
);


ALTER TABLE backoffice.public_access_files OWNER TO postgres;

--
-- Name: public_access_files_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.public_access_files_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.public_access_files_id_seq OWNER TO postgres;

--
-- Name: public_access_files_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.public_access_files_id_seq OWNED BY backoffice.public_access_files.id;


--
-- Name: public_access_hist; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.public_access_hist (
    id integer NOT NULL,
    applicant_type integer,
    person_id integer,
    company_id integer,
    representative_id integer,
    representative_position text,
    about text,
    oral boolean,
    review boolean,
    paper boolean,
    technical boolean,
    comment text,
    email_notifications boolean,
    address_id integer,
    representative_type integer,
    created_date timestamp with time zone,
    created_user_id bigint,
    updated_date timestamp with time zone,
    updated_user_id bigint,
    entry_num character varying,
    status_id bigint,
    archive_num character varying(50),
    start_date timestamp with time zone,
    end_date timestamp with time zone,
    hist_id integer NOT NULL,
    front_office_id bigint
);


ALTER TABLE backoffice.public_access_hist OWNER TO postgres;

--
-- Name: public_access_hist_hist_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.public_access_hist_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.public_access_hist_hist_id_seq OWNER TO postgres;

--
-- Name: public_access_hist_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.public_access_hist_hist_id_seq OWNED BY backoffice.public_access_hist.hist_id;


--
-- Name: public_access_hist_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.public_access_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.public_access_hist_id_seq OWNER TO postgres;

--
-- Name: public_access_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.public_access_hist_id_seq OWNED BY backoffice.public_access_hist.id;


--
-- Name: public_access_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.public_access_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.public_access_id_seq OWNER TO postgres;

--
-- Name: public_access_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.public_access_id_seq OWNED BY backoffice.public_access.id;


--
-- Name: public_person; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.public_person (
    id integer NOT NULL,
    fname character varying(50),
    sname character varying(50),
    lname character varying(50),
    address character varying(255),
    onames character varying(255)
);


ALTER TABLE backoffice.public_person OWNER TO postgres;

--
-- Name: public_person_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.public_person_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.public_person_id_seq OWNER TO postgres;

--
-- Name: public_person_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.public_person_id_seq OWNED BY backoffice.public_person.id;


--
-- Name: signal_files; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.signal_files (
    id integer NOT NULL,
    signal_id bigint,
    file_id bigint,
    doc_type_id bigint,
    description character varying(255),
    signal_num character varying(20),
    created_date timestamp with time zone,
    created_user_id integer,
    copy_type_id bigint,
    updated_user_id bigint,
    updated_date timestamp with time zone,
    outgoing_number character varying
);


ALTER TABLE backoffice.signal_files OWNER TO postgres;

--
-- Name: signal_files_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.signal_files_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.signal_files_id_seq OWNER TO postgres;

--
-- Name: signal_files_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.signal_files_id_seq OWNED BY backoffice.signal_files.id;


--
-- Name: signals; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.signals (
    id integer NOT NULL,
    front_office_id bigint,
    created_date timestamp with time zone,
    entry_num character varying,
    status_id integer,
    created_user_id integer,
    updated_date timestamp with time zone,
    updated_user_id integer,
    applicant_id integer,
    representative_id integer,
    has_representative boolean,
    violation_text character varying,
    violation_place character varying,
    checktime_text character varying,
    damage_text character varying,
    actions_text character varying,
    files_text character varying,
    company_id integer,
    contact_details_id integer,
    archive_num character varying(50)
);


ALTER TABLE backoffice.signals OWNER TO postgres;

--
-- Name: signals_hist; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.signals_hist (
    id integer NOT NULL,
    front_office_id bigint,
    created_date timestamp with time zone,
    entry_num character varying,
    status_id integer,
    created_user_id integer,
    updated_date timestamp with time zone,
    updated_user_id integer,
    applicant_id integer,
    representative_id integer,
    has_representative boolean,
    violation_text character varying,
    violation_place character varying,
    checktime_text character varying,
    damage_text character varying,
    actions_text character varying,
    files_text character varying,
    company_id integer,
    contact_details_id integer,
    archive_num character varying(50),
    start_date timestamp with time zone,
    end_date timestamp with time zone,
    hist_id integer NOT NULL
);


ALTER TABLE backoffice.signals_hist OWNER TO postgres;

--
-- Name: signals_hist_hist_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.signals_hist_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.signals_hist_hist_id_seq OWNER TO postgres;

--
-- Name: signals_hist_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.signals_hist_hist_id_seq OWNED BY backoffice.signals_hist.hist_id;


--
-- Name: signals_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.signals_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.signals_id_seq OWNER TO postgres;

--
-- Name: signals_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.signals_id_seq OWNED BY backoffice.signals.id;


--
-- Name: suggestions; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.suggestions (
    id integer NOT NULL,
    front_office_id bigint,
    created_date timestamp with time zone,
    updated_date timestamp with time zone,
    status_id integer,
    created_user_id integer,
    updated_user_id integer,
    applicant_id integer,
    representative_id integer,
    has_representative boolean,
    suggestion_text character varying,
    files_text character varying,
    contact_details_id integer,
    company_id integer,
    archive_num character varying(50),
    entry_num character varying
);


ALTER TABLE backoffice.suggestions OWNER TO postgres;

--
-- Name: suggestions_files; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.suggestions_files (
    id integer NOT NULL,
    suggestion_id bigint,
    file_id bigint,
    doc_type_id bigint,
    description character varying(255),
    suggestion_num character varying(20),
    created_date timestamp with time zone,
    created_user_id integer,
    copy_type_id bigint,
    updated_user_id bigint,
    updated_date timestamp with time zone,
    outgoing_number character varying
);


ALTER TABLE backoffice.suggestions_files OWNER TO postgres;

--
-- Name: suggestions_files_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.suggestions_files_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.suggestions_files_id_seq OWNER TO postgres;

--
-- Name: suggestions_files_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.suggestions_files_id_seq OWNED BY backoffice.suggestions_files.id;


--
-- Name: suggestions_hist; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.suggestions_hist (
    id integer NOT NULL,
    front_office_id bigint,
    created_date timestamp with time zone,
    updated_date timestamp with time zone,
    status_id integer,
    created_user_id integer,
    updated_user_id integer,
    applicant_id integer,
    representative_id integer,
    has_representative boolean,
    suggestion_text character varying,
    files_text character varying,
    contact_details_id integer,
    company_id integer,
    start_date timestamp with time zone,
    end_date timestamp with time zone,
    hist_id integer NOT NULL,
    archive_num character varying(50),
    entry_num character varying
);


ALTER TABLE backoffice.suggestions_hist OWNER TO postgres;

--
-- Name: suggestions_hist_sugg_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.suggestions_hist_sugg_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.suggestions_hist_sugg_id_seq OWNER TO postgres;

--
-- Name: suggestions_hist_sugg_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.suggestions_hist_sugg_id_seq OWNED BY backoffice.suggestions_hist.hist_id;


--
-- Name: suggestions_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.suggestions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.suggestions_id_seq OWNER TO postgres;

--
-- Name: suggestions_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.suggestions_id_seq OWNED BY backoffice.suggestions.id;


--
-- Name: templates; Type: TABLE; Schema: backoffice; Owner: postgres
--

CREATE TABLE backoffice.templates (
    id integer NOT NULL,
    app_id bigint,
    doc_id bigint,
    title character varying(255),
    sort bigint,
    is_activ boolean,
    created_user_id bigint,
    created_date timestamp with time zone,
    updated_date time with time zone,
    updated_user_id bigint
);


ALTER TABLE backoffice.templates OWNER TO postgres;

--
-- Name: templates_id_seq; Type: SEQUENCE; Schema: backoffice; Owner: postgres
--

CREATE SEQUENCE backoffice.templates_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE backoffice.templates_id_seq OWNER TO postgres;

--
-- Name: templates_id_seq; Type: SEQUENCE OWNED BY; Schema: backoffice; Owner: postgres
--

ALTER SEQUENCE backoffice.templates_id_seq OWNED BY backoffice.templates.id;


--
-- Name: blobs; Type: TABLE; Schema: blobs; Owner: postgres
--

CREATE TABLE blobs.blobs (
    id integer NOT NULL,
    filename text NOT NULL,
    content_type character varying(100) NOT NULL,
    filesize integer,
    content bytea,
    created_date timestamp with time zone DEFAULT now() NOT NULL,
    rudi_user_created integer,
    created_user_id bigint,
    file_location character varying(255)
);


ALTER TABLE blobs.blobs OWNER TO postgres;

--
-- Name: blobs_id_seq; Type: SEQUENCE; Schema: blobs; Owner: postgres
--

CREATE SEQUENCE blobs.blobs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE blobs.blobs_id_seq OWNER TO postgres;

--
-- Name: blobs_id_seq; Type: SEQUENCE OWNED BY; Schema: blobs; Owner: postgres
--

ALTER SEQUENCE blobs.blobs_id_seq OWNED BY blobs.blobs.id;


--
-- Name: blobs2; Type: TABLE; Schema: blobs; Owner: postgres
--

CREATE TABLE blobs.blobs2 (
    id integer DEFAULT nextval('blobs.blobs_id_seq'::regclass) NOT NULL,
    filename text NOT NULL,
    content_type character varying(100) NOT NULL,
    filesize integer,
    content bytea NOT NULL,
    created_date timestamp with time zone DEFAULT now() NOT NULL,
    rudi_user_created integer,
    created_user_id bigint
);


ALTER TABLE blobs.blobs2 OWNER TO postgres;

--
-- Name: address; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.address (
    id integer NOT NULL,
    email character varying(80),
    address text,
    postalcode character varying(12),
    phone character varying(25),
    fax character varying(25),
    country_id integer,
    settlement_id integer,
    foreign_city character varying(50),
    postalbox character varying(100)
);


ALTER TABLE eservices.address OWNER TO postgres;

--
-- Name: address_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.address_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.address_id_seq OWNER TO postgres;

--
-- Name: address_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.address_id_seq OWNED BY eservices.address.id;


--
-- Name: analytic_product_files; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.analytic_product_files (
    analytic_products_id integer NOT NULL,
    blob_id integer NOT NULL
);


ALTER TABLE eservices.analytic_product_files OWNER TO postgres;

--
-- Name: analytic_products; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.analytic_products (
    id integer NOT NULL,
    created_date timestamp with time zone,
    created_user_id bigint,
    updated_date timestamp with time zone,
    updated_user_id bigint,
    information_product integer,
    subject text,
    keywords character varying(500),
    period_ret_from smallint,
    period_ret_to smallint,
    physical_person boolean,
    deputy boolean,
    type_payment smallint,
    applicant_id integer,
    representative_id integer,
    company_id integer,
    contact_details_id integer,
    status_id bigint,
    entry_num character varying,
    courier_name_address character varying,
    declaration boolean,
    delivery_type integer,
    representative_type character varying,
    access_code integer,
    administrative_structure character varying,
    representative_administrative_id integer
);


ALTER TABLE eservices.analytic_products OWNER TO postgres;

--
-- Name: COLUMN analytic_products.representative_administrative_id; Type: COMMENT; Schema: eservices; Owner: postgres
--

COMMENT ON COLUMN eservices.analytic_products.representative_administrative_id IS 'representative (public person) for administrative structure';


--
-- Name: analytic_products_hist; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.analytic_products_hist (
    id integer NOT NULL,
    created_date timestamp with time zone,
    created_user_id bigint,
    updated_date timestamp with time zone,
    updated_user_id bigint,
    information_product integer,
    subject text,
    keywords character varying(500),
    period_ret_from smallint,
    period_ret_to smallint,
    physical_person boolean,
    deputy boolean,
    type_payment smallint,
    applicant_id integer,
    representative_id integer,
    company_id integer,
    contact_details_id integer,
    status_id bigint,
    entry_num character varying,
    courier_name_address character varying,
    declaration boolean,
    delivery_type integer,
    representative_type character varying,
    access_code integer,
    administrative_structure character varying,
    representative_administrative_id integer,
    start_date timestamp with time zone,
    end_date timestamp with time zone,
    hist_id integer NOT NULL
);


ALTER TABLE eservices.analytic_products_hist OWNER TO postgres;

--
-- Name: analytic_products_hist_hist_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.analytic_products_hist_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.analytic_products_hist_hist_id_seq OWNER TO postgres;

--
-- Name: analytic_products_hist_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.analytic_products_hist_hist_id_seq OWNED BY eservices.analytic_products_hist.hist_id;


--
-- Name: analytic_products_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.analytic_products_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.analytic_products_id_seq OWNER TO postgres;

--
-- Name: analytic_products_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.analytic_products_id_seq OWNED BY eservices.analytic_products.id;


--
-- Name: application; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.application (
    id integer NOT NULL,
    app_num character varying(20),
    app_date timestamp with time zone,
    training_course_id integer
);


ALTER TABLE eservices.application OWNER TO postgres;

--
-- Name: application_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.application_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.application_id_seq OWNER TO postgres;

--
-- Name: application_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.application_id_seq OWNED BY eservices.application.id;


--
-- Name: application_university; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.application_university (
    application_id bigint NOT NULL,
    university_id bigint NOT NULL
);


ALTER TABLE eservices.application_university OWNER TO postgres;

--
-- Name: bibliographic_references; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.bibliographic_references (
    id integer NOT NULL,
    created_date timestamp with time zone,
    created_user_id bigint,
    updated_date timestamp with time zone,
    updated_user_id bigint,
    libary_bg boolean,
    libary_bg_desc boolean,
    libary_foreign boolean,
    libary_foreign_desc boolean,
    libary_foreign_desc_abstract boolean,
    subject text,
    keywords character varying(500),
    period_ret_from smallint,
    period_ret_to smallint,
    bg_language_of_publication boolean,
    ond_language_of_publication boolean,
    eng_language_of_publication boolean,
    fr_language_of_publication boolean,
    de_language_of_publication boolean,
    physical_person boolean,
    deputy boolean,
    type_payment smallint,
    applicant_id integer,
    representative_id integer,
    company_id integer,
    contact_details_id integer,
    status_id bigint,
    entry_num character varying,
    courier_name_address character varying,
    declaration boolean,
    delivery_type integer,
    representative_type character varying,
    access_code integer,
    administrative_structure character varying,
    representative_administrative_id integer
);


ALTER TABLE eservices.bibliographic_references OWNER TO postgres;

--
-- Name: COLUMN bibliographic_references.representative_administrative_id; Type: COMMENT; Schema: eservices; Owner: postgres
--

COMMENT ON COLUMN eservices.bibliographic_references.representative_administrative_id IS 'representative (public person) for administrative structure';


--
-- Name: bibliographic_references_files; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.bibliographic_references_files (
    bibliographic_references_id integer NOT NULL,
    blob_id integer NOT NULL
);


ALTER TABLE eservices.bibliographic_references_files OWNER TO postgres;

--
-- Name: bibliographic_references_hist; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.bibliographic_references_hist (
    id integer NOT NULL,
    created_date timestamp with time zone,
    created_user_id bigint,
    updated_date timestamp with time zone,
    updated_user_id bigint,
    libary_bg boolean,
    libary_bg_desc boolean,
    libary_foreign boolean,
    libary_foreign_desc boolean,
    libary_foreign_desc_abstract boolean,
    subject text,
    keywords character varying(500),
    period_ret_from smallint,
    period_ret_to smallint,
    bg_language_of_publication boolean,
    ond_language_of_publication boolean,
    eng_language_of_publication boolean,
    fr_language_of_publication boolean,
    de_language_of_publication boolean,
    physical_person boolean,
    deputy boolean,
    type_payment smallint,
    applicant_id integer,
    representative_id integer,
    company_id integer,
    contact_details_id integer,
    status_id bigint,
    entry_num character varying,
    courier_name_address character varying,
    declaration boolean,
    delivery_type integer,
    representative_type character varying,
    access_code integer,
    administrative_structure character varying,
    representative_administrative_id integer,
    start_date timestamp with time zone,
    end_date timestamp with time zone,
    hist_id integer NOT NULL
);


ALTER TABLE eservices.bibliographic_references_hist OWNER TO postgres;

--
-- Name: bibliographic_references_hist_hist_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.bibliographic_references_hist_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.bibliographic_references_hist_hist_id_seq OWNER TO postgres;

--
-- Name: bibliographic_references_hist_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.bibliographic_references_hist_hist_id_seq OWNED BY eservices.bibliographic_references_hist.hist_id;


--
-- Name: bibliographic_references_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.bibliographic_references_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.bibliographic_references_id_seq OWNER TO postgres;

--
-- Name: bibliographic_references_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.bibliographic_references_id_seq OWNED BY eservices.bibliographic_references.id;


--
-- Name: company; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.company (
    id integer NOT NULL,
    name character varying(100) NOT NULL,
    country_id integer NOT NULL,
    city character varying(30),
    pcode character varying(5),
    addr_details text,
    contact_phone character varying(80),
    date_from date,
    date_to date,
    settlement_id integer,
    eik character varying(13)
);


ALTER TABLE eservices.company OWNER TO postgres;

--
-- Name: company_hist; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.company_hist (
    hist_id integer NOT NULL,
    start_date timestamp with time zone,
    end_date timestamp with time zone,
    id integer NOT NULL,
    name character varying(100) NOT NULL,
    country_id integer NOT NULL,
    city character varying(30),
    pcode character varying(5),
    addr_details text,
    contact_phone character varying(80),
    date_from date,
    date_to date,
    settlement_id integer,
    eik character varying(13)
);


ALTER TABLE eservices.company_hist OWNER TO postgres;

--
-- Name: company_hist_hist_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.company_hist_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.company_hist_hist_id_seq OWNER TO postgres;

--
-- Name: company_hist_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.company_hist_hist_id_seq OWNED BY eservices.company_hist.hist_id;


--
-- Name: company_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.company_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.company_id_seq OWNER TO postgres;

--
-- Name: company_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.company_id_seq OWNED BY eservices.company.id;


--
-- Name: document; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.document (
    id integer NOT NULL,
    data text,
    digital_catalogue boolean,
    bg_library boolean,
    foreign_library boolean,
    delivery_type integer,
    document_delivery_id integer
);


ALTER TABLE eservices.document OWNER TO postgres;

--
-- Name: document_delivery; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.document_delivery (
    id integer NOT NULL,
    created_date timestamp with time zone,
    entry_num character varying,
    status_id bigint,
    created_user_id bigint,
    updated_date timestamp with time zone,
    updated_user_id bigint,
    applicant_id bigint,
    representative_id bigint,
    company_id bigint,
    contact_details_id bigint,
    reg_num character varying(50),
    kind integer,
    type_payment smallint,
    courier_address character varying,
    access_code integer,
    deputy boolean,
    delivery_type integer,
    declaration boolean,
    representative_quality character varying
);


ALTER TABLE eservices.document_delivery OWNER TO postgres;

--
-- Name: document_delivery_files; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.document_delivery_files (
    document_delivery_id integer NOT NULL,
    blob_id integer NOT NULL
);


ALTER TABLE eservices.document_delivery_files OWNER TO postgres;

--
-- Name: document_delivery_hist; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.document_delivery_hist (
    id integer NOT NULL,
    entry_num character varying,
    status_id bigint,
    created_user_id bigint,
    updated_user_id bigint,
    applicant_id bigint,
    representative_id bigint,
    company_id bigint,
    contact_details_id bigint,
    reg_num character varying(50),
    kind integer,
    type_payment smallint,
    courier_address character varying,
    access_code integer,
    deputy boolean,
    delivery_type integer,
    declaration boolean,
    representative_quality character varying,
    created_date timestamp with time zone,
    updated_date timestamp with time zone,
    start_date timestamp with time zone,
    end_date timestamp with time zone,
    hist_id integer NOT NULL
);


ALTER TABLE eservices.document_delivery_hist OWNER TO postgres;

--
-- Name: document_delivery_hist_hist_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.document_delivery_hist_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.document_delivery_hist_hist_id_seq OWNER TO postgres;

--
-- Name: document_delivery_hist_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.document_delivery_hist_hist_id_seq OWNED BY eservices.document_delivery_hist.hist_id;


--
-- Name: document_delivery_hist_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.document_delivery_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.document_delivery_hist_id_seq OWNER TO postgres;

--
-- Name: document_delivery_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.document_delivery_hist_id_seq OWNED BY eservices.document_delivery_hist.id;


--
-- Name: document_delivery_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.document_delivery_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.document_delivery_id_seq OWNER TO postgres;

--
-- Name: document_delivery_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.document_delivery_id_seq OWNED BY eservices.document_delivery.id;


--
-- Name: document_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.document_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.document_id_seq OWNER TO postgres;

--
-- Name: document_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.document_id_seq OWNED BY eservices.document.id;


--
-- Name: inquiry; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.inquiry (
    id integer NOT NULL,
    status_id bigint,
    entry_num character varying,
    created_date timestamp with time zone,
    created_user_id bigint,
    updated_date timestamp with time zone,
    updated_user_id bigint,
    information_product integer,
    deputy boolean,
    type_payment smallint,
    applicant_id integer,
    company_id integer,
    representative_id integer,
    representative_type character varying,
    contact_details_id integer,
    courier_name_address character varying,
    declaration boolean,
    delivery_type integer,
    access_code integer
);


ALTER TABLE eservices.inquiry OWNER TO postgres;

--
-- Name: inquiry_files; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.inquiry_files (
    inquiry_id integer NOT NULL,
    blob_id integer NOT NULL
);


ALTER TABLE eservices.inquiry_files OWNER TO postgres;

--
-- Name: inquiry_hist; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.inquiry_hist (
    id integer NOT NULL,
    status_id bigint,
    entry_num character varying,
    created_date timestamp with time zone,
    created_user_id bigint,
    updated_date timestamp with time zone,
    updated_user_id bigint,
    information_product integer,
    deputy boolean,
    type_payment smallint,
    applicant_id integer,
    company_id integer,
    representative_id integer,
    representative_type character varying,
    contact_details_id integer,
    courier_name_address character varying,
    declaration boolean,
    delivery_type integer,
    access_code integer,
    start_date timestamp with time zone,
    end_date timestamp with time zone,
    hist_id integer NOT NULL
);


ALTER TABLE eservices.inquiry_hist OWNER TO postgres;

--
-- Name: inquiry_hist_hist_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.inquiry_hist_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.inquiry_hist_hist_id_seq OWNER TO postgres;

--
-- Name: inquiry_hist_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.inquiry_hist_hist_id_seq OWNED BY eservices.inquiry_hist.hist_id;


--
-- Name: inquiry_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.inquiry_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.inquiry_id_seq OWNER TO postgres;

--
-- Name: inquiry_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.inquiry_id_seq OWNED BY eservices.inquiry.id;


--
-- Name: irregularity_relation; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.irregularity_relation (
    id integer NOT NULL,
    service_id integer,
    irregularity_id integer
);


ALTER TABLE eservices.irregularity_relation OWNER TO postgres;

--
-- Name: irregularity_relation_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.irregularity_relation_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.irregularity_relation_id_seq OWNER TO postgres;

--
-- Name: irregularity_relation_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.irregularity_relation_id_seq OWNED BY eservices.irregularity_relation.id;


--
-- Name: official_note_files; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.official_note_files (
    official_note_id integer NOT NULL,
    blob_id integer NOT NULL
);


ALTER TABLE eservices.official_note_files OWNER TO postgres;

--
-- Name: official_notes; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.official_notes (
    id integer NOT NULL,
    created_date timestamp with time zone,
    created_user_id bigint,
    updated_date timestamp with time zone,
    updated_user_id bigint,
    detailed_information text,
    kind integer,
    type_payment smallint,
    delivery_type integer,
    declaration boolean,
    applicant_id integer,
    physical_person boolean,
    company_id integer,
    representative_id integer,
    deputy boolean,
    representative_quality character varying,
    contact_details_id integer,
    status_id bigint,
    entry_num character varying,
    courier_address character varying,
    access_code integer
);


ALTER TABLE eservices.official_notes OWNER TO postgres;

--
-- Name: official_notes_hist; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.official_notes_hist (
    id integer NOT NULL,
    created_date timestamp with time zone,
    created_user_id bigint,
    updated_date timestamp with time zone,
    updated_user_id bigint,
    detailed_information text,
    kind integer,
    type_payment smallint,
    delivery_type integer,
    declaration boolean,
    applicant_id integer,
    physical_person boolean,
    company_id integer,
    representative_id integer,
    deputy boolean,
    representative_quality character varying,
    contact_details_id integer,
    status_id bigint,
    entry_num character varying,
    courier_address character varying,
    access_code integer,
    start_date timestamp with time zone,
    end_date timestamp with time zone,
    hist_id integer NOT NULL
);


ALTER TABLE eservices.official_notes_hist OWNER TO postgres;

--
-- Name: official_notes_hist_hist_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.official_notes_hist_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.official_notes_hist_hist_id_seq OWNER TO postgres;

--
-- Name: official_notes_hist_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.official_notes_hist_hist_id_seq OWNED BY eservices.official_notes_hist.hist_id;


--
-- Name: official_notes_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.official_notes_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.official_notes_id_seq OWNER TO postgres;

--
-- Name: official_notes_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.official_notes_id_seq OWNED BY eservices.official_notes.id;


--
-- Name: person; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.person (
    id integer NOT NULL,
    fname character varying(50) NOT NULL,
    sname character varying(50),
    lname character varying(50) NOT NULL,
    civil_id character varying(50),
    civil_id_type integer,
    birth_country_id integer,
    birth_city character varying(30),
    birth_date date,
    citizenship_id integer,
    email character varying(100),
    hash_code character varying(50),
    user_id integer,
    address_id integer
);


ALTER TABLE eservices.person OWNER TO postgres;

--
-- Name: person_document; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.person_document (
    id integer NOT NULL,
    person_id integer NOT NULL,
    date_of_issue date,
    issued_by character varying(100),
    number character varying(50) NOT NULL,
    active integer,
    date_created timestamp with time zone DEFAULT now(),
    personal_id_document_type integer
);


ALTER TABLE eservices.person_document OWNER TO postgres;

--
-- Name: person_document_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.person_document_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.person_document_id_seq OWNER TO postgres;

--
-- Name: person_document_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.person_document_id_seq OWNED BY eservices.person_document.id;


--
-- Name: person_hist; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.person_hist (
    hist_id integer NOT NULL,
    id bigint,
    fname character varying(50),
    sname character varying(50),
    lname character varying(50),
    civil_id character varying(50),
    civil_id_type integer,
    birth_country_id integer,
    birth_city character varying(30),
    birth_date date,
    citizenship_id integer,
    email character varying(100),
    hash_code character varying(50),
    user_id integer,
    address_id integer,
    start_date timestamp with time zone,
    end_date timestamp with time zone
);


ALTER TABLE eservices.person_hist OWNER TO postgres;

--
-- Name: person_hist_hist_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.person_hist_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.person_hist_hist_id_seq OWNER TO postgres;

--
-- Name: person_hist_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.person_hist_hist_id_seq OWNED BY eservices.person_hist.hist_id;


--
-- Name: person_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.person_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.person_id_seq OWNER TO postgres;

--
-- Name: person_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.person_id_seq OWNED BY eservices.person.id;


--
-- Name: price_list; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.price_list (
    id integer NOT NULL,
    entry_num_series_id integer,
    natural_person_price numeric(8,2),
    legal_entity_price numeric(8,2),
    other_price numeric(8,2)
);


ALTER TABLE eservices.price_list OWNER TO postgres;

--
-- Name: price_list_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.price_list_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.price_list_id_seq OWNER TO postgres;

--
-- Name: price_list_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.price_list_id_seq OWNED BY eservices.price_list.id;


--
-- Name: public_access; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.public_access (
    id integer NOT NULL,
    applicant_type integer,
    person_id integer,
    company_id integer,
    representative_id integer,
    representative_position text,
    about text,
    oral boolean,
    review boolean,
    paper boolean,
    technical boolean,
    comment text,
    email_notifications boolean,
    address_id integer,
    representative_type integer,
    created_date timestamp with time zone,
    created_user_id bigint,
    updated_date timestamp with time zone,
    updated_user_id bigint,
    entry_num character varying,
    status_id bigint,
    access_code integer
);


ALTER TABLE eservices.public_access OWNER TO postgres;

--
-- Name: public_access_hist; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.public_access_hist (
    id integer NOT NULL,
    applicant_type integer,
    person_id integer,
    company_id integer,
    representative_id integer,
    representative_position text,
    about text,
    oral boolean,
    review boolean,
    paper boolean,
    technical boolean,
    comment text,
    email_notifications boolean,
    address_id integer,
    representative_type integer,
    created_date timestamp with time zone,
    created_user_id bigint,
    updated_date timestamp with time zone,
    updated_user_id bigint,
    entry_num character varying,
    status_id bigint,
    access_code integer,
    start_date timestamp with time zone,
    end_date timestamp with time zone,
    hist_id integer NOT NULL
);


ALTER TABLE eservices.public_access_hist OWNER TO postgres;

--
-- Name: public_access_hist_hist_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.public_access_hist_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.public_access_hist_hist_id_seq OWNER TO postgres;

--
-- Name: public_access_hist_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.public_access_hist_hist_id_seq OWNED BY eservices.public_access_hist.hist_id;


--
-- Name: public_access_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.public_access_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.public_access_id_seq OWNER TO postgres;

--
-- Name: public_access_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.public_access_id_seq OWNED BY eservices.public_access.id;


--
-- Name: public_person; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.public_person (
    id integer NOT NULL,
    fname character varying(50),
    sname character varying(50),
    lname character varying(50),
    address character varying(255),
    onames character varying(255)
);


ALTER TABLE eservices.public_person OWNER TO postgres;

--
-- Name: public_person_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.public_person_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.public_person_id_seq OWNER TO postgres;

--
-- Name: public_person_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.public_person_id_seq OWNED BY eservices.public_person.id;


--
-- Name: recommendation; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.recommendation (
    id integer NOT NULL,
    updated_date time with time zone,
    created_date time with time zone,
    create_user_id bigint,
    updated_user_id bigint,
    status smallint,
    diploma_person_id bigint,
    diploma_id bigint
);


ALTER TABLE eservices.recommendation OWNER TO postgres;

--
-- Name: recommendation_blob; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.recommendation_blob (
    recommendation_id integer NOT NULL,
    blob_id integer NOT NULL
);


ALTER TABLE eservices.recommendation_blob OWNER TO postgres;

--
-- Name: recommendation_diploma_type; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.recommendation_diploma_type (
    recommendation_id integer NOT NULL,
    diploma_type_id integer NOT NULL
);


ALTER TABLE eservices.recommendation_diploma_type OWNER TO postgres;

--
-- Name: recommendation_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.recommendation_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.recommendation_id_seq OWNER TO postgres;

--
-- Name: recommendation_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.recommendation_id_seq OWNED BY eservices.recommendation.id;


--
-- Name: recommendation_training_course; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.recommendation_training_course (
    recommendation_id integer NOT NULL,
    training_course_id integer NOT NULL
);


ALTER TABLE eservices.recommendation_training_course OWNER TO postgres;

--
-- Name: country_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.country_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.country_id_seq OWNER TO postgres;

--
-- Name: country; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.country (
    id integer DEFAULT nextval('nomenclatures.country_id_seq'::regclass) NOT NULL,
    name character varying(50) NOT NULL,
    iso3166_code character varying(2) NOT NULL,
    date_from date,
    date_to date,
    official_name character varying(50)
);


ALTER TABLE nomenclatures.country OWNER TO postgres;

--
-- Name: profession; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.profession (
    id integer NOT NULL,
    name character varying(600) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.profession OWNER TO postgres;

--
-- Name: profession_experience; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.profession_experience (
    id integer NOT NULL,
    name character varying(80) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.profession_experience OWNER TO postgres;

--
-- Name: person; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.person (
    id integer NOT NULL,
    fname character varying(50) NOT NULL,
    sname character varying(50),
    lname character varying(50) NOT NULL,
    civil_id character varying(50),
    civil_id_type integer,
    birth_country_id integer,
    birth_city character varying(30),
    birth_date date,
    citizenship_id integer
);


ALTER TABLE public.person OWNER TO postgres;

--
-- Name: app_status_history; Type: TABLE; Schema: regprof; Owner: postgres
--

CREATE TABLE regprof.app_status_history (
    id integer NOT NULL,
    application_id integer,
    status_id integer,
    date_assigned date,
    user_assigned integer
);


ALTER TABLE regprof.app_status_history OWNER TO postgres;

--
-- Name: cert_number_to_attached_doc; Type: TABLE; Schema: regprof; Owner: postgres
--

CREATE TABLE regprof.cert_number_to_attached_doc (
    cert_number character varying(30),
    attached_doc_id integer,
    application_id integer,
    invalidated integer,
    id integer NOT NULL,
    uuid uuid NOT NULL
);


ALTER TABLE regprof.cert_number_to_attached_doc OWNER TO postgres;

--
-- Name: prof_qualification_examination; Type: TABLE; Schema: regprof; Owner: postgres
--

CREATE TABLE regprof.prof_qualification_examination (
    id integer NOT NULL,
    training_course_id integer,
    recognized_qualification_level_id integer,
    recognized_qualification_degree_id integer,
    user_created integer,
    recognized_profession_id integer,
    article_item_id integer,
    recognized_qualification_teacher integer DEFAULT 0 NOT NULL,
    grade integer,
    school_type integer,
    age_range integer
);


ALTER TABLE regprof.prof_qualification_examination OWNER TO postgres;

--
-- Name: profession_experience; Type: TABLE; Schema: regprof; Owner: postgres
--

CREATE TABLE regprof.profession_experience (
    id integer NOT NULL,
    n_profession_experience_id integer,
    user_id integer NOT NULL,
    date_created date DEFAULT ('now'::text)::date NOT NULL,
    years integer,
    months integer,
    days integer,
    training_course_id integer NOT NULL
);


ALTER TABLE regprof.profession_experience OWNER TO postgres;

--
-- Name: regprof_application; Type: TABLE; Schema: regprof; Owner: postgres
--

CREATE TABLE regprof.regprof_application (
    id integer NOT NULL,
    app_num character varying(20),
    app_date date,
    applicant_id integer NOT NULL,
    representative_id integer,
    applicant_email character varying(100),
    applicant_phone character varying(50),
    applicant_city character varying(30),
    applicant_addr_details text,
    rep_from_company integer,
    rep_addr_details text,
    rep_phone character varying(50),
    rep_email character varying(100),
    applicant_documents_id integer,
    applicant_country_id integer,
    notes text,
    status integer,
    personal_email_informing integer,
    personal_data_usage integer,
    data_authentic integer,
    names_dont_match integer,
    training_course_id integer NOT NULL,
    application_country_id integer,
    service_type_id integer,
    end_date date,
    archive_num character varying(50),
    imi_correspondence character varying(100),
    apostille_application integer DEFAULT 0 NOT NULL,
    final_status_history_id integer,
    docflow_status_id integer NOT NULL,
    document_receive_method_id integer,
    applicant_personal_id_document_type integer,
    external_system_id character varying(50),
    apostille_transfer_date timestamp with time zone
);


ALTER TABLE regprof.regprof_application OWNER TO postgres;

--
-- Name: training_course; Type: TABLE; Schema: regprof; Owner: postgres
--

CREATE TABLE regprof.training_course (
    id integer NOT NULL,
    document_civil_id_type integer,
    document_civil_id character varying(20),
    document_fname character varying(50),
    document_sname character varying(50),
    document_lname character varying(50),
    prof_institution_id integer,
    document_number character varying(50),
    document_date character varying(50),
    sec_prof_qualification_id integer,
    high_prof_qualification_id integer,
    high_edu_level_id integer,
    sdk_prof_institution_id integer,
    sdk_prof_qualification_id integer,
    sdk_document_number character varying(50),
    sdk_document_date character varying(50),
    education_type_id integer,
    has_experience integer DEFAULT 1 NOT NULL,
    has_education integer DEFAULT 1 NOT NULL,
    document_type integer,
    sdk_document_type integer,
    prof_institution_org_name_id integer,
    sdk_prof_institution_org_name_id integer,
    sec_caliber_id integer,
    document_series character varying(32),
    document_reg_number character varying(32),
    sdk_document_series character varying(32),
    sdk_document_reg_number character varying(32),
    certificate_prof_qualification_id integer,
    not_restricted integer,
    regulated_education_training integer DEFAULT 0 NOT NULL
);


ALTER TABLE regprof.training_course OWNER TO postgres;

--
-- Name: registry_norq; Type: VIEW; Schema: eservices; Owner: postgres
--

CREATE VIEW eservices.registry_norq AS
 SELECT DISTINCT apn.id,
    apn.app_num,
    apn.app_date,
    fss.status_id,
        CASE
            WHEN (apn.names_dont_match = 1) THEN (((tce.document_fname)::text || COALESCE((' '::text || (tce.document_sname)::text), ''::text)) || COALESCE((' '::text || (tce.document_lname)::text), ''::text))
            ELSE (((apt.fname)::text || COALESCE((' '::text || (apt.sname)::text), ''::text)) || COALESCE((' '::text || (apt.lname)::text), ''::text))
        END AS applicant_name,
    acy.name AS application_country_name,
    NULL::character varying AS cert_number,
    NULL::character varying AS invalidated,
    ( SELECT cert_number_to_attached_doc.cert_number
           FROM regprof.cert_number_to_attached_doc
          WHERE ((cert_number_to_attached_doc.application_id = apn.id) AND (cert_number_to_attached_doc.invalidated = 0))
          ORDER BY cert_number_to_attached_doc.id DESC
         LIMIT 1) AS validated_cert_number,
    array_to_string(ARRAY( SELECT cert_number_to_attached_doc.cert_number
           FROM regprof.cert_number_to_attached_doc
          WHERE ((cert_number_to_attached_doc.application_id = apn.id) AND (cert_number_to_attached_doc.invalidated = 1))), ', '::text) AS invalidated_cert_numbers,
    COALESCE(recognizedprofession.name, profexp.name) AS recognized_profession_name,
    (( SELECT cert_number_to_attached_doc.uuid
           FROM regprof.cert_number_to_attached_doc
          WHERE (cert_number_to_attached_doc.application_id = apn.id)
          ORDER BY cert_number_to_attached_doc.id DESC
         LIMIT 1))::character varying AS cert_number_uuid
   FROM ((((((((regprof.regprof_application apn
     JOIN regprof.app_status_history fss ON ((fss.id = apn.final_status_history_id)))
     JOIN regprof.training_course tce ON ((tce.id = apn.training_course_id)))
     JOIN public.person apt ON ((apt.id = apn.applicant_id)))
     LEFT JOIN regprof.profession_experience pe ON ((pe.training_course_id = tce.id)))
     LEFT JOIN nomenclatures.profession_experience profexp ON ((profexp.id = pe.n_profession_experience_id)))
     LEFT JOIN regprof.prof_qualification_examination pqe ON ((pqe.training_course_id = tce.id)))
     LEFT JOIN nomenclatures.profession recognizedprofession ON ((recognizedprofession.id = pqe.recognized_profession_id)))
     LEFT JOIN nomenclatures.country acy ON ((acy.id = apn.application_country_id)));


ALTER TABLE eservices.registry_norq OWNER TO postgres;

--
-- Name: edu_level_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.edu_level_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.edu_level_id_seq OWNER TO postgres;

--
-- Name: edu_level; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.edu_level (
    id integer DEFAULT nextval('nomenclatures.edu_level_id_seq'::regclass) NOT NULL,
    name character varying(100) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.edu_level OWNER TO postgres;

--
-- Name: speciality_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.speciality_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.speciality_id_seq OWNER TO postgres;

--
-- Name: speciality; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.speciality (
    id integer DEFAULT nextval('nomenclatures.speciality_id_seq'::regclass) NOT NULL,
    name character varying(255) NOT NULL,
    prof_group_id integer,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.speciality OWNER TO postgres;

--
-- Name: app_status_history; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.app_status_history (
    id integer NOT NULL,
    application_id integer NOT NULL,
    status_id integer NOT NULL,
    date_assigned date NOT NULL,
    stat_legal_reason_id integer,
    session_id integer,
    user_assigned integer NOT NULL
);


ALTER TABLE public.app_status_history OWNER TO postgres;

--
-- Name: application; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.application (
    id integer NOT NULL,
    app_num character varying(20) NOT NULL,
    app_date date NOT NULL,
    applicant_id integer,
    representative_id integer,
    training_course_id integer,
    email character varying(100),
    official_email_comm integer,
    home_country_id integer NOT NULL,
    home_city character varying(30),
    home_pcode character varying(12),
    home_addr_details text,
    home_is_bg integer,
    bg_city character varying(30),
    bg_pcode character varying(12),
    bg_addr_details text,
    created_by_user_id integer NOT NULL,
    time_of_creation timestamp without time zone NOT NULL,
    app_status_id integer NOT NULL,
    company_id integer,
    bg_addr_owner integer DEFAULT 0,
    diff_diploma_names integer DEFAULT 0 NOT NULL,
    app_session_status_id integer,
    home_contact_phone character varying(255),
    bg_contact_phone character varying(30),
    repr_country_id integer,
    repr_city character varying(30),
    repr_pcode character varying(12),
    repr_addr_details text,
    repr_contact_phone character varying(30),
    summary text,
    archive_num character varying(50),
    personal_data_usage integer,
    is_data_authentic integer,
    is_representative_authorized integer,
    notes text,
    submitted_docs text,
    applicant_info text,
    responsible_user integer,
    final_status_history_id integer,
    docflow_status_id integer NOT NULL,
    applicant_company_id integer,
    representative_type character varying,
    type_payment smallint,
    delivery_type integer,
    declaration boolean,
    courier_name_address character varying,
    outgoing_number character varying,
    internal_number character varying,
    is_express boolean,
    applicant_type integer DEFAULT 0 NOT NULL,
    application_type integer NOT NULL,
    document_receive_method_id integer,
    ras_key character varying(20),
    applicant_personal_id_document_type integer
);


ALTER TABLE public.application OWNER TO postgres;

--
-- Name: cert_number_to_attached_doc; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cert_number_to_attached_doc (
    id integer NOT NULL,
    cert_number character varying(30),
    attached_doc_id integer,
    application_id integer,
    invalidated integer DEFAULT 0 NOT NULL,
    uuid uuid NOT NULL
);


ALTER TABLE public.cert_number_to_attached_doc OWNER TO postgres;

--
-- Name: diploma_issuer; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.diploma_issuer (
    diploma_id integer NOT NULL,
    university_id integer NOT NULL,
    ord_num integer,
    id integer NOT NULL,
    faculty_id integer
);


ALTER TABLE public.diploma_issuer OWNER TO postgres;

--
-- Name: recognized_specs; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.recognized_specs (
    id integer NOT NULL,
    training_course_id integer NOT NULL,
    spec_id integer NOT NULL
);


ALTER TABLE public.recognized_specs OWNER TO postgres;

--
-- Name: training_course; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.training_course (
    id integer NOT NULL,
    diploma_num character varying(50),
    diploma_date date,
    diploma_type_id integer,
    fname character varying(50),
    sname character varying(50),
    lname character varying(50),
    is_joint_degree integer,
    training_start date,
    training_end date,
    training_duration double precision,
    duration_unit_id integer,
    credits numeric(8,2),
    edu_level_id integer,
    qualification_id integer,
    is_recognized integer,
    school_country integer,
    school_city character varying(100),
    school_name character varying(255),
    school_graduation_date date,
    school_notes text,
    prev_diploma_country integer,
    prev_diploma_city character varying(30),
    prev_diploma_university_id integer,
    prev_diploma_edu_level_id integer,
    prev_diploma_graduation_date date,
    prev_diploma_notes text,
    recognized_edu_level_id integer,
    recognized_qualification_id integer,
    prev_diploma_speciality_id integer,
    graduation_document_type_id integer,
    credit_hours integer,
    ects_credits integer,
    owner_id integer NOT NULL,
    thesis_topic text,
    thesis_topic_en text,
    prof_group_id integer,
    recognized_prof_group_id integer,
    diploma_series character varying(15),
    diploma_registration_number character varying(15),
    thesis_defence_date date,
    thesis_bibliography integer,
    thesis_volume integer,
    thesis_annotation text,
    thesis_annotation_en text,
    thesis_language_id integer,
    original_qualification_id integer
);


ALTER TABLE public.training_course OWNER TO postgres;

--
-- Name: university; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.university (
    id integer NOT NULL,
    country_id integer NOT NULL,
    bg_name character varying(255) NOT NULL,
    org_name character varying(255),
    city character varying(30),
    addr_details text,
    phone character varying(255),
    fax character varying(255),
    email character varying(255),
    web_site character varying(255),
    date_from date,
    date_to date,
    url_diploma_register text,
    university_generic_name_id integer
);


ALTER TABLE public.university OWNER TO postgres;

--
-- Name: registry_rudi; Type: VIEW; Schema: eservices; Owner: postgres
--

CREATE VIEW eservices.registry_rudi AS
 SELECT apn.id,
    apn.app_num,
    apn.app_date,
    apn.docflow_status_id,
    fsh.status_id,
        CASE
            WHEN (apn.diff_diploma_names = 1) THEN (((tce.fname)::text || COALESCE((' '::text || (tce.sname)::text), ''::text)) || COALESCE((' '::text || (tce.lname)::text), ''::text))
            ELSE (((apt.fname)::text || COALESCE((' '::text || (apt.sname)::text), ''::text)) || COALESCE((' '::text || (apt.lname)::text), ''::text))
        END AS applicant_name,
    uny.bg_name AS university_name,
    ucy.name AS university_country,
    ( SELECT array_to_string(ARRAY( SELECT spec.name
                   FROM (public.recognized_specs tcs
                     JOIN nomenclatures.speciality spec ON ((spec.id = tcs.spec_id)))
                  WHERE (tcs.training_course_id = tce.id)
                  ORDER BY tcs.id), ', '::text) AS array_to_string) AS recognized_speciality_name,
    NULL::unknown AS cert_number,
    NULL::unknown AS invalidated,
    ( SELECT cert_number_to_attached_doc.cert_number
           FROM public.cert_number_to_attached_doc
          WHERE ((cert_number_to_attached_doc.application_id = apn.id) AND (cert_number_to_attached_doc.invalidated = 0))
          ORDER BY cert_number_to_attached_doc.id DESC
         LIMIT 1) AS validated_cert_number,
    ( SELECT array_to_string(ARRAY( SELECT cert_number_to_attached_doc.cert_number
                   FROM public.cert_number_to_attached_doc
                  WHERE ((cert_number_to_attached_doc.application_id = apn.id) AND (cert_number_to_attached_doc.invalidated = 1))), ', '::text) AS "array") AS invalidated_cert_numbers,
    ( SELECT el.name
           FROM nomenclatures.edu_level el
          WHERE (tce.recognized_edu_level_id = el.id)) AS edu_level,
    (( SELECT cert_number_to_attached_doc.uuid
           FROM public.cert_number_to_attached_doc
          WHERE (cert_number_to_attached_doc.application_id = apn.id)
          ORDER BY cert_number_to_attached_doc.id DESC
         LIMIT 1))::character varying AS cert_number_uuid
   FROM ((((((public.application apn
     JOIN public.training_course tce ON ((tce.id = apn.training_course_id)))
     JOIN public.diploma_issuer dir ON (((dir.diploma_id = tce.id) AND (dir.ord_num = 1))))
     JOIN public.university uny ON ((uny.id = dir.university_id)))
     JOIN public.person apt ON ((apt.id = apn.applicant_id)))
     LEFT JOIN nomenclatures.country ucy ON ((ucy.id = uny.country_id)))
     JOIN public.app_status_history fsh ON ((fsh.id = apn.final_status_history_id)));


ALTER TABLE eservices.registry_rudi OWNER TO postgres;

--
-- Name: regprof_app_libilities; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.regprof_app_libilities (
    id integer NOT NULL,
    ext_regprof_application_id integer NOT NULL,
    liability_id integer NOT NULL
);


ALTER TABLE eservices.regprof_app_libilities OWNER TO postgres;

--
-- Name: regprof_app_libilities_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.regprof_app_libilities_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.regprof_app_libilities_id_seq OWNER TO postgres;

--
-- Name: regprof_app_libilities_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.regprof_app_libilities_id_seq OWNED BY eservices.regprof_app_libilities.id;


--
-- Name: regprof_application; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.regprof_application (
    id integer NOT NULL,
    applicant_id integer NOT NULL,
    names_dont_match integer NOT NULL,
    training_course_id integer NOT NULL,
    applicant_country_id integer,
    applicant_phone character varying(50),
    applicant_addr_details character varying(255),
    personal_data_usage integer,
    time_of_creation timestamp with time zone DEFAULT now() NOT NULL,
    status integer DEFAULT 0 NOT NULL,
    app_xml text,
    regprof_application_id integer,
    service_type_id integer,
    application_country_id integer,
    applicant_documents_id integer,
    date_submitted timestamp with time zone,
    applicant_city character varying(30),
    apostille_application integer NOT NULL,
    document_receive_method_id integer,
    representative_id integer,
    applicant_personal_id_document_type integer,
    external_system_id character varying(50)
);


ALTER TABLE eservices.regprof_application OWNER TO postgres;

--
-- Name: regprof_application_comments; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.regprof_application_comments (
    id integer NOT NULL,
    application_id integer NOT NULL,
    comment text,
    send_email integer NOT NULL,
    email_id integer,
    system_message integer NOT NULL,
    date_created timestamp with time zone DEFAULT now() NOT NULL,
    user_created integer NOT NULL
);


ALTER TABLE eservices.regprof_application_comments OWNER TO postgres;

--
-- Name: regprof_application_comments_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.regprof_application_comments_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.regprof_application_comments_id_seq OWNER TO postgres;

--
-- Name: regprof_application_comments_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.regprof_application_comments_id_seq OWNED BY eservices.regprof_application_comments.id;


--
-- Name: regprof_application_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.regprof_application_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.regprof_application_id_seq OWNER TO postgres;

--
-- Name: regprof_application_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.regprof_application_id_seq OWNED BY eservices.regprof_application.id;


--
-- Name: regprof_attached_docs; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.regprof_attached_docs (
    id integer NOT NULL,
    application_id integer NOT NULL,
    doc_descr text,
    doc_type_id integer,
    copy_type_id integer,
    document_id integer NOT NULL
);


ALTER TABLE eservices.regprof_attached_docs OWNER TO postgres;

--
-- Name: regprof_attached_docs_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.regprof_attached_docs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.regprof_attached_docs_id_seq OWNER TO postgres;

--
-- Name: regprof_attached_docs_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.regprof_attached_docs_id_seq OWNED BY eservices.regprof_attached_docs.id;


--
-- Name: regprof_document_recipient; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.regprof_document_recipient (
    id integer NOT NULL,
    application_id integer NOT NULL,
    name text,
    country_id integer NOT NULL,
    city character varying(255),
    district character varying(255),
    post_code character varying(40),
    address text,
    mobile_phone character varying(50)
);


ALTER TABLE eservices.regprof_document_recipient OWNER TO postgres;

--
-- Name: regprof_document_recipient_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.regprof_document_recipient_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.regprof_document_recipient_id_seq OWNER TO postgres;

--
-- Name: regprof_document_recipient_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.regprof_document_recipient_id_seq OWNED BY eservices.regprof_document_recipient.id;


--
-- Name: regprof_profession_experience; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.regprof_profession_experience (
    id integer NOT NULL,
    n_profession_experience_id integer,
    profession_experience_txt character varying(255),
    user_id integer,
    date_created date DEFAULT ('now'::text)::date,
    years integer,
    months integer,
    days integer,
    training_course_id integer NOT NULL
);


ALTER TABLE eservices.regprof_profession_experience OWNER TO postgres;

--
-- Name: regprof_profession_experience_dates; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.regprof_profession_experience_dates (
    id integer NOT NULL,
    date_from date NOT NULL,
    date_to date NOT NULL,
    workday_duration integer,
    prof_experience_document_id integer
);


ALTER TABLE eservices.regprof_profession_experience_dates OWNER TO postgres;

--
-- Name: regprof_profession_experience_dates_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.regprof_profession_experience_dates_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.regprof_profession_experience_dates_id_seq OWNER TO postgres;

--
-- Name: regprof_profession_experience_dates_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.regprof_profession_experience_dates_id_seq OWNED BY eservices.regprof_profession_experience_dates.id;


--
-- Name: regprof_profession_experience_documents; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.regprof_profession_experience_documents (
    id integer NOT NULL,
    prof_experience_doc_type_id integer NOT NULL,
    document_number character varying(100),
    document_issuer character varying(100) NOT NULL,
    prof_experience_id integer NOT NULL,
    for_experience_calculation integer NOT NULL,
    document_date character varying(50)
);


ALTER TABLE eservices.regprof_profession_experience_documents OWNER TO postgres;

--
-- Name: regprof_profession_experience_documents_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.regprof_profession_experience_documents_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.regprof_profession_experience_documents_id_seq OWNER TO postgres;

--
-- Name: regprof_profession_experience_documents_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.regprof_profession_experience_documents_id_seq OWNED BY eservices.regprof_profession_experience_documents.id;


--
-- Name: regprof_profession_experience_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.regprof_profession_experience_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.regprof_profession_experience_id_seq OWNER TO postgres;

--
-- Name: regprof_profession_experience_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.regprof_profession_experience_id_seq OWNED BY eservices.regprof_profession_experience.id;


--
-- Name: regprof_signed_docs; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.regprof_signed_docs (
    id integer NOT NULL,
    ext_user_id integer,
    ext_app_id integer,
    signed_xml_content text,
    issuer character varying(255),
    name character varying(255),
    email character varying(255),
    civil_id character varying(255),
    unified_id_code character varying(255),
    validity_from timestamp with time zone,
    validity_to timestamp with time zone
);


ALTER TABLE eservices.regprof_signed_docs OWNER TO postgres;

--
-- Name: regprof_signed_docs_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.regprof_signed_docs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.regprof_signed_docs_id_seq OWNER TO postgres;

--
-- Name: regprof_signed_docs_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.regprof_signed_docs_id_seq OWNED BY eservices.regprof_signed_docs.id;


--
-- Name: regprof_training_course; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.regprof_training_course (
    id integer NOT NULL,
    document_fname character varying(30),
    document_sname character varying(30),
    document_lname character varying(30),
    document_civil_id character varying(50),
    document_civil_id_type integer,
    education_type_id integer,
    prof_institution_id integer,
    prof_institution_name_txt character varying(255),
    prof_institution_org_name_id integer,
    prof_institution_org_name_txt character varying(255),
    document_type integer,
    document_series character varying(32),
    document_number character varying(50),
    document_reg_number character varying(32),
    document_date character varying(50),
    sec_prof_qualification_id integer,
    sec_caliber_id integer,
    high_prof_qualification_id integer,
    high_prof_qualification_txt character varying(255),
    high_edu_level_id integer,
    sdk_prof_institution_id integer,
    sdk_prof_institution_name_txt character varying(255),
    sdk_prof_institution_org_name_id integer,
    sdk_prof_institution_org_name_txt character varying(255),
    sdk_prof_qualification_id integer,
    sdk_prof_qualification_txt character varying(255),
    sdk_document_type integer,
    sdk_document_series character varying(32),
    sdk_document_number character varying(50),
    sdk_document_reg_number character varying(32),
    sdk_document_date character varying(50),
    has_experience integer DEFAULT 1 NOT NULL,
    has_education integer DEFAULT 1 NOT NULL,
    certificate_prof_qualification_id integer,
    certificate_prof_qualification_txt character varying(150),
    not_restricted integer,
    sec_prof_qualification_txt character varying(255),
    regulated_education_training integer DEFAULT 0 NOT NULL
);


ALTER TABLE eservices.regprof_training_course OWNER TO postgres;

--
-- Name: regprof_training_course_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.regprof_training_course_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.regprof_training_course_id_seq OWNER TO postgres;

--
-- Name: regprof_training_course_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.regprof_training_course_id_seq OWNED BY eservices.regprof_training_course.id;


--
-- Name: regprof_training_course_specialities; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.regprof_training_course_specialities (
    id integer NOT NULL,
    training_course_id integer NOT NULL,
    secondary_speciality_id integer,
    higher_speciality_id integer,
    higher_speciality_txt character varying(255),
    sdk_speciality_id integer,
    sdk_speciality_txt character varying(255),
    secondary_speciality_txt character varying(255)
);


ALTER TABLE eservices.regprof_training_course_specialities OWNER TO postgres;

--
-- Name: regprof_training_course_specialities_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.regprof_training_course_specialities_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.regprof_training_course_specialities_id_seq OWNER TO postgres;

--
-- Name: regprof_training_course_specialities_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.regprof_training_course_specialities_id_seq OWNED BY eservices.regprof_training_course_specialities.id;


--
-- Name: rudi_application; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.rudi_application (
    id integer NOT NULL,
    applicant_id integer,
    diff_diploma_names integer NOT NULL,
    training_course_id integer,
    home_country_id integer NOT NULL,
    home_city character varying(30),
    home_pcode character varying(12),
    home_addr_details text,
    home_contact_phone character varying(30),
    home_is_bg integer,
    bg_city character varying(30),
    bg_pcode character varying(12),
    bg_addr_details text,
    bg_contact_phone character varying(30),
    time_of_creation timestamp without time zone NOT NULL,
    summary text,
    app_status integer NOT NULL,
    application_id integer,
    app_xml text,
    personal_data_usage integer,
    is_data_authentic integer,
    entry_num character varying,
    access_code integer,
    created_date timestamp with time zone,
    created_user_id bigint,
    updated_date timestamp with time zone,
    updated_user_id bigint,
    company_id bigint,
    deputy boolean,
    representative_id integer,
    representative_type character varying,
    contact_details_id integer,
    type_payment smallint,
    delivery_type integer,
    declaration boolean,
    courier_name_address character varying,
    outgoing_number character varying,
    internal_number character varying,
    is_express boolean,
    applicant_type integer NOT NULL,
    document_receive_method_id integer,
    applicant_personal_id_document_type integer
);


ALTER TABLE eservices.rudi_application OWNER TO postgres;

--
-- Name: rudi_application_comments; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.rudi_application_comments (
    id integer NOT NULL,
    application_id integer NOT NULL,
    comment text,
    send_email integer NOT NULL,
    email_id integer,
    system_message integer NOT NULL,
    date_created timestamp with time zone DEFAULT now() NOT NULL,
    user_created integer NOT NULL
);


ALTER TABLE eservices.rudi_application_comments OWNER TO postgres;

--
-- Name: rudi_application_comments_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.rudi_application_comments_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.rudi_application_comments_id_seq OWNER TO postgres;

--
-- Name: rudi_application_comments_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.rudi_application_comments_id_seq OWNED BY eservices.rudi_application_comments.id;


--
-- Name: rudi_application_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.rudi_application_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.rudi_application_id_seq OWNER TO postgres;

--
-- Name: rudi_application_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.rudi_application_id_seq OWNED BY eservices.rudi_application.id;


--
-- Name: rudi_application_kind; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.rudi_application_kind (
    id integer NOT NULL,
    application_id integer,
    price numeric(8,2),
    entry_num character varying,
    entry_num_series_id integer NOT NULL
);


ALTER TABLE eservices.rudi_application_kind OWNER TO postgres;

--
-- Name: rudi_application_kind_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.rudi_application_kind_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.rudi_application_kind_id_seq OWNER TO postgres;

--
-- Name: rudi_application_kind_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.rudi_application_kind_id_seq OWNED BY eservices.rudi_application_kind.id;


--
-- Name: rudi_attached_docs; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.rudi_attached_docs (
    id integer NOT NULL,
    application_id integer NOT NULL,
    doc_descr text,
    doc_type_id integer,
    copy_type_id integer,
    document_id integer NOT NULL
);


ALTER TABLE eservices.rudi_attached_docs OWNER TO postgres;

--
-- Name: rudi_attached_docs_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.rudi_attached_docs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.rudi_attached_docs_id_seq OWNER TO postgres;

--
-- Name: rudi_attached_docs_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.rudi_attached_docs_id_seq OWNED BY eservices.rudi_attached_docs.id;


--
-- Name: rudi_diploma_issuer; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.rudi_diploma_issuer (
    id integer NOT NULL,
    diploma_id integer NOT NULL,
    university_id integer,
    university_txt text,
    ord_num integer,
    faculty_id integer,
    faculty_txt text
);


ALTER TABLE eservices.rudi_diploma_issuer OWNER TO postgres;

--
-- Name: rudi_diploma_issuer_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.rudi_diploma_issuer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.rudi_diploma_issuer_id_seq OWNER TO postgres;

--
-- Name: rudi_diploma_issuer_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.rudi_diploma_issuer_id_seq OWNED BY eservices.rudi_diploma_issuer.id;


--
-- Name: rudi_document_recipient; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.rudi_document_recipient (
    id integer NOT NULL,
    application_id integer NOT NULL,
    name text,
    country_id integer NOT NULL,
    city character varying(255),
    district character varying(255),
    post_code character varying(40),
    address text,
    mobile_phone character varying(50)
);


ALTER TABLE eservices.rudi_document_recipient OWNER TO postgres;

--
-- Name: rudi_document_recipient_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.rudi_document_recipient_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.rudi_document_recipient_id_seq OWNER TO postgres;

--
-- Name: rudi_document_recipient_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.rudi_document_recipient_id_seq OWNED BY eservices.rudi_document_recipient.id;


--
-- Name: rudi_purpose_of_recognition; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.rudi_purpose_of_recognition (
    id integer NOT NULL,
    application_id integer NOT NULL,
    purpose_of_recognition_id integer,
    notes character varying(255)
);


ALTER TABLE eservices.rudi_purpose_of_recognition OWNER TO postgres;

--
-- Name: rudi_purpose_of_recognition_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.rudi_purpose_of_recognition_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.rudi_purpose_of_recognition_id_seq OWNER TO postgres;

--
-- Name: rudi_purpose_of_recognition_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.rudi_purpose_of_recognition_id_seq OWNED BY eservices.rudi_purpose_of_recognition.id;


--
-- Name: rudi_signed_docs; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.rudi_signed_docs (
    id integer NOT NULL,
    ext_user_id integer,
    ext_app_id integer,
    signed_xml_content text,
    issuer character varying(255),
    name character varying(255),
    email character varying(255),
    civil_id character varying(255),
    unified_id_code character varying(255),
    validity_from timestamp with time zone,
    validity_to timestamp with time zone
);


ALTER TABLE eservices.rudi_signed_docs OWNER TO postgres;

--
-- Name: rudi_signed_docs_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.rudi_signed_docs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.rudi_signed_docs_id_seq OWNER TO postgres;

--
-- Name: rudi_signed_docs_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.rudi_signed_docs_id_seq OWNED BY eservices.rudi_signed_docs.id;


--
-- Name: rudi_training_course; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.rudi_training_course (
    id integer NOT NULL,
    diploma_num character varying(50),
    diploma_date date,
    diploma_type_id integer,
    fname character varying(50),
    sname character varying(50),
    lname character varying(50),
    training_start date,
    training_end date,
    training_duration double precision,
    duration_unit_id integer,
    credits numeric(8,2),
    edu_level_id integer,
    qualification_id integer,
    qualification_txt text,
    school_country integer,
    school_city character varying(30),
    school_name character varying(255),
    school_graduation_date date,
    school_notes text,
    prev_diploma_country integer,
    prev_diploma_city character varying(30),
    prev_diploma_university_id integer,
    prev_diploma_uiniversity_txt text,
    prev_diploma_edu_level_id integer,
    prev_diploma_graduation_date date,
    prev_diploma_notes text,
    training_inst_id integer,
    training_inst_txt text,
    is_joint_degree integer,
    prev_diploma_speciality_id integer,
    prev_diploma_speciality_txt text,
    graduation_document_type_id integer,
    credit_hours integer,
    ects_credits integer,
    owner_id integer NOT NULL,
    thesis_topic text,
    thesis_topic_en text,
    prof_group_id integer,
    diploma_series character varying(15),
    diploma_registration_number character varying(15),
    thesis_defence_date date,
    thesis_bibliography integer,
    thesis_volume integer,
    thesis_annotation text,
    thesis_annotation_en text,
    thesis_language_id integer
);


ALTER TABLE eservices.rudi_training_course OWNER TO postgres;

--
-- Name: rudi_training_course_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.rudi_training_course_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.rudi_training_course_id_seq OWNER TO postgres;

--
-- Name: rudi_training_course_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.rudi_training_course_id_seq OWNED BY eservices.rudi_training_course.id;


--
-- Name: rudi_training_course_specialities; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.rudi_training_course_specialities (
    id integer NOT NULL,
    ext_training_course_id integer NOT NULL,
    speciality_id integer,
    speciality_txt text
);


ALTER TABLE eservices.rudi_training_course_specialities OWNER TO postgres;

--
-- Name: rudi_training_course_specialities_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.rudi_training_course_specialities_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.rudi_training_course_specialities_id_seq OWNER TO postgres;

--
-- Name: rudi_training_course_specialities_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.rudi_training_course_specialities_id_seq OWNED BY eservices.rudi_training_course_specialities.id;


--
-- Name: rudi_training_form; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.rudi_training_form (
    id integer NOT NULL,
    training_course_id integer NOT NULL,
    training_form_id integer,
    notes character varying(255)
);


ALTER TABLE eservices.rudi_training_form OWNER TO postgres;

--
-- Name: rudi_training_form_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.rudi_training_form_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.rudi_training_form_id_seq OWNER TO postgres;

--
-- Name: rudi_training_form_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.rudi_training_form_id_seq OWNED BY eservices.rudi_training_form.id;


--
-- Name: rudi_training_location; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.rudi_training_location (
    id integer NOT NULL,
    training_location_country_id integer,
    training_location_city character varying(30),
    training_course_id integer
);


ALTER TABLE eservices.rudi_training_location OWNER TO postgres;

--
-- Name: rudi_training_location_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.rudi_training_location_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.rudi_training_location_id_seq OWNER TO postgres;

--
-- Name: rudi_training_location_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.rudi_training_location_id_seq OWNED BY eservices.rudi_training_location.id;


--
-- Name: rudi_way_of_graduation; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.rudi_way_of_graduation (
    id integer NOT NULL,
    training_course_id integer NOT NULL,
    way_of_graduation_id integer,
    notes character varying(255)
);


ALTER TABLE eservices.rudi_way_of_graduation OWNER TO postgres;

--
-- Name: rudi_way_of_graduation_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.rudi_way_of_graduation_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.rudi_way_of_graduation_id_seq OWNER TO postgres;

--
-- Name: rudi_way_of_graduation_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.rudi_way_of_graduation_id_seq OWNED BY eservices.rudi_way_of_graduation.id;


--
-- Name: salaries; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.salaries (
    id integer NOT NULL,
    value bigint
);


ALTER TABLE eservices.salaries OWNER TO postgres;

--
-- Name: salaries_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.salaries_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.salaries_id_seq OWNER TO postgres;

--
-- Name: salaries_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.salaries_id_seq OWNED BY eservices.salaries.id;


--
-- Name: service_irregularity; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.service_irregularity (
    id integer NOT NULL,
    service_id character varying,
    description character varying,
    created_user_id bigint,
    updated_date timestamp with time zone,
    created_date timestamp with time zone,
    updated_user_id bigint,
    deadline integer
);


ALTER TABLE eservices.service_irregularity OWNER TO postgres;

--
-- Name: service_irregularity_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.service_irregularity_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.service_irregularity_id_seq OWNER TO postgres;

--
-- Name: service_irregularity_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.service_irregularity_id_seq OWNED BY eservices.service_irregularity.id;


--
-- Name: service_reject; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.service_reject (
    id integer NOT NULL,
    service_id character varying,
    description character varying,
    created_user_id bigint,
    created_date timestamp with time zone,
    updated_user_id bigint,
    updated_date timestamp with time zone
);


ALTER TABLE eservices.service_reject OWNER TO postgres;

--
-- Name: service_reject_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.service_reject_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.service_reject_id_seq OWNER TO postgres;

--
-- Name: service_reject_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.service_reject_id_seq OWNED BY eservices.service_reject.id;


--
-- Name: signal_files; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.signal_files (
    signal_id integer NOT NULL,
    blob_id integer NOT NULL
);


ALTER TABLE eservices.signal_files OWNER TO postgres;

--
-- Name: signals; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.signals (
    id integer NOT NULL,
    created_date timestamp with time zone,
    entry_num character varying,
    status_id bigint,
    created_user_id bigint,
    updated_date timestamp with time zone,
    updated_user_id bigint,
    applicant_id bigint,
    representative_id bigint,
    has_representative boolean,
    violation_text character varying,
    violation_place character varying,
    checktime_text character varying,
    damage_text character varying,
    actions_text character varying,
    files_text character varying,
    company_id bigint,
    contact_details_id bigint,
    reg_num character varying(50),
    access_code integer
);


ALTER TABLE eservices.signals OWNER TO postgres;

--
-- Name: signals_hist; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.signals_hist (
    id integer NOT NULL,
    created_date timestamp with time zone,
    entry_num character varying,
    status_id bigint,
    created_user_id bigint,
    updated_date timestamp with time zone,
    updated_user_id bigint,
    applicant_id bigint,
    representative_id bigint,
    has_representative boolean,
    violation_text character varying,
    violation_place character varying,
    checktime_text character varying,
    damage_text character varying,
    actions_text character varying,
    files_text character varying,
    company_id bigint,
    contact_details_id bigint,
    reg_num character varying(50),
    access_code integer,
    start_date timestamp with time zone,
    end_date timestamp with time zone,
    hist_id integer NOT NULL
);


ALTER TABLE eservices.signals_hist OWNER TO postgres;

--
-- Name: signals_hist_hist_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.signals_hist_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.signals_hist_hist_id_seq OWNER TO postgres;

--
-- Name: signals_hist_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.signals_hist_hist_id_seq OWNED BY eservices.signals_hist.hist_id;


--
-- Name: signals_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.signals_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.signals_id_seq OWNER TO postgres;

--
-- Name: signals_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.signals_id_seq OWNED BY eservices.signals.id;


--
-- Name: signed_docs; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.signed_docs (
    id integer NOT NULL,
    app_id bigint,
    entry_num_series_id bigint,
    signed_xml_content text,
    file_id bigint,
    issuer character varying(255),
    name character varying(255),
    email character varying(255),
    civil_id character varying(255),
    unified_id_code character varying(255),
    validity_from timestamp with time zone,
    validity_to timestamp with time zone,
    is_signed boolean,
    user_id integer,
    created_user_id bigint
);


ALTER TABLE eservices.signed_docs OWNER TO postgres;

--
-- Name: signed_docs_hist; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.signed_docs_hist (
    hist_id integer NOT NULL,
    id integer NOT NULL,
    app_id bigint,
    entry_num_series_id bigint,
    signed_xml_content text,
    file_id bigint,
    issuer character varying(255),
    name character varying(255),
    email character varying(255),
    civil_id character varying(255),
    unified_id_code character varying(255),
    validity_from timestamp with time zone,
    validity_to timestamp with time zone,
    is_signed boolean,
    created_user_id bigint,
    start_date timestamp with time zone,
    end_date timestamp with time zone
);


ALTER TABLE eservices.signed_docs_hist OWNER TO postgres;

--
-- Name: signed_docs_hist_hist_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.signed_docs_hist_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.signed_docs_hist_hist_id_seq OWNER TO postgres;

--
-- Name: signed_docs_hist_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.signed_docs_hist_hist_id_seq OWNED BY eservices.signed_docs_hist.hist_id;


--
-- Name: signed_docs_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.signed_docs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.signed_docs_id_seq OWNER TO postgres;

--
-- Name: signed_docs_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.signed_docs_id_seq OWNED BY eservices.signed_docs.id;


--
-- Name: suggestion_files; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.suggestion_files (
    suggestion_id integer NOT NULL,
    blob_id integer NOT NULL
);


ALTER TABLE eservices.suggestion_files OWNER TO postgres;

--
-- Name: suggestions; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.suggestions (
    id integer NOT NULL,
    created_date timestamp with time zone,
    updated_date timestamp with time zone,
    status_id integer,
    created_user_id integer,
    updated_user_id integer,
    applicant_id integer,
    representative_id integer,
    has_representative boolean,
    suggestion_text character varying,
    files_text character varying,
    contact_details_id integer,
    company_id integer,
    entry_num character varying,
    access_code integer
);


ALTER TABLE eservices.suggestions OWNER TO postgres;

--
-- Name: suggestions_hist; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.suggestions_hist (
    id integer NOT NULL,
    created_date timestamp with time zone,
    updated_date timestamp with time zone,
    status_id integer,
    created_user_id integer,
    updated_user_id integer,
    applicant_id integer,
    representative_id integer,
    has_representative boolean,
    suggestion_text character varying,
    files_text character varying,
    contact_details_id integer,
    company_id integer,
    entry_num character varying,
    access_code integer,
    start_date timestamp with time zone,
    end_date timestamp with time zone,
    hist_id integer NOT NULL
);


ALTER TABLE eservices.suggestions_hist OWNER TO postgres;

--
-- Name: suggestions_hist_hist_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.suggestions_hist_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.suggestions_hist_hist_id_seq OWNER TO postgres;

--
-- Name: suggestions_hist_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.suggestions_hist_hist_id_seq OWNED BY eservices.suggestions_hist.hist_id;


--
-- Name: suggestions_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.suggestions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.suggestions_id_seq OWNER TO postgres;

--
-- Name: suggestions_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.suggestions_id_seq OWNED BY eservices.suggestions.id;


--
-- Name: training_course; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.training_course (
    id integer NOT NULL,
    diploma_num character varying(50),
    diploma_date timestamp with time zone,
    person_id bigint,
    speciality_id bigint,
    edu_level_id bigint,
    training_form_id bigint,
    training_location character varying(255),
    exit_number character varying(50),
    graduation_document_type_id integer,
    credit_hours integer,
    ects_credits integer
);


ALTER TABLE eservices.training_course OWNER TO postgres;

--
-- Name: training_course_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.training_course_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.training_course_id_seq OWNER TO postgres;

--
-- Name: training_course_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.training_course_id_seq OWNED BY eservices.training_course.id;


--
-- Name: xml_services; Type: TABLE; Schema: eservices; Owner: postgres
--

CREATE TABLE eservices.xml_services (
    id integer NOT NULL,
    sunau_service_name character varying(255),
    generated_class character varying(255)
);


ALTER TABLE eservices.xml_services OWNER TO postgres;

--
-- Name: xml_services_id_seq; Type: SEQUENCE; Schema: eservices; Owner: postgres
--

CREATE SEQUENCE eservices.xml_services_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE eservices.xml_services_id_seq OWNER TO postgres;

--
-- Name: xml_services_id_seq; Type: SEQUENCE OWNED BY; Schema: eservices; Owner: postgres
--

ALTER SEQUENCE eservices.xml_services_id_seq OWNED BY eservices.xml_services.id;


--
-- Name: academic_title; Type: TABLE; Schema: isobaq; Owner: postgres
--

CREATE TABLE isobaq.academic_title (
    id integer NOT NULL,
    country_code character varying(2),
    name_en character varying(50),
    name_ori character varying(50)
);


ALTER TABLE isobaq.academic_title OWNER TO postgres;

--
-- Name: academic_title_id_seq; Type: SEQUENCE; Schema: isobaq; Owner: postgres
--

CREATE SEQUENCE isobaq.academic_title_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE isobaq.academic_title_id_seq OWNER TO postgres;

--
-- Name: academic_title_id_seq; Type: SEQUENCE OWNED BY; Schema: isobaq; Owner: postgres
--

ALTER SEQUENCE isobaq.academic_title_id_seq OWNED BY isobaq.academic_title.id;


--
-- Name: access_further_bologna; Type: TABLE; Schema: isobaq; Owner: postgres
--

CREATE TABLE isobaq.access_further_bologna (
    edu_doc_type_id integer NOT NULL,
    bologna_cycle_id integer NOT NULL
);


ALTER TABLE isobaq.access_further_bologna OWNER TO postgres;

--
-- Name: access_further_eqf; Type: TABLE; Schema: isobaq; Owner: postgres
--

CREATE TABLE isobaq.access_further_eqf (
    edu_doc_type_id integer NOT NULL,
    eqf_id integer NOT NULL
);


ALTER TABLE isobaq.access_further_eqf OWNER TO postgres;

--
-- Name: access_further_nqf; Type: TABLE; Schema: isobaq; Owner: postgres
--

CREATE TABLE isobaq.access_further_nqf (
    edu_doc_type_id integer NOT NULL,
    nqf_id integer NOT NULL
);


ALTER TABLE isobaq.access_further_nqf OWNER TO postgres;

--
-- Name: award_institution_type; Type: TABLE; Schema: isobaq; Owner: postgres
--

CREATE TABLE isobaq.award_institution_type (
    id integer NOT NULL,
    country_code character varying(2),
    name character varying(50)
);


ALTER TABLE isobaq.award_institution_type OWNER TO postgres;

--
-- Name: award_institution_type_id_seq; Type: SEQUENCE; Schema: isobaq; Owner: postgres
--

CREATE SEQUENCE isobaq.award_institution_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE isobaq.award_institution_type_id_seq OWNER TO postgres;

--
-- Name: award_institution_type_id_seq; Type: SEQUENCE OWNED BY; Schema: isobaq; Owner: postgres
--

ALTER SEQUENCE isobaq.award_institution_type_id_seq OWNED BY isobaq.award_institution_type.id;


--
-- Name: blobs; Type: TABLE; Schema: isobaq; Owner: postgres
--

CREATE TABLE isobaq.blobs (
    id integer NOT NULL,
    file_name character varying(150),
    content_type character varying(150),
    file_size integer,
    content bytea,
    created_date timestamp with time zone,
    created_user_id integer
);


ALTER TABLE isobaq.blobs OWNER TO postgres;

--
-- Name: blobs_id_seq; Type: SEQUENCE; Schema: isobaq; Owner: postgres
--

CREATE SEQUENCE isobaq.blobs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE isobaq.blobs_id_seq OWNER TO postgres;

--
-- Name: blobs_id_seq; Type: SEQUENCE OWNED BY; Schema: isobaq; Owner: postgres
--

ALTER SEQUENCE isobaq.blobs_id_seq OWNED BY isobaq.blobs.id;


--
-- Name: blobs2; Type: TABLE; Schema: isobaq; Owner: postgres
--

CREATE TABLE isobaq.blobs2 (
    id integer DEFAULT nextval('isobaq.blobs_id_seq'::regclass) NOT NULL,
    file_name character varying(150),
    content_type character varying(150),
    file_size integer,
    content bytea,
    created_date timestamp with time zone,
    created_user_id integer
);


ALTER TABLE isobaq.blobs2 OWNER TO postgres;

--
-- Name: bologna_cycle; Type: TABLE; Schema: isobaq; Owner: postgres
--

CREATE TABLE isobaq.bologna_cycle (
    id integer NOT NULL,
    name character varying(50)
);


ALTER TABLE isobaq.bologna_cycle OWNER TO postgres;

--
-- Name: bologna_cycle_id_seq; Type: SEQUENCE; Schema: isobaq; Owner: postgres
--

CREATE SEQUENCE isobaq.bologna_cycle_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE isobaq.bologna_cycle_id_seq OWNER TO postgres;

--
-- Name: bologna_cycle_id_seq; Type: SEQUENCE OWNED BY; Schema: isobaq; Owner: postgres
--

ALTER SEQUENCE isobaq.bologna_cycle_id_seq OWNED BY isobaq.bologna_cycle.id;


--
-- Name: country; Type: TABLE; Schema: isobaq; Owner: postgres
--

CREATE TABLE isobaq.country (
    code character varying(2) NOT NULL,
    name character varying(50),
    flag smallint DEFAULT 0
);


ALTER TABLE isobaq.country OWNER TO postgres;

--
-- Name: doc_type; Type: TABLE; Schema: isobaq; Owner: postgres
--

CREATE TABLE isobaq.doc_type (
    id integer NOT NULL,
    name character varying(50)
);


ALTER TABLE isobaq.doc_type OWNER TO postgres;

--
-- Name: doc_type_id_seq; Type: SEQUENCE; Schema: isobaq; Owner: postgres
--

CREATE SEQUENCE isobaq.doc_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE isobaq.doc_type_id_seq OWNER TO postgres;

--
-- Name: doc_type_id_seq; Type: SEQUENCE OWNED BY; Schema: isobaq; Owner: postgres
--

ALTER SEQUENCE isobaq.doc_type_id_seq OWNED BY isobaq.doc_type.id;


--
-- Name: edu_doc_type; Type: TABLE; Schema: isobaq; Owner: postgres
--

CREATE TABLE isobaq.edu_doc_type (
    id integer NOT NULL,
    country_code character varying(2),
    doc_type_id integer,
    full_name_en character varying(100),
    full_name_ori character varying(100),
    compulsory_requisites text,
    other_distinctive_features text,
    doc_lang character varying(50),
    start_year smallint,
    end_year smallint,
    award_institution_name_ori character varying(100),
    award_institution_name_current character varying(100),
    award_institution_type_id integer,
    has_legislative_linkage boolean,
    academic_title_id integer,
    prof_qual_awarded boolean,
    way_of_graduation_id integer,
    bologna_cycle_id integer,
    eqf_id integer,
    nqf_id integer,
    created_user_id integer,
    created_date timestamp with time zone,
    updated_user_id integer,
    updated_date timestamp with time zone
);


ALTER TABLE isobaq.edu_doc_type OWNER TO postgres;

--
-- Name: edu_doc_type_descrs; Type: TABLE; Schema: isobaq; Owner: postgres
--

CREATE TABLE isobaq.edu_doc_type_descrs (
    edu_doc_type_id integer NOT NULL,
    blob_id integer NOT NULL
);


ALTER TABLE isobaq.edu_doc_type_descrs OWNER TO postgres;

--
-- Name: edu_doc_type_id_seq; Type: SEQUENCE; Schema: isobaq; Owner: postgres
--

CREATE SEQUENCE isobaq.edu_doc_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE isobaq.edu_doc_type_id_seq OWNER TO postgres;

--
-- Name: edu_doc_type_id_seq; Type: SEQUENCE OWNED BY; Schema: isobaq; Owner: postgres
--

ALTER SEQUENCE isobaq.edu_doc_type_id_seq OWNED BY isobaq.edu_doc_type.id;


--
-- Name: edu_doc_type_linkages; Type: TABLE; Schema: isobaq; Owner: postgres
--

CREATE TABLE isobaq.edu_doc_type_linkages (
    edu_doc_type_id integer NOT NULL,
    blob_id integer NOT NULL
);


ALTER TABLE isobaq.edu_doc_type_linkages OWNER TO postgres;

--
-- Name: edu_doc_type_nat_heis; Type: TABLE; Schema: isobaq; Owner: postgres
--

CREATE TABLE isobaq.edu_doc_type_nat_heis (
    edu_doc_type_id integer NOT NULL,
    blob_id integer NOT NULL
);


ALTER TABLE isobaq.edu_doc_type_nat_heis OWNER TO postgres;

--
-- Name: edu_doc_type_views; Type: TABLE; Schema: isobaq; Owner: postgres
--

CREATE TABLE isobaq.edu_doc_type_views (
    edu_doc_type_id integer NOT NULL,
    blob_id integer NOT NULL,
    ord smallint,
    id integer NOT NULL
);


ALTER TABLE isobaq.edu_doc_type_views OWNER TO postgres;

--
-- Name: edu_doc_type_views_id_seq; Type: SEQUENCE; Schema: isobaq; Owner: postgres
--

CREATE SEQUENCE isobaq.edu_doc_type_views_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE isobaq.edu_doc_type_views_id_seq OWNER TO postgres;

--
-- Name: edu_doc_type_views_id_seq; Type: SEQUENCE OWNED BY; Schema: isobaq; Owner: postgres
--

ALTER SEQUENCE isobaq.edu_doc_type_views_id_seq OWNED BY isobaq.edu_doc_type_views.id;


--
-- Name: eqf; Type: TABLE; Schema: isobaq; Owner: postgres
--

CREATE TABLE isobaq.eqf (
    id integer NOT NULL,
    name character varying(50)
);


ALTER TABLE isobaq.eqf OWNER TO postgres;

--
-- Name: eqf_id_seq; Type: SEQUENCE; Schema: isobaq; Owner: postgres
--

CREATE SEQUENCE isobaq.eqf_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE isobaq.eqf_id_seq OWNER TO postgres;

--
-- Name: eqf_id_seq; Type: SEQUENCE OWNED BY; Schema: isobaq; Owner: postgres
--

ALTER SEQUENCE isobaq.eqf_id_seq OWNED BY isobaq.eqf.id;


--
-- Name: isobaq_authority; Type: TABLE; Schema: isobaq; Owner: postgres
--

CREATE TABLE isobaq.isobaq_authority (
    isobaq_user_id integer NOT NULL,
    authority_name character varying NOT NULL
);


ALTER TABLE isobaq.isobaq_authority OWNER TO postgres;

--
-- Name: isobaq_authority_isobaq_user_id_seq; Type: SEQUENCE; Schema: isobaq; Owner: postgres
--

CREATE SEQUENCE isobaq.isobaq_authority_isobaq_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE isobaq.isobaq_authority_isobaq_user_id_seq OWNER TO postgres;

--
-- Name: isobaq_authority_isobaq_user_id_seq; Type: SEQUENCE OWNED BY; Schema: isobaq; Owner: postgres
--

ALTER SEQUENCE isobaq.isobaq_authority_isobaq_user_id_seq OWNED BY isobaq.isobaq_authority.isobaq_user_id;


--
-- Name: isobaq_user; Type: TABLE; Schema: isobaq; Owner: postgres
--

CREATE TABLE isobaq.isobaq_user (
    id integer NOT NULL,
    full_name character varying(150),
    username character varying(50),
    password character varying,
    email character varying(150),
    country_code character varying(2),
    is_super_admin boolean,
    is_active boolean,
    created_user_id integer,
    created_date timestamp with time zone,
    updated_user_id integer,
    updated_date timestamp with time zone
);


ALTER TABLE isobaq.isobaq_user OWNER TO postgres;

--
-- Name: isobaq_user_id_seq; Type: SEQUENCE; Schema: isobaq; Owner: postgres
--

CREATE SEQUENCE isobaq.isobaq_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE isobaq.isobaq_user_id_seq OWNER TO postgres;

--
-- Name: isobaq_user_id_seq; Type: SEQUENCE OWNED BY; Schema: isobaq; Owner: postgres
--

ALTER SEQUENCE isobaq.isobaq_user_id_seq OWNED BY isobaq.isobaq_user.id;


--
-- Name: nqf; Type: TABLE; Schema: isobaq; Owner: postgres
--

CREATE TABLE isobaq.nqf (
    id integer NOT NULL,
    name character varying(50),
    country_code character varying(2)
);


ALTER TABLE isobaq.nqf OWNER TO postgres;

--
-- Name: nqf_id_seq; Type: SEQUENCE; Schema: isobaq; Owner: postgres
--

CREATE SEQUENCE isobaq.nqf_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE isobaq.nqf_id_seq OWNER TO postgres;

--
-- Name: nqf_id_seq; Type: SEQUENCE OWNED BY; Schema: isobaq; Owner: postgres
--

ALTER SEQUENCE isobaq.nqf_id_seq OWNED BY isobaq.nqf.id;


--
-- Name: way_of_graduation; Type: TABLE; Schema: isobaq; Owner: postgres
--

CREATE TABLE isobaq.way_of_graduation (
    id integer NOT NULL,
    name character varying(50)
);


ALTER TABLE isobaq.way_of_graduation OWNER TO postgres;

--
-- Name: way_of_graduation_id_seq; Type: SEQUENCE; Schema: isobaq; Owner: postgres
--

CREATE SEQUENCE isobaq.way_of_graduation_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE isobaq.way_of_graduation_id_seq OWNER TO postgres;

--
-- Name: way_of_graduation_id_seq; Type: SEQUENCE OWNED BY; Schema: isobaq; Owner: postgres
--

ALTER SEQUENCE isobaq.way_of_graduation_id_seq OWNED BY isobaq.way_of_graduation.id;


--
-- Name: age_range; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.age_range (
    id integer NOT NULL,
    name character varying(80) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.age_range OWNER TO postgres;

--
-- Name: age_range_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.age_range_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.age_range_id_seq OWNER TO postgres;

--
-- Name: age_range_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.age_range_id_seq OWNED BY nomenclatures.age_range.id;


--
-- Name: app_session_status; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.app_session_status (
    id integer NOT NULL,
    name character varying(80) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.app_session_status OWNER TO postgres;

--
-- Name: app_session_status_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.app_session_status_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.app_session_status_id_seq OWNER TO postgres;

--
-- Name: app_session_status_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.app_session_status_id_seq OWNED BY nomenclatures.app_session_status.id;


--
-- Name: app_status; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.app_status (
    id integer NOT NULL,
    name character varying(80) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.app_status OWNER TO postgres;

--
-- Name: app_status_docflow; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.app_status_docflow (
    id integer NOT NULL,
    name character varying(80) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.app_status_docflow OWNER TO postgres;

--
-- Name: app_status_docflow_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.app_status_docflow_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.app_status_docflow_id_seq OWNER TO postgres;

--
-- Name: app_status_docflow_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.app_status_docflow_id_seq OWNED BY nomenclatures.app_status_docflow.id;


--
-- Name: app_status_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.app_status_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.app_status_id_seq OWNER TO postgres;

--
-- Name: app_status_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.app_status_id_seq OWNED BY nomenclatures.app_status.id;


--
-- Name: article_directive; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.article_directive (
    id integer NOT NULL,
    name character varying(100) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.article_directive OWNER TO postgres;

--
-- Name: article_directive_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.article_directive_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.article_directive_id_seq OWNER TO postgres;

--
-- Name: article_directive_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.article_directive_id_seq OWNED BY nomenclatures.article_directive.id;


--
-- Name: article_item; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.article_item (
    id integer NOT NULL,
    article_directive_id integer NOT NULL,
    name character varying(30) NOT NULL,
    date_from date,
    date_to date,
    qualification_level_label character varying
);


ALTER TABLE nomenclatures.article_item OWNER TO postgres;

--
-- Name: article_item_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.article_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.article_item_id_seq OWNER TO postgres;

--
-- Name: article_item_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.article_item_id_seq OWNED BY nomenclatures.article_item.id;


--
-- Name: bg_academic_recognition_status; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.bg_academic_recognition_status (
    id integer NOT NULL,
    name character varying(255),
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.bg_academic_recognition_status OWNER TO postgres;

--
-- Name: bg_academic_recognition_status_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.bg_academic_recognition_status_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.bg_academic_recognition_status_id_seq OWNER TO postgres;

--
-- Name: bg_academic_recognition_status_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.bg_academic_recognition_status_id_seq OWNED BY nomenclatures.bg_academic_recognition_status.id;


--
-- Name: bologna_cycle; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.bologna_cycle (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.bologna_cycle OWNER TO postgres;

--
-- Name: bologna_cycle_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.bologna_cycle_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.bologna_cycle_id_seq OWNER TO postgres;

--
-- Name: bologna_cycle_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.bologna_cycle_id_seq OWNED BY nomenclatures.bologna_cycle.id;


--
-- Name: certificate_prof_qualification; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.certificate_prof_qualification (
    id integer NOT NULL,
    name character varying(200) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.certificate_prof_qualification OWNER TO postgres;

--
-- Name: certificate_prof_qualification_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.certificate_prof_qualification_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.certificate_prof_qualification_id_seq OWNER TO postgres;

--
-- Name: certificate_prof_qualification_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.certificate_prof_qualification_id_seq OWNED BY nomenclatures.certificate_prof_qualification.id;


--
-- Name: civil_id_type; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.civil_id_type (
    id integer NOT NULL,
    name character varying(80) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.civil_id_type OWNER TO postgres;

--
-- Name: civil_id_type_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.civil_id_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.civil_id_type_id_seq OWNER TO postgres;

--
-- Name: civil_id_type_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.civil_id_type_id_seq OWNED BY nomenclatures.civil_id_type.id;


--
-- Name: commission_position; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.commission_position (
    id integer NOT NULL,
    name character varying(80),
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.commission_position OWNER TO postgres;

--
-- Name: commission_position_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.commission_position_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.commission_position_id_seq OWNER TO postgres;

--
-- Name: commission_position_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.commission_position_id_seq OWNED BY nomenclatures.commission_position.id;


--
-- Name: copy_types; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.copy_types (
    id integer NOT NULL,
    name character varying(80) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.copy_types OWNER TO postgres;

--
-- Name: copy_types_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.copy_types_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.copy_types_id_seq OWNER TO postgres;

--
-- Name: copy_types_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.copy_types_id_seq OWNED BY nomenclatures.copy_types.id;


--
-- Name: doc_category; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.doc_category (
    id integer NOT NULL,
    name character varying(80) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.doc_category OWNER TO postgres;

--
-- Name: doc_category_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.doc_category_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.doc_category_id_seq OWNER TO postgres;

--
-- Name: doc_category_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.doc_category_id_seq OWNED BY nomenclatures.doc_category.id;


--
-- Name: doc_type_to_doc_category; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.doc_type_to_doc_category (
    id integer NOT NULL,
    doc_type_id integer,
    doc_category_id integer
);


ALTER TABLE nomenclatures.doc_type_to_doc_category OWNER TO postgres;

--
-- Name: doc_type_to_doc_category_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.doc_type_to_doc_category_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.doc_type_to_doc_category_id_seq OWNER TO postgres;

--
-- Name: doc_type_to_doc_category_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.doc_type_to_doc_category_id_seq OWNED BY nomenclatures.doc_type_to_doc_category.id;


--
-- Name: doc_types; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.doc_types (
    id integer NOT NULL,
    name character varying(80) NOT NULL,
    date_from date,
    date_to date,
    in_out integer NOT NULL,
    has_docflow_id integer NOT NULL,
    doc_template character varying(255),
    sort integer,
    is_rejection boolean
);


ALTER TABLE nomenclatures.doc_types OWNER TO postgres;

--
-- Name: doc_types_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.doc_types_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.doc_types_id_seq OWNER TO postgres;

--
-- Name: doc_types_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.doc_types_id_seq OWNED BY nomenclatures.doc_types.id;


--
-- Name: document_receive_method; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.document_receive_method (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    has_document_recipient integer NOT NULL,
    date_from date,
    date_to date,
    eservices_require_payment_receipt integer NOT NULL
);


ALTER TABLE nomenclatures.document_receive_method OWNER TO postgres;

--
-- Name: document_receive_method_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.document_receive_method_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.document_receive_method_id_seq OWNER TO postgres;

--
-- Name: document_receive_method_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.document_receive_method_id_seq OWNED BY nomenclatures.document_receive_method.id;


--
-- Name: duration_unit; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.duration_unit (
    id integer NOT NULL,
    name character varying(80) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.duration_unit OWNER TO postgres;

--
-- Name: duration_unit_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.duration_unit_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.duration_unit_id_seq OWNER TO postgres;

--
-- Name: duration_unit_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.duration_unit_id_seq OWNED BY nomenclatures.duration_unit.id;


--
-- Name: edu_area_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.edu_area_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.edu_area_id_seq OWNER TO postgres;

--
-- Name: edu_area; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.edu_area (
    id integer DEFAULT nextval('nomenclatures.edu_area_id_seq'::regclass) NOT NULL,
    name character varying(80) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.edu_area OWNER TO postgres;

--
-- Name: edu_level_to_app_type; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.edu_level_to_app_type (
    id integer NOT NULL,
    application_type integer NOT NULL,
    edu_level_id integer NOT NULL
);


ALTER TABLE nomenclatures.edu_level_to_app_type OWNER TO postgres;

--
-- Name: edu_level_to_app_type_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.edu_level_to_app_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.edu_level_to_app_type_id_seq OWNER TO postgres;

--
-- Name: edu_level_to_app_type_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.edu_level_to_app_type_id_seq OWNED BY nomenclatures.edu_level_to_app_type.id;


--
-- Name: education_document_type; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.education_document_type (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.education_document_type OWNER TO postgres;

--
-- Name: education_document_type_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.education_document_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.education_document_type_id_seq OWNER TO postgres;

--
-- Name: education_document_type_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.education_document_type_id_seq OWNED BY nomenclatures.education_document_type.id;


--
-- Name: education_type; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.education_type (
    id integer NOT NULL,
    name character varying(80) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.education_type OWNER TO postgres;

--
-- Name: education_type_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.education_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.education_type_id_seq OWNER TO postgres;

--
-- Name: education_type_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.education_type_id_seq OWNED BY nomenclatures.education_type.id;


--
-- Name: ekareas; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.ekareas (
    id integer NOT NULL,
    code character varying(50),
    name character varying(200)
);


ALTER TABLE nomenclatures.ekareas OWNER TO postgres;

--
-- Name: ekareas_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.ekareas_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.ekareas_id_seq OWNER TO postgres;

--
-- Name: ekareas_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.ekareas_id_seq OWNED BY nomenclatures.ekareas.id;


--
-- Name: ekdistricts; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.ekdistricts (
    id integer NOT NULL,
    code character varying(50),
    mainsettlement character varying(50),
    name character varying(200),
    secondlevelregioncode character varying(50)
);


ALTER TABLE nomenclatures.ekdistricts OWNER TO postgres;

--
-- Name: ekdistricts_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.ekdistricts_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.ekdistricts_id_seq OWNER TO postgres;

--
-- Name: ekdistricts_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.ekdistricts_id_seq OWNED BY nomenclatures.ekdistricts.id;


--
-- Name: ekmayoralties; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.ekmayoralties (
    id integer NOT NULL,
    code character varying(50),
    mainsettlement character varying(50),
    name character varying(200),
    category character varying(50)
);


ALTER TABLE nomenclatures.ekmayoralties OWNER TO postgres;

--
-- Name: ekmayoralties_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.ekmayoralties_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.ekmayoralties_id_seq OWNER TO postgres;

--
-- Name: ekmayoralties_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.ekmayoralties_id_seq OWNED BY nomenclatures.ekmayoralties.id;


--
-- Name: ekmunicipalities; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.ekmunicipalities (
    id integer NOT NULL,
    code character varying(50),
    mainsettlement character varying(50),
    name character varying(200),
    category character varying(50)
);


ALTER TABLE nomenclatures.ekmunicipalities OWNER TO postgres;

--
-- Name: ekmunicipalities_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.ekmunicipalities_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.ekmunicipalities_id_seq OWNER TO postgres;

--
-- Name: ekmunicipalities_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.ekmunicipalities_id_seq OWNED BY nomenclatures.ekmunicipalities.id;


--
-- Name: eksecondlevelregions; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.eksecondlevelregions (
    id integer NOT NULL,
    code character varying(50),
    name character varying(200)
);


ALTER TABLE nomenclatures.eksecondlevelregions OWNER TO postgres;

--
-- Name: eksecondlevelregions_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.eksecondlevelregions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.eksecondlevelregions_id_seq OWNER TO postgres;

--
-- Name: eksecondlevelregions_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.eksecondlevelregions_id_seq OWNED BY nomenclatures.eksecondlevelregions.id;


--
-- Name: eksettlements; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.eksettlements (
    id integer NOT NULL,
    code character varying(50),
    typename character varying(200),
    name character varying(200),
    districtcode character varying(50),
    manucipalitycode character varying(50),
    mayoraltycode character varying(50),
    typecode character varying(50),
    category character varying(50),
    altitude character varying(50)
);


ALTER TABLE nomenclatures.eksettlements OWNER TO postgres;

--
-- Name: eksettlements_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.eksettlements_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.eksettlements_id_seq OWNER TO postgres;

--
-- Name: eksettlements_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.eksettlements_id_seq OWNED BY nomenclatures.eksettlements.id;


--
-- Name: european_qualifications_framework; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.european_qualifications_framework (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.european_qualifications_framework OWNER TO postgres;

--
-- Name: european_qualifications_framework_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.european_qualifications_framework_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.european_qualifications_framework_id_seq OWNER TO postgres;

--
-- Name: european_qualifications_framework_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.european_qualifications_framework_id_seq OWNED BY nomenclatures.european_qualifications_framework.id;


--
-- Name: event_status; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.event_status (
    id integer NOT NULL,
    name character varying(80) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.event_status OWNER TO postgres;

--
-- Name: event_status_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.event_status_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.event_status_id_seq OWNER TO postgres;

--
-- Name: event_status_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.event_status_id_seq OWNED BY nomenclatures.event_status.id;


--
-- Name: event_type; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.event_type (
    id integer NOT NULL,
    event_name character varying(100) NOT NULL,
    reminder_days integer,
    due_days integer,
    reminder_text text
);


ALTER TABLE nomenclatures.event_type OWNER TO postgres;

--
-- Name: event_type_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.event_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.event_type_id_seq OWNER TO postgres;

--
-- Name: event_type_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.event_type_id_seq OWNED BY nomenclatures.event_type.id;


--
-- Name: expert_position; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.expert_position (
    id integer NOT NULL,
    name character varying(100) NOT NULL,
    date_from date,
    date_to date,
    related_app_status_id integer
);


ALTER TABLE nomenclatures.expert_position OWNER TO postgres;

--
-- Name: expert_position_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.expert_position_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.expert_position_id_seq OWNER TO postgres;

--
-- Name: expert_position_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.expert_position_id_seq OWNED BY nomenclatures.expert_position.id;


--
-- Name: grade; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.grade (
    id integer NOT NULL,
    name character varying(80) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.grade OWNER TO postgres;

--
-- Name: grade_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.grade_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.grade_id_seq OWNER TO postgres;

--
-- Name: grade_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.grade_id_seq OWNED BY nomenclatures.grade.id;


--
-- Name: graduation_document_type; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.graduation_document_type (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.graduation_document_type OWNER TO postgres;

--
-- Name: graduation_document_type_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.graduation_document_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.graduation_document_type_id_seq OWNER TO postgres;

--
-- Name: graduation_document_type_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.graduation_document_type_id_seq OWNED BY nomenclatures.graduation_document_type.id;


--
-- Name: graoareas; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.graoareas (
    id integer NOT NULL,
    municipalityid integer NOT NULL,
    code character varying(50),
    name character varying(200)
);


ALTER TABLE nomenclatures.graoareas OWNER TO postgres;

--
-- Name: graoareas_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.graoareas_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.graoareas_id_seq OWNER TO postgres;

--
-- Name: graoareas_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.graoareas_id_seq OWNED BY nomenclatures.graoareas.id;


--
-- Name: graoareas_municipalityid_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.graoareas_municipalityid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.graoareas_municipalityid_seq OWNER TO postgres;

--
-- Name: graoareas_municipalityid_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.graoareas_municipalityid_seq OWNED BY nomenclatures.graoareas.municipalityid;


--
-- Name: graodistricts; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.graodistricts (
    id integer NOT NULL,
    code character varying(50),
    name character varying(200)
);


ALTER TABLE nomenclatures.graodistricts OWNER TO postgres;

--
-- Name: graodistricts_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.graodistricts_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.graodistricts_id_seq OWNER TO postgres;

--
-- Name: graodistricts_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.graodistricts_id_seq OWNED BY nomenclatures.graodistricts.id;


--
-- Name: graomunicipalities; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.graomunicipalities (
    id integer NOT NULL,
    districtid integer NOT NULL,
    code character varying(50),
    name character varying(200)
);


ALTER TABLE nomenclatures.graomunicipalities OWNER TO postgres;

--
-- Name: graomunicipalities_districtid_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.graomunicipalities_districtid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.graomunicipalities_districtid_seq OWNER TO postgres;

--
-- Name: graomunicipalities_districtid_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.graomunicipalities_districtid_seq OWNED BY nomenclatures.graomunicipalities.districtid;


--
-- Name: graomunicipalities_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.graomunicipalities_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.graomunicipalities_id_seq OWNER TO postgres;

--
-- Name: graomunicipalities_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.graomunicipalities_id_seq OWNED BY nomenclatures.graomunicipalities.id;


--
-- Name: graosettlements; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.graosettlements (
    id integer NOT NULL,
    municipalityid integer NOT NULL,
    code character varying(50),
    name character varying(200),
    isdistrict smallint NOT NULL
);


ALTER TABLE nomenclatures.graosettlements OWNER TO postgres;

--
-- Name: graosettlements_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.graosettlements_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.graosettlements_id_seq OWNER TO postgres;

--
-- Name: graosettlements_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.graosettlements_id_seq OWNED BY nomenclatures.graosettlements.id;


--
-- Name: higher_prof_qualification; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.higher_prof_qualification (
    id integer NOT NULL,
    name character varying(200) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.higher_prof_qualification OWNER TO postgres;

--
-- Name: higher_prof_qualification_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.higher_prof_qualification_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.higher_prof_qualification_id_seq OWNER TO postgres;

--
-- Name: higher_prof_qualification_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.higher_prof_qualification_id_seq OWNED BY nomenclatures.higher_prof_qualification.id;


--
-- Name: higher_speciality; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.higher_speciality (
    id integer NOT NULL,
    name character varying(150) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.higher_speciality OWNER TO postgres;

--
-- Name: higher_speciality_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.higher_speciality_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.higher_speciality_id_seq OWNER TO postgres;

--
-- Name: higher_speciality_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.higher_speciality_id_seq OWNED BY nomenclatures.higher_speciality.id;


--
-- Name: irregularities; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.irregularities (
    id integer NOT NULL,
    name character varying(255),
    description character varying(50)
);


ALTER TABLE nomenclatures.irregularities OWNER TO postgres;

--
-- Name: irregularities_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.irregularities_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.irregularities_id_seq OWNER TO postgres;

--
-- Name: irregularities_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.irregularities_id_seq OWNED BY nomenclatures.irregularities.id;


--
-- Name: irregularity_service; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.irregularity_service (
    id integer NOT NULL,
    irregularity_id integer,
    entry_num_series integer
);


ALTER TABLE nomenclatures.irregularity_service OWNER TO postgres;

--
-- Name: irregularity_service_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.irregularity_service_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.irregularity_service_id_seq OWNER TO postgres;

--
-- Name: irregularity_service_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.irregularity_service_id_seq OWNED BY nomenclatures.irregularity_service.id;


--
-- Name: language; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.language (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    iso639_code character varying(2) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.language OWNER TO postgres;

--
-- Name: language_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.language_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.language_id_seq OWNER TO postgres;

--
-- Name: language_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.language_id_seq OWNED BY nomenclatures.language.id;


--
-- Name: legal_reason; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.legal_reason (
    id integer NOT NULL,
    name character varying(50) NOT NULL,
    date_from date,
    date_to date,
    app_status_id integer,
    ordinance_article character varying(255),
    regulation_article character varying(255),
    regulation_text text
);


ALTER TABLE nomenclatures.legal_reason OWNER TO postgres;

--
-- Name: legal_reason_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.legal_reason_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.legal_reason_id_seq OWNER TO postgres;

--
-- Name: legal_reason_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.legal_reason_id_seq OWNED BY nomenclatures.legal_reason.id;


--
-- Name: legal_reason_to_app_type; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.legal_reason_to_app_type (
    id integer NOT NULL,
    application_type integer NOT NULL,
    legal_reason_id integer NOT NULL
);


ALTER TABLE nomenclatures.legal_reason_to_app_type OWNER TO postgres;

--
-- Name: legal_reason_to_app_type_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.legal_reason_to_app_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.legal_reason_to_app_type_id_seq OWNER TO postgres;

--
-- Name: legal_reason_to_app_type_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.legal_reason_to_app_type_id_seq OWNED BY nomenclatures.legal_reason_to_app_type.id;


--
-- Name: national_qualifications_framework; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.national_qualifications_framework (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    date_from date,
    date_to date,
    country_id integer
);


ALTER TABLE nomenclatures.national_qualifications_framework OWNER TO postgres;

--
-- Name: national_qualifications_framework_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.national_qualifications_framework_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.national_qualifications_framework_id_seq OWNER TO postgres;

--
-- Name: national_qualifications_framework_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.national_qualifications_framework_id_seq OWNED BY nomenclatures.national_qualifications_framework.id;


--
-- Name: original_edu_level; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.original_edu_level (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    country_id integer NOT NULL,
    edu_level_id integer NOT NULL,
    date_from date,
    date_to date,
    name_translated character varying(255)
);


ALTER TABLE nomenclatures.original_edu_level OWNER TO postgres;

--
-- Name: original_edu_level_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.original_edu_level_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.original_edu_level_id_seq OWNER TO postgres;

--
-- Name: original_edu_level_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.original_edu_level_id_seq OWNED BY nomenclatures.original_edu_level.id;


--
-- Name: original_qualification; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.original_qualification (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.original_qualification OWNER TO postgres;

--
-- Name: original_qualification_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.original_qualification_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.original_qualification_id_seq OWNER TO postgres;

--
-- Name: original_qualification_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.original_qualification_id_seq OWNED BY nomenclatures.original_qualification.id;


--
-- Name: original_speciality; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.original_speciality (
    id integer NOT NULL,
    name character varying(150) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.original_speciality OWNER TO postgres;

--
-- Name: original_speciality_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.original_speciality_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.original_speciality_id_seq OWNER TO postgres;

--
-- Name: original_speciality_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.original_speciality_id_seq OWNED BY nomenclatures.original_speciality.id;


--
-- Name: payment_type; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.payment_type (
    id integer NOT NULL,
    name character varying(80) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.payment_type OWNER TO postgres;

--
-- Name: payment_type_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.payment_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.payment_type_id_seq OWNER TO postgres;

--
-- Name: payment_type_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.payment_type_id_seq OWNED BY nomenclatures.payment_type.id;


--
-- Name: personal_id_document_type; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.personal_id_document_type (
    id integer NOT NULL,
    name character varying(80) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.personal_id_document_type OWNER TO postgres;

--
-- Name: personal_id_document_type_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.personal_id_document_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.personal_id_document_type_id_seq OWNER TO postgres;

--
-- Name: personal_id_document_type_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.personal_id_document_type_id_seq OWNED BY nomenclatures.personal_id_document_type.id;


--
-- Name: prof_group_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.prof_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.prof_group_id_seq OWNER TO postgres;

--
-- Name: prof_group; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.prof_group (
    id integer DEFAULT nextval('nomenclatures.prof_group_id_seq'::regclass) NOT NULL,
    name text NOT NULL,
    edu_area_id integer,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.prof_group OWNER TO postgres;

--
-- Name: profession_experience_document_type; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.profession_experience_document_type (
    id integer NOT NULL,
    name character varying(100) NOT NULL,
    date_from date,
    date_to date,
    for_experience_calculation integer NOT NULL
);


ALTER TABLE nomenclatures.profession_experience_document_type OWNER TO postgres;

--
-- Name: profession_experience_document_type_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.profession_experience_document_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.profession_experience_document_type_id_seq OWNER TO postgres;

--
-- Name: profession_experience_document_type_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.profession_experience_document_type_id_seq OWNED BY nomenclatures.profession_experience_document_type.id;


--
-- Name: profession_experience_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.profession_experience_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.profession_experience_id_seq OWNER TO postgres;

--
-- Name: profession_experience_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.profession_experience_id_seq OWNED BY nomenclatures.profession_experience.id;


--
-- Name: profession_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.profession_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.profession_id_seq OWNER TO postgres;

--
-- Name: profession_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.profession_id_seq OWNED BY nomenclatures.profession.id;


--
-- Name: professional_institution_type; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.professional_institution_type (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.professional_institution_type OWNER TO postgres;

--
-- Name: professional_institution_type_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.professional_institution_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.professional_institution_type_id_seq OWNER TO postgres;

--
-- Name: professional_institution_type_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.professional_institution_type_id_seq OWNED BY nomenclatures.professional_institution_type.id;


--
-- Name: property; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.property (
    id integer NOT NULL,
    key character varying(256),
    value text
);


ALTER TABLE nomenclatures.property OWNER TO postgres;

--
-- Name: property_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.property_id_seq
    START WITH 49
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.property_id_seq OWNER TO postgres;

--
-- Name: purpose_of_recognition; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.purpose_of_recognition (
    id integer NOT NULL,
    name character varying(80) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.purpose_of_recognition OWNER TO postgres;

--
-- Name: purpose_of_recognition_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.purpose_of_recognition_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.purpose_of_recognition_id_seq OWNER TO postgres;

--
-- Name: purpose_of_recognition_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.purpose_of_recognition_id_seq OWNED BY nomenclatures.purpose_of_recognition.id;


--
-- Name: qualification; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.qualification (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.qualification OWNER TO postgres;

--
-- Name: qualification_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.qualification_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.qualification_id_seq OWNER TO postgres;

--
-- Name: qualification_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.qualification_id_seq OWNED BY nomenclatures.qualification.id;


--
-- Name: regprof_app_status; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.regprof_app_status (
    id integer NOT NULL,
    name character varying(100) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.regprof_app_status OWNER TO postgres;

--
-- Name: regprof_app_status_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.regprof_app_status_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.regprof_app_status_id_seq OWNER TO postgres;

--
-- Name: regprof_app_status_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.regprof_app_status_id_seq OWNED BY nomenclatures.regprof_app_status.id;


--
-- Name: school_type; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.school_type (
    id integer NOT NULL,
    name character varying(80) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.school_type OWNER TO postgres;

--
-- Name: school_type_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.school_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.school_type_id_seq OWNER TO postgres;

--
-- Name: school_type_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.school_type_id_seq OWNED BY nomenclatures.school_type.id;


--
-- Name: secondary_caliber; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.secondary_caliber (
    id integer NOT NULL,
    name character varying(150) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.secondary_caliber OWNER TO postgres;

--
-- Name: secondary_caliber_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.secondary_caliber_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.secondary_caliber_id_seq OWNER TO postgres;

--
-- Name: secondary_caliber_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.secondary_caliber_id_seq OWNED BY nomenclatures.secondary_caliber.id;


--
-- Name: secondary_prof_qualification; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.secondary_prof_qualification (
    id integer NOT NULL,
    name character varying(200) NOT NULL,
    profession_group_id integer,
    date_from date,
    date_to date,
    code character varying(10)
);


ALTER TABLE nomenclatures.secondary_prof_qualification OWNER TO postgres;

--
-- Name: secondary_prof_qualification_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.secondary_prof_qualification_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.secondary_prof_qualification_id_seq OWNER TO postgres;

--
-- Name: secondary_prof_qualification_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.secondary_prof_qualification_id_seq OWNED BY nomenclatures.secondary_prof_qualification.id;


--
-- Name: secondary_profession_group; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.secondary_profession_group (
    id integer NOT NULL,
    name character varying(150),
    date_from date,
    date_to date,
    code character varying(10)
);


ALTER TABLE nomenclatures.secondary_profession_group OWNER TO postgres;

--
-- Name: secondary_profession_group_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.secondary_profession_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.secondary_profession_group_id_seq OWNER TO postgres;

--
-- Name: secondary_profession_group_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.secondary_profession_group_id_seq OWNED BY nomenclatures.secondary_profession_group.id;


--
-- Name: secondary_qualification_degree; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.secondary_qualification_degree (
    id integer NOT NULL,
    name character varying(200) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.secondary_qualification_degree OWNER TO postgres;

--
-- Name: secondary_qualification_degree_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.secondary_qualification_degree_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.secondary_qualification_degree_id_seq OWNER TO postgres;

--
-- Name: secondary_qualification_degree_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.secondary_qualification_degree_id_seq OWNED BY nomenclatures.secondary_qualification_degree.id;


--
-- Name: secondary_speciality; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.secondary_speciality (
    id integer NOT NULL,
    name character varying(150) NOT NULL,
    prof_qualification_id integer NOT NULL,
    qualification_degree_id integer,
    date_from date,
    date_to date,
    code character varying(10)
);


ALTER TABLE nomenclatures.secondary_speciality OWNER TO postgres;

--
-- Name: secondary_speciality_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.secondary_speciality_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.secondary_speciality_id_seq OWNER TO postgres;

--
-- Name: secondary_speciality_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.secondary_speciality_id_seq OWNED BY nomenclatures.secondary_speciality.id;


--
-- Name: service_type; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.service_type (
    id integer NOT NULL,
    name character varying(100) NOT NULL,
    execution_days integer NOT NULL,
    date_from date,
    date_to date,
    service_price numeric(15,2) NOT NULL
);


ALTER TABLE nomenclatures.service_type OWNER TO postgres;

--
-- Name: service_type_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.service_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.service_type_id_seq OWNER TO postgres;

--
-- Name: service_type_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.service_type_id_seq OWNED BY nomenclatures.service_type.id;


--
-- Name: session_status; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.session_status (
    id integer NOT NULL,
    name character varying(80) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.session_status OWNER TO postgres;

--
-- Name: session_status_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.session_status_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.session_status_id_seq OWNER TO postgres;

--
-- Name: session_status_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.session_status_id_seq OWNED BY nomenclatures.session_status.id;


--
-- Name: training_form; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.training_form (
    id integer NOT NULL,
    name character varying(80) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.training_form OWNER TO postgres;

--
-- Name: training_form_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.training_form_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.training_form_id_seq OWNER TO postgres;

--
-- Name: training_form_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.training_form_id_seq OWNED BY nomenclatures.training_form.id;


--
-- Name: training_location; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.training_location (
    id integer NOT NULL,
    name character varying(80) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.training_location OWNER TO postgres;

--
-- Name: training_location_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.training_location_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.training_location_id_seq OWNER TO postgres;

--
-- Name: training_location_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.training_location_id_seq OWNED BY nomenclatures.training_location.id;


--
-- Name: university_details; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.university_details (
    id integer NOT NULL,
    university_name character varying(255) NOT NULL,
    letter_recipient text NOT NULL,
    salutation character varying(150) NOT NULL
);


ALTER TABLE nomenclatures.university_details OWNER TO postgres;

--
-- Name: university_details_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.university_details_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.university_details_id_seq OWNER TO postgres;

--
-- Name: university_details_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.university_details_id_seq OWNED BY nomenclatures.university_details.id;


--
-- Name: university_generic_name; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.university_generic_name (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.university_generic_name OWNER TO postgres;

--
-- Name: university_generic_name_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.university_generic_name_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.university_generic_name_id_seq OWNER TO postgres;

--
-- Name: university_generic_name_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.university_generic_name_id_seq OWNED BY nomenclatures.university_generic_name.id;


--
-- Name: way_of_graduation; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.way_of_graduation (
    id integer NOT NULL,
    name character varying(80) NOT NULL,
    date_from date,
    date_to date
);


ALTER TABLE nomenclatures.way_of_graduation OWNER TO postgres;

--
-- Name: way_of_graduation_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.way_of_graduation_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.way_of_graduation_id_seq OWNER TO postgres;

--
-- Name: way_of_graduation_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.way_of_graduation_id_seq OWNED BY nomenclatures.way_of_graduation.id;


--
-- Name: way_of_graduation_to_app_type; Type: TABLE; Schema: nomenclatures; Owner: postgres
--

CREATE TABLE nomenclatures.way_of_graduation_to_app_type (
    id integer NOT NULL,
    way_of_graduation_id integer NOT NULL,
    application_type integer NOT NULL
);


ALTER TABLE nomenclatures.way_of_graduation_to_app_type OWNER TO postgres;

--
-- Name: way_of_graduation_to_app_type_id_seq; Type: SEQUENCE; Schema: nomenclatures; Owner: postgres
--

CREATE SEQUENCE nomenclatures.way_of_graduation_to_app_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nomenclatures.way_of_graduation_to_app_type_id_seq OWNER TO postgres;

--
-- Name: way_of_graduation_to_app_type_id_seq; Type: SEQUENCE OWNED BY; Schema: nomenclatures; Owner: postgres
--

ALTER SEQUENCE nomenclatures.way_of_graduation_to_app_type_id_seq OWNED BY nomenclatures.way_of_graduation_to_app_type.id;


--
-- Name: entry_num_series_series_id_seq; Type: SEQUENCE; Schema: numgenerator; Owner: postgres
--

CREATE SEQUENCE numgenerator.entry_num_series_series_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE numgenerator.entry_num_series_series_id_seq OWNER TO postgres;

--
-- Name: entry_num_series; Type: TABLE; Schema: numgenerator; Owner: postgres
--

CREATE TABLE numgenerator.entry_num_series (
    id integer DEFAULT nextval('numgenerator.entry_num_series_series_id_seq'::regclass) NOT NULL,
    series_name character varying(100),
    last_allocated integer,
    code character varying,
    archive_code character varying(50),
    is_reloadable integer,
    year_changed character varying(4)
);


ALTER TABLE numgenerator.entry_num_series OWNER TO postgres;

--
-- Name: entry_num_series_nums_id_seq; Type: SEQUENCE; Schema: numgenerator; Owner: postgres
--

CREATE SEQUENCE numgenerator.entry_num_series_nums_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE numgenerator.entry_num_series_nums_id_seq OWNER TO postgres;

--
-- Name: entry_nums; Type: TABLE; Schema: numgenerator; Owner: postgres
--

CREATE TABLE numgenerator.entry_nums (
    allocated_num integer NOT NULL,
    series_id integer NOT NULL,
    submission_type integer DEFAULT 0 NOT NULL,
    date_allocated timestamp with time zone DEFAULT now(),
    entry_num character varying(25),
    id integer DEFAULT nextval('numgenerator.entry_num_series_nums_id_seq'::regclass) NOT NULL
);


ALTER TABLE numgenerator.entry_nums OWNER TO postgres;

--
-- Name: submission_types; Type: TABLE; Schema: numgenerator; Owner: postgres
--

CREATE TABLE numgenerator.submission_types (
    id integer NOT NULL,
    name character varying(10)
);


ALTER TABLE numgenerator.submission_types OWNER TO postgres;

--
-- Name: entry_num_egov_code; Type: TABLE; Schema: payments; Owner: postgres
--

CREATE TABLE payments.entry_num_egov_code (
    id integer NOT NULL,
    entry_num character varying(25),
    egov_code character varying(25),
    status character varying(100),
    created_date timestamp with time zone,
    expiry_date timestamp with time zone,
    liability_id integer,
    date_updated timestamp with time zone DEFAULT now()
);


ALTER TABLE payments.entry_num_egov_code OWNER TO postgres;

--
-- Name: entry_num_egov_code_id_seq; Type: SEQUENCE; Schema: payments; Owner: postgres
--

CREATE SEQUENCE payments.entry_num_egov_code_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE payments.entry_num_egov_code_id_seq OWNER TO postgres;

--
-- Name: entry_num_egov_code_id_seq; Type: SEQUENCE OWNED BY; Schema: payments; Owner: postgres
--

ALTER SEQUENCE payments.entry_num_egov_code_id_seq OWNED BY payments.entry_num_egov_code.id;


--
-- Name: epay_code; Type: TABLE; Schema: payments; Owner: postgres
--

CREATE TABLE payments.epay_code (
    id integer NOT NULL,
    entry_num character varying(25),
    epay_invoice character varying(25),
    created_date timestamp with time zone,
    expiry_date timestamp with time zone,
    liability_id integer,
    status character varying(50),
    invoice_variable integer DEFAULT 0,
    date_updated timestamp with time zone DEFAULT now()
);


ALTER TABLE payments.epay_code OWNER TO postgres;

--
-- Name: epay_code_id_seq; Type: SEQUENCE; Schema: payments; Owner: postgres
--

CREATE SEQUENCE payments.epay_code_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE payments.epay_code_id_seq OWNER TO postgres;

--
-- Name: epay_code_id_seq; Type: SEQUENCE OWNED BY; Schema: payments; Owner: postgres
--

ALTER SEQUENCE payments.epay_code_id_seq OWNED BY payments.epay_code.id;


--
-- Name: epay_merchant_configurations; Type: TABLE; Schema: payments; Owner: postgres
--

CREATE TABLE payments.epay_merchant_configurations (
    id integer NOT NULL,
    merchant_name character varying(25) NOT NULL,
    iban character varying(50) NOT NULL,
    bic character varying(20) NOT NULL,
    payment_type_id character varying(6),
    epay_cin character varying(15) NOT NULL,
    secret_key character varying(64) NOT NULL,
    document_number character varying(5)
);


ALTER TABLE payments.epay_merchant_configurations OWNER TO postgres;

--
-- Name: epay_merchant_configurations_id_seq; Type: SEQUENCE; Schema: payments; Owner: postgres
--

CREATE SEQUENCE payments.epay_merchant_configurations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE payments.epay_merchant_configurations_id_seq OWNER TO postgres;

--
-- Name: epay_merchant_configurations_id_seq; Type: SEQUENCE OWNED BY; Schema: payments; Owner: postgres
--

ALTER SEQUENCE payments.epay_merchant_configurations_id_seq OWNED BY payments.epay_merchant_configurations.id;


--
-- Name: epay_module_configurations; Type: TABLE; Schema: payments; Owner: postgres
--

CREATE TABLE payments.epay_module_configurations (
    id integer NOT NULL,
    module character varying(15) NOT NULL,
    epay_merchant_config_id integer,
    epay_payment_description character varying(100)
);


ALTER TABLE payments.epay_module_configurations OWNER TO postgres;

--
-- Name: epay_module_configurations_id_seq; Type: SEQUENCE; Schema: payments; Owner: postgres
--

CREATE SEQUENCE payments.epay_module_configurations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE payments.epay_module_configurations_id_seq OWNER TO postgres;

--
-- Name: epay_module_configurations_id_seq; Type: SEQUENCE OWNED BY; Schema: payments; Owner: postgres
--

ALTER SEQUENCE payments.epay_module_configurations_id_seq OWNED BY payments.epay_module_configurations.id;


--
-- Name: liabilities; Type: TABLE; Schema: payments; Owner: postgres
--

CREATE TABLE payments.liabilities (
    id integer NOT NULL,
    reference_number character varying(100) NOT NULL,
    amount numeric(10,2) NOT NULL,
    amount_outstanding numeric(10,2) NOT NULL,
    date_generated timestamp with time zone DEFAULT now() NOT NULL,
    module character varying(20) NOT NULL,
    status character varying(30),
    parent integer,
    date_updated timestamp with time zone DEFAULT now()
);


ALTER TABLE payments.liabilities OWNER TO postgres;

--
-- Name: liabilities_id_seq; Type: SEQUENCE; Schema: payments; Owner: postgres
--

CREATE SEQUENCE payments.liabilities_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE payments.liabilities_id_seq OWNER TO postgres;

--
-- Name: liabilities_id_seq; Type: SEQUENCE OWNED BY; Schema: payments; Owner: postgres
--

ALTER SEQUENCE payments.liabilities_id_seq OWNED BY payments.liabilities.id;


--
-- Name: liability_code_to_module; Type: TABLE; Schema: payments; Owner: postgres
--

CREATE TABLE payments.liability_code_to_module (
    module character varying(20) NOT NULL,
    liability_code character varying(100) NOT NULL,
    is_active integer DEFAULT 1 NOT NULL,
    default_value numeric(10,2) NOT NULL,
    "order" integer
);


ALTER TABLE payments.liability_code_to_module OWNER TO postgres;

--
-- Name: liability_details; Type: TABLE; Schema: payments; Owner: postgres
--

CREATE TABLE payments.liability_details (
    id integer NOT NULL,
    liability_code character varying(15) NOT NULL,
    amount numeric(10,2) NOT NULL,
    amount_outstanding numeric(10,2) NOT NULL,
    reference_number character varying(100) NOT NULL,
    date_created timestamp with time zone NOT NULL,
    reference_date date NOT NULL,
    status character varying(8),
    annuity_number integer,
    expiration_date date,
    ready_for_epayment integer DEFAULT 0 NOT NULL
);


ALTER TABLE payments.liability_details OWNER TO postgres;

--
-- Name: liability_details_id_seq; Type: SEQUENCE; Schema: payments; Owner: postgres
--

CREATE SEQUENCE payments.liability_details_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE payments.liability_details_id_seq OWNER TO postgres;

--
-- Name: liability_details_id_seq; Type: SEQUENCE OWNED BY; Schema: payments; Owner: postgres
--

ALTER SEQUENCE payments.liability_details_id_seq OWNED BY payments.liability_details.id;


--
-- Name: liable_persons; Type: TABLE; Schema: payments; Owner: postgres
--

CREATE TABLE payments.liable_persons (
    id integer NOT NULL,
    civil_id character varying(10),
    person_name character varying(100)
);


ALTER TABLE payments.liable_persons OWNER TO postgres;

--
-- Name: liable_persons_id_seq; Type: SEQUENCE; Schema: payments; Owner: postgres
--

CREATE SEQUENCE payments.liable_persons_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE payments.liable_persons_id_seq OWNER TO postgres;

--
-- Name: liable_persons_id_seq; Type: SEQUENCE OWNED BY; Schema: payments; Owner: postgres
--

ALTER SEQUENCE payments.liable_persons_id_seq OWNED BY payments.liable_persons.id;


--
-- Name: module_configurations; Type: TABLE; Schema: payments; Owner: postgres
--

CREATE TABLE payments.module_configurations (
    id integer NOT NULL,
    module character varying(20) NOT NULL,
    mac character varying(64),
    ipas_module integer NOT NULL
);


ALTER TABLE payments.module_configurations OWNER TO postgres;

--
-- Name: module_configurations_id_seq; Type: SEQUENCE; Schema: payments; Owner: postgres
--

CREATE SEQUENCE payments.module_configurations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE payments.module_configurations_id_seq OWNER TO postgres;

--
-- Name: module_configurations_id_seq; Type: SEQUENCE OWNED BY; Schema: payments; Owner: postgres
--

ALTER SEQUENCE payments.module_configurations_id_seq OWNED BY payments.module_configurations.id;


--
-- Name: modules; Type: TABLE; Schema: payments; Owner: postgres
--

CREATE TABLE payments.modules (
    module character varying(20) NOT NULL,
    name character varying(255) NOT NULL
);


ALTER TABLE payments.modules OWNER TO postgres;

--
-- Name: nom_liability_codes; Type: TABLE; Schema: payments; Owner: postgres
--

CREATE TABLE payments.nom_liability_codes (
    liability_code character varying(100) NOT NULL,
    description character varying(255) NOT NULL,
    is_annuity integer NOT NULL
);


ALTER TABLE payments.nom_liability_codes OWNER TO postgres;

--
-- Name: payments; Type: TABLE; Schema: payments; Owner: postgres
--

CREATE TABLE payments.payments (
    id integer NOT NULL,
    ref_number character varying(30) NOT NULL,
    date_payment date NOT NULL,
    amount numeric(10,2) NOT NULL,
    currency character varying(3) NOT NULL,
    reason character varying(255),
    date_created timestamp without time zone NOT NULL,
    type character varying(4) NOT NULL,
    amount_outstanding numeric(10,2) NOT NULL,
    payer_name character varying(255) NOT NULL
);


ALTER TABLE payments.payments OWNER TO postgres;

--
-- Name: payments_id_seq; Type: SEQUENCE; Schema: payments; Owner: postgres
--

CREATE SEQUENCE payments.payments_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE payments.payments_id_seq OWNER TO postgres;

--
-- Name: payments_id_seq; Type: SEQUENCE OWNED BY; Schema: payments; Owner: postgres
--

ALTER SEQUENCE payments.payments_id_seq OWNED BY payments.payments.id;


--
-- Name: ref_data; Type: TABLE; Schema: payments; Owner: postgres
--

CREATE TABLE payments.ref_data (
    rv_domain character varying(25) NOT NULL,
    rv_code character varying(20) NOT NULL,
    rv_val character varying(150) NOT NULL,
    rv_index smallint
);


ALTER TABLE payments.ref_data OWNER TO postgres;

--
-- Name: request_log; Type: TABLE; Schema: payments; Owner: postgres
--

CREATE TABLE payments.request_log (
    id integer NOT NULL,
    payment_amount numeric NOT NULL,
    reference_number character varying(255) NOT NULL,
    payment_method character varying(10),
    module character varying(20) NOT NULL,
    return_url text,
    cancel_url text,
    error_url text,
    accounting text,
    mac character varying(64),
    date timestamp with time zone NOT NULL,
    ip character varying(20) NOT NULL,
    obligated_person character varying(100)
);


ALTER TABLE payments.request_log OWNER TO postgres;

--
-- Name: request_log_id_seq; Type: SEQUENCE; Schema: payments; Owner: postgres
--

CREATE SEQUENCE payments.request_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE payments.request_log_id_seq OWNER TO postgres;

--
-- Name: request_log_id_seq; Type: SEQUENCE OWNED BY; Schema: payments; Owner: postgres
--

ALTER SEQUENCE payments.request_log_id_seq OWNED BY payments.request_log.id;


--
-- Name: poll_answers; Type: TABLE; Schema: poll; Owner: postgres
--

CREATE TABLE poll.poll_answers (
    id integer NOT NULL,
    poll_id integer,
    value text,
    question integer,
    date_created timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE poll.poll_answers OWNER TO postgres;

--
-- Name: poll_answers_id_seq; Type: SEQUENCE; Schema: poll; Owner: postgres
--

CREATE SEQUENCE poll.poll_answers_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE poll.poll_answers_id_seq OWNER TO postgres;

--
-- Name: poll_answers_id_seq; Type: SEQUENCE OWNED BY; Schema: poll; Owner: postgres
--

ALTER SEQUENCE poll.poll_answers_id_seq OWNED BY poll.poll_answers.id;


--
-- Name: poll_id_seq; Type: SEQUENCE; Schema: poll; Owner: postgres
--

CREATE SEQUENCE poll.poll_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE poll.poll_id_seq OWNER TO postgres;

--
-- Name: ref_data; Type: TABLE; Schema: poll; Owner: postgres
--

CREATE TABLE poll.ref_data (
    rv_domain character varying(25) NOT NULL,
    rv_code character varying(20) NOT NULL,
    rv_val character varying(150) NOT NULL,
    rv_index smallint
);


ALTER TABLE poll.ref_data OWNER TO postgres;

--
-- Name: app_status_doc_type; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.app_status_doc_type (
    id integer NOT NULL,
    app_status_id integer,
    doc_type_id integer
);


ALTER TABLE public.app_status_doc_type OWNER TO postgres;

--
-- Name: app_status_doc_type_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.app_status_doc_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.app_status_doc_type_id_seq OWNER TO postgres;

--
-- Name: app_status_doc_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.app_status_doc_type_id_seq OWNED BY public.app_status_doc_type.id;


--
-- Name: app_status_history_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.app_status_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.app_status_history_id_seq OWNER TO postgres;

--
-- Name: app_status_history_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.app_status_history_id_seq OWNED BY public.app_status_history.id;


--
-- Name: application_changes_history; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.application_changes_history (
    id integer NOT NULL,
    application_id integer NOT NULL,
    user_id integer NOT NULL,
    date timestamp with time zone NOT NULL,
    operation_name text,
    group_name character varying(100) NOT NULL
);


ALTER TABLE public.application_changes_history OWNER TO postgres;

--
-- Name: application_changes_history_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.application_changes_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.application_changes_history_id_seq OWNER TO postgres;

--
-- Name: application_changes_history_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.application_changes_history_id_seq OWNED BY public.application_changes_history.id;


--
-- Name: application_expert; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.application_expert (
    id integer NOT NULL,
    application_id integer NOT NULL,
    expert_id integer NOT NULL,
    notes text,
    process_stat integer,
    course_content text,
    edu_level integer,
    qualification integer,
    previous_board_decisions text,
    similar_bulgarian_programs text,
    "position" integer,
    legal_reason integer,
    process_status integer DEFAULT 0 NOT NULL
);


ALTER TABLE public.application_expert OWNER TO postgres;

--
-- Name: application_expert_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.application_expert_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.application_expert_id_seq OWNER TO postgres;

--
-- Name: application_expert_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.application_expert_id_seq OWNED BY public.application_expert.id;


--
-- Name: application_expert_specialities; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.application_expert_specialities (
    id integer NOT NULL,
    application_id integer NOT NULL,
    expert_id integer NOT NULL,
    speciality_id integer NOT NULL
);


ALTER TABLE public.application_expert_specialities OWNER TO postgres;

--
-- Name: application_expert_specialities_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.application_expert_specialities_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.application_expert_specialities_id_seq OWNER TO postgres;

--
-- Name: application_expert_specialities_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.application_expert_specialities_id_seq OWNED BY public.application_expert_specialities.id;


--
-- Name: application_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.application_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.application_id_seq OWNER TO postgres;

--
-- Name: application_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.application_id_seq OWNED BY public.application.id;


--
-- Name: application_kind; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.application_kind (
    id integer NOT NULL,
    application_id integer,
    price numeric(8,2),
    entry_num character varying,
    entry_num_series_id integer NOT NULL,
    final_status_history_id integer
);


ALTER TABLE public.application_kind OWNER TO postgres;

--
-- Name: application_kind_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.application_kind_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.application_kind_id_seq OWNER TO postgres;

--
-- Name: application_kind_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.application_kind_id_seq OWNED BY public.application_kind.id;


--
-- Name: attached_docs; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.attached_docs (
    id integer NOT NULL,
    parent_id integer NOT NULL,
    doc_descr text,
    doc_type_id integer,
    copy_type_id integer,
    docflow_id character varying(20),
    docflow_date date,
    document_id integer NOT NULL,
    scanned_document_id integer
);


ALTER TABLE public.attached_docs OWNER TO postgres;

--
-- Name: attached_docs_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.attached_docs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.attached_docs_id_seq OWNER TO postgres;

--
-- Name: attached_docs_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.attached_docs_id_seq OWNED BY public.attached_docs.id;


--
-- Name: available_training_forms; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.available_training_forms (
    id integer NOT NULL,
    university_validity_id integer NOT NULL,
    training_form_id integer,
    notes character varying(255)
);


ALTER TABLE public.available_training_forms OWNER TO postgres;

--
-- Name: available_training_forms_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.available_training_forms_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.available_training_forms_id_seq OWNER TO postgres;

--
-- Name: available_training_forms_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.available_training_forms_id_seq OWNED BY public.available_training_forms.id;


--
-- Name: bg_academic_recognition_file_log; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.bg_academic_recognition_file_log (
    id integer NOT NULL,
    file_name character varying(255),
    upload_date timestamp without time zone,
    record_count integer,
    upload_user_id integer
);


ALTER TABLE public.bg_academic_recognition_file_log OWNER TO postgres;

--
-- Name: bg_academic_recognition_file_log_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.bg_academic_recognition_file_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bg_academic_recognition_file_log_id_seq OWNER TO postgres;

--
-- Name: bg_academic_recognition_file_log_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.bg_academic_recognition_file_log_id_seq OWNED BY public.bg_academic_recognition_file_log.id;


--
-- Name: bg_academic_recognition_info; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.bg_academic_recognition_info (
    id integer NOT NULL,
    applicant character varying(255) NOT NULL,
    citizenship character varying(255),
    university character varying(255) NOT NULL,
    university_country character varying(255),
    education_level character varying(255),
    diploma_speciality character varying(255),
    diploma_number character varying(255),
    diploma_date character varying(255),
    protocol_number character varying(255) NOT NULL,
    denial_protocol_number character varying(255),
    recognized_speciality character varying(255),
    recognized_university_id integer NOT NULL,
    input_number character varying(150),
    output_number character varying(150),
    created_date timestamp without time zone,
    notes text,
    recognition_status_id integer,
    related_recognition_id integer
);


ALTER TABLE public.bg_academic_recognition_info OWNER TO postgres;

--
-- Name: bg_academic_recognition_info_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.bg_academic_recognition_info_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bg_academic_recognition_info_id_seq OWNER TO postgres;

--
-- Name: bg_academic_recognition_info_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.bg_academic_recognition_info_id_seq OWNED BY public.bg_academic_recognition_info.id;


--
-- Name: cert_number_to_attached_doc_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.cert_number_to_attached_doc_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.cert_number_to_attached_doc_id_seq OWNER TO postgres;

--
-- Name: cert_number_to_attached_doc_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.cert_number_to_attached_doc_id_seq OWNED BY public.cert_number_to_attached_doc.id;


--
-- Name: comission_agenda; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.comission_agenda (
    id integer NOT NULL,
    application_id integer NOT NULL,
    session_id integer NOT NULL
);


ALTER TABLE public.comission_agenda OWNER TO postgres;

--
-- Name: comission_agenda_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.comission_agenda_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.comission_agenda_id_seq OWNER TO postgres;

--
-- Name: comission_agenda_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.comission_agenda_id_seq OWNED BY public.comission_agenda.id;


--
-- Name: comission_calendar; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.comission_calendar (
    id integer NOT NULL,
    session_num integer NOT NULL,
    session_time timestamp without time zone NOT NULL,
    notes text,
    session_status_id integer NOT NULL,
    protokol_content bytea,
    protokol_content_type character varying(50),
    protokol_file_name text
);


ALTER TABLE public.comission_calendar OWNER TO postgres;

--
-- Name: comission_calendar_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.comission_calendar_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.comission_calendar_id_seq OWNER TO postgres;

--
-- Name: comission_calendar_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.comission_calendar_id_seq OWNED BY public.comission_calendar.id;


--
-- Name: comission_member; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.comission_member (
    id integer NOT NULL,
    fname character varying(30) NOT NULL,
    sname character varying(30),
    lname character varying(30) NOT NULL,
    degree character varying(30),
    institution character varying(255),
    division character varying(255),
    title character varying(255),
    comission_pos integer,
    prof_group_id integer,
    egn character varying(10),
    home_city character varying(30),
    home_pcode character varying(5),
    home_address text,
    phone character varying(255),
    email character varying(255),
    gsm character varying(15),
    iban character varying(30),
    bic character varying(10),
    date_from date,
    date_to date,
    user_id integer
);


ALTER TABLE public.comission_member OWNER TO postgres;

--
-- Name: comission_member_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.comission_member_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.comission_member_id_seq OWNER TO postgres;

--
-- Name: comission_member_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.comission_member_id_seq OWNED BY public.comission_member.id;


--
-- Name: comission_participation; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.comission_participation (
    id integer NOT NULL,
    expert_id integer NOT NULL,
    session_id integer NOT NULL,
    notes text,
    notified integer,
    participated integer
);


ALTER TABLE public.comission_participation OWNER TO postgres;

--
-- Name: comission_participation_expert_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.comission_participation_expert_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.comission_participation_expert_id_seq OWNER TO postgres;

--
-- Name: comission_participation_expert_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.comission_participation_expert_id_seq OWNED BY public.comission_participation.expert_id;


--
-- Name: comission_participation_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.comission_participation_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.comission_participation_id_seq OWNER TO postgres;

--
-- Name: comission_participation_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.comission_participation_id_seq OWNED BY public.comission_participation.id;


--
-- Name: common_vars; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.common_vars (
    id integer NOT NULL,
    var_name character varying(30) NOT NULL,
    var_value text,
    description text
);


ALTER TABLE public.common_vars OWNER TO postgres;

--
-- Name: common_vars_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.common_vars_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.common_vars_id_seq OWNER TO postgres;

--
-- Name: common_vars_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.common_vars_id_seq OWNED BY public.common_vars.id;


--
-- Name: competent_institution; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.competent_institution (
    id integer NOT NULL,
    country_id integer NOT NULL,
    name character varying(255) NOT NULL,
    org_name character varying(255),
    phone character varying(255),
    fax character varying(255),
    email character varying(255),
    addr_details text,
    url character varying(255),
    notes text,
    date_from date,
    date_to date
);


ALTER TABLE public.competent_institution OWNER TO postgres;

--
-- Name: competent_institution_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.competent_institution_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.competent_institution_id_seq OWNER TO postgres;

--
-- Name: competent_institution_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.competent_institution_id_seq OWNED BY public.competent_institution.id;


--
-- Name: dipl_exam_attached_docs_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.dipl_exam_attached_docs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.dipl_exam_attached_docs_id_seq OWNER TO postgres;

--
-- Name: dipl_exam_attached_docs; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.dipl_exam_attached_docs (
    id integer DEFAULT nextval('public.dipl_exam_attached_docs_id_seq'::regclass) NOT NULL,
    doc_descr text,
    doc_type_id integer NOT NULL,
    parent_id integer NOT NULL,
    docflow_id character varying(20),
    docflow_date date,
    copy_type_id integer,
    document_id integer NOT NULL,
    scanned_document_id integer
);


ALTER TABLE public.dipl_exam_attached_docs OWNER TO postgres;

--
-- Name: diploma_examination; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.diploma_examination (
    id integer NOT NULL,
    training_course_id integer NOT NULL,
    user_id integer NOT NULL,
    examination_date date NOT NULL,
    notes text,
    is_recognized integer,
    competent_institution_id integer,
    is_institution_communicated integer NOT NULL,
    is_university_communicated integer NOT NULL,
    is_found_in_register integer DEFAULT 0 NOT NULL
);


ALTER TABLE public.diploma_examination OWNER TO postgres;

--
-- Name: diploma_examination_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.diploma_examination_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.diploma_examination_id_seq OWNER TO postgres;

--
-- Name: diploma_examination_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.diploma_examination_id_seq OWNED BY public.diploma_examination.id;


--
-- Name: diploma_issuer_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.diploma_issuer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.diploma_issuer_id_seq OWNER TO postgres;

--
-- Name: diploma_issuer_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.diploma_issuer_id_seq OWNED BY public.diploma_issuer.id;


--
-- Name: diploma_type; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.diploma_type (
    id integer NOT NULL,
    visual_elements_descr text,
    protection_elements_descr text,
    number_format_descr text,
    notes text,
    date_from date,
    date_to date,
    title character varying(255) NOT NULL,
    edu_level_id integer,
    is_joint_degree integer,
    original_edu_level_id integer,
    bologna_cycle_id integer,
    nqf_id integer,
    eqf_id integer,
    acc_bologna_cycle_id integer,
    acc_nqf_id integer,
    acc_eqf_id integer,
    type integer
);


ALTER TABLE public.diploma_type OWNER TO postgres;

--
-- Name: diploma_type_attached_docs; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.diploma_type_attached_docs (
    id integer NOT NULL,
    doc_descr text,
    doc_type_id integer NOT NULL,
    diploma_type_id integer NOT NULL,
    document_id integer NOT NULL
);


ALTER TABLE public.diploma_type_attached_docs OWNER TO postgres;

--
-- Name: diploma_type_attached_docs_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.diploma_type_attached_docs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.diploma_type_attached_docs_id_seq OWNER TO postgres;

--
-- Name: diploma_type_attached_docs_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.diploma_type_attached_docs_id_seq OWNED BY public.diploma_type_attached_docs.id;


--
-- Name: diploma_type_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.diploma_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.diploma_type_id_seq OWNER TO postgres;

--
-- Name: diploma_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.diploma_type_id_seq OWNED BY public.diploma_type.id;


--
-- Name: diploma_type_issuer; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.diploma_type_issuer (
    id integer NOT NULL,
    diploma_type_id integer NOT NULL,
    university_id integer NOT NULL,
    ord_num integer,
    faculty_id integer
);


ALTER TABLE public.diploma_type_issuer OWNER TO postgres;

--
-- Name: diploma_type_issuer_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.diploma_type_issuer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.diploma_type_issuer_id_seq OWNER TO postgres;

--
-- Name: diploma_type_issuer_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.diploma_type_issuer_id_seq OWNED BY public.diploma_type_issuer.id;


--
-- Name: doctorate_app_migration; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.doctorate_app_migration (
    id integer,
    app_num character varying(50),
    app_date date,
    new_app_num character varying(50) NOT NULL,
    status integer DEFAULT 0 NOT NULL
);


ALTER TABLE public.doctorate_app_migration OWNER TO postgres;

--
-- Name: document_recipient; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.document_recipient (
    id integer NOT NULL,
    application_id integer NOT NULL,
    name text,
    country_id integer,
    city character varying(255),
    district character varying(255),
    post_code character varying(40),
    address text,
    mobile_phone character varying(50)
);


ALTER TABLE public.document_recipient OWNER TO postgres;

--
-- Name: document_recipient_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.document_recipient_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.document_recipient_id_seq OWNER TO postgres;

--
-- Name: document_recipient_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.document_recipient_id_seq OWNED BY public.document_recipient.id;


--
-- Name: email; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.email (
    id integer NOT NULL,
    in_out integer DEFAULT 0 NOT NULL,
    processed integer DEFAULT 0 NOT NULL,
    date timestamp without time zone,
    sent_from character varying(100),
    sent_to text,
    reply_to character varying(100),
    subject text,
    body text,
    message_id character varying(100)
);


ALTER TABLE public.email OWNER TO postgres;

--
-- Name: email_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.email_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.email_id_seq OWNER TO postgres;

--
-- Name: email_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.email_id_seq OWNED BY public.email.id;


--
-- Name: epay_messages; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.epay_messages (
    id integer NOT NULL,
    date timestamp with time zone DEFAULT now() NOT NULL,
    in_out character varying(3) NOT NULL,
    content text,
    correlation_id character varying,
    checksum character varying(255)
);


ALTER TABLE public.epay_messages OWNER TO postgres;

--
-- Name: epay_messages_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.epay_messages_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.epay_messages_id_seq OWNER TO postgres;

--
-- Name: epay_messages_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.epay_messages_id_seq OWNED BY public.epay_messages.id;


--
-- Name: epay_payment_details; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.epay_payment_details (
    id integer NOT NULL,
    liability_id integer NOT NULL,
    status integer NOT NULL,
    ref_number character varying(15),
    date_generated timestamp with time zone NOT NULL,
    date_payment timestamp with time zone,
    expiration_date timestamp with time zone,
    idn character varying(10)
);


ALTER TABLE public.epay_payment_details OWNER TO postgres;

--
-- Name: epay_payment_details_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.epay_payment_details_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.epay_payment_details_id_seq OWNER TO postgres;

--
-- Name: epay_payment_details_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.epay_payment_details_id_seq OWNED BY public.epay_payment_details.id;


--
-- Name: esoed_messages; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.esoed_messages (
    id integer NOT NULL,
    in_out character varying(3) NOT NULL,
    envelope_version character varying(10) NOT NULL,
    message_type character varying(20) NOT NULL,
    sender_uri character varying(64) NOT NULL,
    document_uri character varying(64) NOT NULL,
    document_type_uri character varying(64) NOT NULL,
    recipient_uri character varying(64) NOT NULL,
    send_status character varying(3) DEFAULT 'PEN'::character varying NOT NULL,
    process_status character varying(3) DEFAULT 'PEN'::character varying NOT NULL,
    errors integer DEFAULT 0 NOT NULL,
    created_date timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    content text NOT NULL,
    esoed_session_id character varying(64),
    eservice_uri character varying(64),
    esoed_correlation_id character varying(64),
    originator_extra_data character varying(255),
    session_id character varying(64),
    correlation_id character varying(64),
    receive_time timestamp without time zone,
    receipt_date timestamp without time zone,
    send_date timestamp without time zone,
    process_date timestamp without time zone,
    transport character varying(10) DEFAULT 'ESOED'::character varying NOT NULL,
    CONSTRAINT mee_in_out_chk CHECK (((in_out)::text = ANY (ARRAY[('IN'::character varying)::text, ('OUT'::character varying)::text]))),
    CONSTRAINT mee_process_status_chk CHECK (((process_status)::text = ANY (ARRAY[('PEN'::character varying)::text, ('OK'::character varying)::text, ('ERR'::character varying)::text]))),
    CONSTRAINT mee_send_status_chk CHECK (((send_status)::text = ANY (ARRAY[('PEN'::character varying)::text, ('OK'::character varying)::text, ('ERR'::character varying)::text])))
);


ALTER TABLE public.esoed_messages OWNER TO postgres;

--
-- Name: COLUMN esoed_messages.id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.esoed_messages.id IS 'The primamry key of table.';


--
-- Name: COLUMN esoed_messages.in_out; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.esoed_messages.in_out IS 'IN OUT flag - IN-in, OUT-out';


--
-- Name: COLUMN esoed_messages.created_date; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.esoed_messages.created_date IS 'Creation date';


--
-- Name: COLUMN esoed_messages.content; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.esoed_messages.content IS 'The xml content og message';


--
-- Name: esoed_messages_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.esoed_messages_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.esoed_messages_id_seq OWNER TO postgres;

--
-- Name: esoed_messages_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.esoed_messages_id_seq OWNED BY public.esoed_messages.id;


--
-- Name: event; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.event (
    id integer NOT NULL,
    event_type_id integer NOT NULL,
    application_id integer NOT NULL,
    doc_id integer,
    event_status integer,
    reminder_date date,
    due_date date,
    doc_category_id integer,
    doc_type_id integer
);


ALTER TABLE public.event OWNER TO postgres;

--
-- Name: event_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.event_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.event_id_seq OWNER TO postgres;

--
-- Name: event_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.event_id_seq OWNED BY public.event.id;


--
-- Name: expert_statement; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.expert_statement (
    id integer NOT NULL,
    doc_descr text,
    doc_type_id integer NOT NULL,
    doc_content bytea NOT NULL,
    content_type character varying(50) NOT NULL,
    file_name text NOT NULL,
    application_id integer NOT NULL,
    expert_id integer NOT NULL
);


ALTER TABLE public.expert_statement OWNER TO postgres;

--
-- Name: expert_statement_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.expert_statement_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.expert_statement_id_seq OWNER TO postgres;

--
-- Name: expert_statement_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.expert_statement_id_seq OWNED BY public.expert_statement.id;


--
-- Name: ext_menu; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ext_menu (
    id integer NOT NULL,
    parent_id integer,
    ord_num integer NOT NULL,
    url text,
    name character varying(30) NOT NULL,
    long_name character varying(100),
    active integer DEFAULT 1 NOT NULL
);


ALTER TABLE public.ext_menu OWNER TO postgres;

--
-- Name: ext_menu_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.ext_menu_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ext_menu_id_seq OWNER TO postgres;

--
-- Name: ext_menu_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.ext_menu_id_seq OWNED BY public.ext_menu.id;


--
-- Name: liabilities; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.liabilities (
    id integer NOT NULL,
    amount numeric(8,2) NOT NULL,
    status integer NOT NULL,
    date_generated timestamp with time zone DEFAULT now() NOT NULL,
    date_payment timestamp with time zone,
    currency character varying(3) DEFAULT 'BGN'::character varying NOT NULL,
    payment_type integer
);


ALTER TABLE public.liabilities OWNER TO postgres;

--
-- Name: liabilities_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.liabilities_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.liabilities_id_seq OWNER TO postgres;

--
-- Name: liabilities_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.liabilities_id_seq OWNED BY public.liabilities.id;


--
-- Name: menu_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.menu_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.menu_id_seq OWNER TO postgres;

--
-- Name: menu; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.menu (
    id integer DEFAULT nextval('public.menu_id_seq'::regclass) NOT NULL,
    parent_id integer,
    ord_num integer NOT NULL,
    url text,
    name character varying(30) NOT NULL,
    long_name character varying(100),
    active integer DEFAULT 1 NOT NULL,
    web_app integer,
    CONSTRAINT web_app_not_null CHECK ((web_app IS NOT NULL))
);


ALTER TABLE public.menu OWNER TO postgres;

--
-- Name: nkpd_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.nkpd_id_seq
    START WITH 10981
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.nkpd_id_seq OWNER TO postgres;

--
-- Name: person_document; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.person_document (
    id integer NOT NULL,
    person_id integer NOT NULL,
    date_of_issue date,
    issued_by character varying(100),
    number character varying(50) NOT NULL,
    active integer,
    date_created timestamp with time zone DEFAULT now()
);


ALTER TABLE public.person_document OWNER TO postgres;

--
-- Name: person_document_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.person_document_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.person_document_id_seq OWNER TO postgres;

--
-- Name: person_document_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.person_document_id_seq OWNED BY public.person_document.id;


--
-- Name: person_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.person_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.person_id_seq OWNER TO postgres;

--
-- Name: person_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.person_id_seq OWNED BY public.person.id;


--
-- Name: portal_users; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.portal_users (
    uuid_ character varying(75),
    userid bigint NOT NULL,
    companyid bigint,
    createdate timestamp without time zone,
    modifieddate timestamp without time zone,
    defaultuser boolean,
    contactid bigint,
    password_ character varying(75),
    passwordencrypted boolean,
    passwordreset boolean,
    passwordmodifieddate timestamp without time zone,
    digest character varying(255),
    reminderqueryquestion character varying(75),
    reminderqueryanswer character varying(75),
    gracelogincount integer,
    screenname character varying(75),
    emailaddress character varying(75),
    facebookid bigint,
    openid character varying(1024),
    portraitid bigint,
    languageid character varying(75),
    timezoneid character varying(75),
    greeting character varying(255),
    comments text,
    firstname character varying(75),
    middlename character varying(75),
    lastname character varying(75),
    jobtitle character varying(100),
    logindate timestamp without time zone,
    loginip character varying(75),
    lastlogindate timestamp without time zone,
    lastloginip character varying(75),
    lastfailedlogindate timestamp without time zone,
    failedloginattempts integer,
    lockout boolean,
    lockoutdate timestamp without time zone,
    agreedtotermsofuse boolean,
    emailaddressverified boolean,
    status integer,
    ldapserverid bigint
);


ALTER TABLE public.portal_users OWNER TO postgres;

--
-- Name: purpose_of_recognition; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.purpose_of_recognition (
    id integer NOT NULL,
    application_id integer NOT NULL,
    purpose_of_recognition_id integer,
    notes character varying(255)
);


ALTER TABLE public.purpose_of_recognition OWNER TO postgres;

--
-- Name: purpose_of_recognition_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.purpose_of_recognition_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.purpose_of_recognition_id_seq OWNER TO postgres;

--
-- Name: purpose_of_recognition_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.purpose_of_recognition_id_seq OWNED BY public.purpose_of_recognition.id;


--
-- Name: ras_nomenclatures_map; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ras_nomenclatures_map (
    id integer NOT NULL,
    nomenclature_type character varying(50) NOT NULL,
    internal_nom_id character varying(20) NOT NULL,
    external_nom_id character varying(20) NOT NULL
);


ALTER TABLE public.ras_nomenclatures_map OWNER TO postgres;

--
-- Name: ras_nomenclatures_map_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.ras_nomenclatures_map_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ras_nomenclatures_map_id_seq OWNER TO postgres;

--
-- Name: ras_nomenclatures_map_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.ras_nomenclatures_map_id_seq OWNED BY public.ras_nomenclatures_map.id;


--
-- Name: recognized_specs_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.recognized_specs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.recognized_specs_id_seq OWNER TO postgres;

--
-- Name: recognized_specs_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.recognized_specs_id_seq OWNED BY public.recognized_specs.id;


--
-- Name: sources_of_information; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.sources_of_information (
    id integer NOT NULL,
    competent_institution_id integer NOT NULL,
    university_validity_id integer NOT NULL
);


ALTER TABLE public.sources_of_information OWNER TO postgres;

--
-- Name: sources_of_information_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.sources_of_information_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sources_of_information_id_seq OWNER TO postgres;

--
-- Name: sources_of_information_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.sources_of_information_id_seq OWNED BY public.sources_of_information.id;


--
-- Name: temp_training_course; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.temp_training_course (
    training_course_id integer,
    diploma_type_id integer
);


ALTER TABLE public.temp_training_course OWNER TO postgres;

--
-- Name: training_course_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.training_course_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.training_course_id_seq OWNER TO postgres;

--
-- Name: training_course_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.training_course_id_seq OWNED BY public.training_course.id;


--
-- Name: training_course_institution; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.training_course_institution (
    id integer NOT NULL,
    training_course_id integer NOT NULL,
    training_inst_id integer NOT NULL
);


ALTER TABLE public.training_course_institution OWNER TO postgres;

--
-- Name: training_course_institution_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.training_course_institution_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.training_course_institution_id_seq OWNER TO postgres;

--
-- Name: training_course_institution_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.training_course_institution_id_seq OWNED BY public.training_course_institution.id;


--
-- Name: training_course_specialities; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.training_course_specialities (
    id integer NOT NULL,
    training_course_id integer NOT NULL,
    speciality_id integer NOT NULL,
    original_speciality_id integer
);


ALTER TABLE public.training_course_specialities OWNER TO postgres;

--
-- Name: training_course_specialities_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.training_course_specialities_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.training_course_specialities_id_seq OWNER TO postgres;

--
-- Name: training_course_specialities_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.training_course_specialities_id_seq OWNED BY public.training_course_specialities.id;


--
-- Name: training_form; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.training_form (
    id integer NOT NULL,
    training_course_id integer NOT NULL,
    training_form_id integer,
    notes character varying(255)
);


ALTER TABLE public.training_form OWNER TO postgres;

--
-- Name: training_form_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.training_form_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.training_form_id_seq OWNER TO postgres;

--
-- Name: training_form_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.training_form_id_seq OWNED BY public.training_form.id;


--
-- Name: training_institution; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.training_institution (
    id integer NOT NULL,
    name character varying(100) NOT NULL,
    country_id integer NOT NULL,
    city character varying(30),
    pcode character varying(5),
    addr_details text,
    phone character varying(30),
    date_from date,
    date_to date
);


ALTER TABLE public.training_institution OWNER TO postgres;

--
-- Name: training_institution_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.training_institution_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.training_institution_id_seq OWNER TO postgres;

--
-- Name: training_institution_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.training_institution_id_seq OWNED BY public.training_institution.id;


--
-- Name: training_location; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.training_location (
    id integer NOT NULL,
    training_location_country_id integer,
    training_location_city character varying(30),
    training_course_id integer,
    training_institution_id integer
);


ALTER TABLE public.training_location OWNER TO postgres;

--
-- Name: training_location_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.training_location_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.training_location_id_seq OWNER TO postgres;

--
-- Name: training_location_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.training_location_id_seq OWNED BY public.training_location.id;


--
-- Name: uni_exam_attached_docs; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.uni_exam_attached_docs (
    id integer NOT NULL,
    parent_id integer NOT NULL,
    doc_descr text,
    doc_type_id integer NOT NULL,
    docflow_id character varying(20),
    docflow_date date,
    copy_type_id integer,
    document_id integer NOT NULL,
    scanned_document_id integer
);


ALTER TABLE public.uni_exam_attached_docs OWNER TO postgres;

--
-- Name: uni_exam_attached_docs_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.uni_exam_attached_docs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.uni_exam_attached_docs_id_seq OWNER TO postgres;

--
-- Name: uni_exam_attached_docs_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.uni_exam_attached_docs_id_seq OWNED BY public.uni_exam_attached_docs.id;


--
-- Name: university_examination; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.university_examination (
    id integer NOT NULL,
    training_course_id integer NOT NULL,
    university_validity_id integer NOT NULL,
    user_id integer NOT NULL,
    examination_date date NOT NULL,
    is_recognized integer,
    notes text
);


ALTER TABLE public.university_examination OWNER TO postgres;

--
-- Name: university_examination_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.university_examination_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.university_examination_id_seq OWNER TO postgres;

--
-- Name: university_examination_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.university_examination_id_seq OWNED BY public.university_examination.id;


--
-- Name: university_faculty; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.university_faculty (
    id integer NOT NULL,
    university_id integer NOT NULL,
    name character varying(255) NOT NULL,
    original_name character varying(255),
    date_from date,
    date_to date
);


ALTER TABLE public.university_faculty OWNER TO postgres;

--
-- Name: university_faculty_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.university_faculty_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.university_faculty_id_seq OWNER TO postgres;

--
-- Name: university_faculty_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.university_faculty_id_seq OWNED BY public.university_faculty.id;


--
-- Name: university_id; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.university_id (
    id integer NOT NULL,
    university_id integer NOT NULL,
    training_inst_id integer NOT NULL
);


ALTER TABLE public.university_id OWNER TO postgres;

--
-- Name: university_id_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.university_id_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.university_id_id_seq OWNER TO postgres;

--
-- Name: university_id_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.university_id_id_seq OWNED BY public.university_id.id;


--
-- Name: university_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.university_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.university_id_seq OWNER TO postgres;

--
-- Name: university_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.university_id_seq OWNED BY public.university.id;


--
-- Name: university_validity; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.university_validity (
    id integer NOT NULL,
    university_id integer NOT NULL,
    user_id integer NOT NULL,
    examination_date date NOT NULL,
    is_communicated integer,
    is_recognized integer,
    notes text,
    training_location_id integer,
    has_joint_degrees integer
);


ALTER TABLE public.university_validity OWNER TO postgres;

--
-- Name: university_validity_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.university_validity_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.university_validity_id_seq OWNER TO postgres;

--
-- Name: university_validity_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.university_validity_id_seq OWNED BY public.university_validity.id;


--
-- Name: user_addr; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.user_addr (
    id integer NOT NULL,
    user_id integer,
    ip_address character varying(25),
    addr_type integer,
    active integer
);


ALTER TABLE public.user_addr OWNER TO postgres;

--
-- Name: user_addr_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.user_addr_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.user_addr_id_seq OWNER TO postgres;

--
-- Name: user_addr_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.user_addr_id_seq OWNED BY public.user_addr.id;


--
-- Name: users; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.users (
    id integer NOT NULL,
    fullname character varying(100),
    shortname character varying(100),
    username character varying(30) NOT NULL,
    userpass character varying(50) NOT NULL,
    status integer,
    email character varying(100),
    tel character varying(80)
);


ALTER TABLE public.users OWNER TO postgres;

--
-- Name: users_group_membership; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.users_group_membership (
    record_id integer NOT NULL,
    user_id integer NOT NULL,
    group_id integer NOT NULL,
    operations character varying(255),
    web_application integer NOT NULL
);


ALTER TABLE public.users_group_membership OWNER TO postgres;

--
-- Name: users_group_membership_record_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.users_group_membership_record_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.users_group_membership_record_id_seq OWNER TO postgres;

--
-- Name: users_group_membership_record_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.users_group_membership_record_id_seq OWNED BY public.users_group_membership.record_id;


--
-- Name: users_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.users_id_seq OWNER TO postgres;

--
-- Name: users_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.users_id_seq OWNED BY public.users.id;


--
-- Name: users_sys_log; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.users_sys_log (
    record_id integer NOT NULL,
    user_id integer,
    session_id character varying(50),
    remote_addr character varying(50),
    remote_host character varying(50),
    time_login timestamp without time zone,
    time_logout timestamp without time zone,
    web_app integer NOT NULL
);


ALTER TABLE public.users_sys_log OWNER TO postgres;

--
-- Name: users_sys_log_operations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.users_sys_log_operations (
    record_id integer NOT NULL,
    syslog_record_id integer,
    group_name character varying(60),
    operation_name text,
    query_string text,
    cnt integer,
    date_created timestamp with time zone DEFAULT now()
);


ALTER TABLE public.users_sys_log_operations OWNER TO postgres;

--
-- Name: users_sys_log_operations_record_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.users_sys_log_operations_record_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.users_sys_log_operations_record_id_seq OWNER TO postgres;

--
-- Name: users_sys_log_operations_record_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.users_sys_log_operations_record_id_seq OWNED BY public.users_sys_log_operations.record_id;


--
-- Name: users_sys_log_record_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.users_sys_log_record_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.users_sys_log_record_id_seq OWNER TO postgres;

--
-- Name: users_sys_log_record_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.users_sys_log_record_id_seq OWNED BY public.users_sys_log.record_id;


--
-- Name: vw_inquire_applications; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.vw_inquire_applications AS
 SELECT apn.id,
    tce.id AS tce_id,
    tce.is_joint_degree,
    apn.app_num AS app_number,
    apn.app_date,
    (((apn.app_num)::text || '/'::text) || to_char((apn.app_date)::timestamp with time zone, 'dd.MM.yyyy'::text)) AS docflow_number,
        CASE
            WHEN (apn.diff_diploma_names = 1) THEN (((tce.fname)::text || COALESCE((' '::text || (tce.sname)::text), ''::text)) || COALESCE((' '::text || (tce.lname)::text), ''::text))
            ELSE (((owr.fname)::text || COALESCE((' '::text || (owr.sname)::text), ''::text)) || COALESCE((' '::text || (owr.lname)::text), ''::text))
        END AS owner_diploma_names,
    (((owr.fname)::text || COALESCE((' '::text || (owr.sname)::text), ''::text)) || COALESCE((' '::text || (owr.lname)::text), ''::text)) AS owner_names,
        CASE
            WHEN (apt.id IS NOT NULL) THEN ((((apt.fname)::text || COALESCE((' '::text || (apt.sname)::text), ''::text)) || COALESCE((' '::text || (apt.lname)::text), ''::text)))::character varying
            ELSE aptc.name
        END AS applicant_names,
    owrct.name AS owner_civil_id_type_name,
    owr.civil_id AS owner_civil_id,
    owr_cip.name AS owner_citizenship_name,
        CASE
            WHEN (ext_apn.id IS NOT NULL) THEN 1
            ELSE 0
        END AS electronically_applied,
        CASE
            WHEN (sdc.id IS NOT NULL) THEN 1
            ELSE 0
        END AS esigned,
    ARRAY( SELECT uny.bg_name
           FROM public.university uny
          WHERE (uny.id IN ( SELECT diploma_issuer.university_id
                   FROM public.diploma_issuer
                  WHERE (diploma_issuer.diploma_id = tce.id)))) AS university_name,
    ARRAY( SELECT (((uny.bg_name)::text || ' - '::text) || (ucy.name)::text)
           FROM (public.university uny
             JOIN nomenclatures.country ucy ON ((ucy.id = uny.country_id)))
          WHERE (uny.id IN ( SELECT diploma_issuer.university_id
                   FROM public.diploma_issuer
                  WHERE (diploma_issuer.diploma_id = tce.id)))) AS university_name_and_country,
        CASE
            WHEN (tce.is_joint_degree = 0) THEN ( SELECT country.name
               FROM nomenclatures.country
              WHERE (country.id = ( SELECT university.country_id
                       FROM public.university
                      WHERE (university.id = ( SELECT diploma_issuer.university_id
                               FROM public.diploma_issuer
                              WHERE (diploma_issuer.diploma_id = tce.id))))))
            ELSE NULL::character varying
        END AS university_country,
        CASE
            WHEN (tce.is_joint_degree = 0) THEN ( SELECT university_validity.is_recognized
               FROM public.university_validity
              WHERE (university_validity.id = ( SELECT university_examination.university_validity_id
                       FROM public.university_examination
                      WHERE (university_examination.training_course_id = tce.id))))
            ELSE NULL::integer
        END AS university_examination_recognized,
    ( SELECT ARRAY( SELECT (COALESCE(((tl.training_location_city)::text || ', '::text), ''::text) || (tlc.name)::text) AS tr_loc
                   FROM (public.training_location tl
                     JOIN nomenclatures.country tlc ON ((tl.training_location_country_id = tlc.id)))
                  WHERE (tl.training_course_id = tce.id)
                  ORDER BY tlc.id) AS "array") AS training_location,
    ell.name AS edu_level_name,
    qun.name AS qualification_name,
    ( SELECT ARRAY( SELECT ((spy.name)::text || COALESCE((' / '::text || (ospy.name)::text), ''::text))
                   FROM ((public.training_course_specialities tcs
                     JOIN nomenclatures.speciality spy ON ((spy.id = tcs.speciality_id)))
                     LEFT JOIN nomenclatures.original_speciality ospy ON ((ospy.id = tcs.original_speciality_id)))
                  WHERE (tcs.training_course_id = tce.id)
                  ORDER BY tcs.id) AS "array") AS specialities,
    tce.diploma_date,
    tce.training_start,
    tce.training_end,
    ( SELECT COALESCE(tctf.notes, tf.name) AS "coalesce"
           FROM (public.training_form tctf
             LEFT JOIN nomenclatures.training_form tf ON ((tf.id = tctf.training_form_id)))
          WHERE (tctf.training_course_id = tce.id)) AS training_form,
    tce.school_name,
    ( SELECT country.name
           FROM nomenclatures.country
          WHERE (country.id = tce.school_country)) AS school_country_name,
    tce.school_city,
    tce.school_graduation_date,
    tce.school_notes,
    prev_dipl.bg_name AS previous_diploma_bg_name,
    pdcy.name AS previous_diploma_country,
    pdel.name AS previous_diploma_edu_level_name,
    tce.prev_diploma_graduation_date,
    tce.prev_diploma_notes,
    apn.summary,
    rel.name AS recognized_edu_level_name,
    ( SELECT ARRAY( SELECT rsy.name
                   FROM (public.recognized_specs tcrsy
                     JOIN nomenclatures.speciality rsy ON ((rsy.id = tcrsy.spec_id)))
                  WHERE (tcrsy.training_course_id = tce.id)
                  ORDER BY tcrsy.id) AS "array") AS recognized_specialities,
    rqn.name AS recognized_qualification_name,
    ass.name AS application_status_name,
    dss.name AS docflow_status_name,
    fssn.name AS final_status_name,
    ( SELECT ARRAY( SELECT DISTINCT u.fullname
                   FROM (public.application_changes_history ach
                     JOIN public.users u ON ((u.id = ach.user_id)))
                  WHERE (ach.application_id = apn.id)) AS "array") AS users_worked,
    rur.fullname AS responsible_user_name,
    apn.application_type,
    rpgp.name AS recognized_prof_group_name,
    ( SELECT ARRAY( SELECT ak.entry_num_series_id
                   FROM public.application_kind ak
                  WHERE (ak.application_id = apn.id)) AS "array") AS entry_num_series
   FROM ((((((((((((((((((((((((public.application apn
     JOIN public.training_course tce ON ((tce.id = apn.training_course_id)))
     LEFT JOIN backoffice.company coy ON ((apn.company_id = coy.id)))
     LEFT JOIN eservices.rudi_application ext_apn ON ((ext_apn.application_id = apn.id)))
     LEFT JOIN eservices.rudi_signed_docs sdc ON ((sdc.ext_app_id = ext_apn.id)))
     JOIN public.person owr ON ((owr.id = tce.owner_id)))
     LEFT JOIN nomenclatures.civil_id_type owrct ON ((owrct.id = owr.civil_id_type)))
     LEFT JOIN public.person repr ON ((repr.id = apn.representative_id)))
     LEFT JOIN nomenclatures.country owr_cip ON ((owr.citizenship_id = owr_cip.id)))
     JOIN nomenclatures.app_status ras ON ((apn.app_status_id = ras.id)))
     LEFT JOIN public.app_status_history fss ON ((fss.id = apn.final_status_history_id)))
     LEFT JOIN nomenclatures.app_status fssn ON ((fssn.id = fss.status_id)))
     LEFT JOIN nomenclatures.edu_level ell ON ((ell.id = tce.edu_level_id)))
     LEFT JOIN nomenclatures.qualification qun ON ((qun.id = tce.qualification_id)))
     LEFT JOIN public.university prev_dipl ON ((prev_dipl.id = tce.prev_diploma_university_id)))
     LEFT JOIN nomenclatures.country pdcy ON ((pdcy.id = prev_dipl.country_id)))
     LEFT JOIN nomenclatures.edu_level pdel ON ((pdel.id = tce.prev_diploma_edu_level_id)))
     LEFT JOIN nomenclatures.edu_level rel ON ((rel.id = tce.recognized_edu_level_id)))
     LEFT JOIN nomenclatures.qualification rqn ON ((rqn.id = tce.recognized_qualification_id)))
     LEFT JOIN public.person apt ON ((apt.id = apn.applicant_id)))
     LEFT JOIN backoffice.company aptc ON ((aptc.id = apn.applicant_company_id)))
     JOIN nomenclatures.app_status ass ON ((ass.id = apn.app_status_id)))
     JOIN nomenclatures.app_status_docflow dss ON ((dss.id = apn.docflow_status_id)))
     LEFT JOIN public.users rur ON ((rur.id = apn.responsible_user)))
     LEFT JOIN nomenclatures.prof_group rpgp ON ((rpgp.id = tce.recognized_prof_group_id)));


ALTER TABLE public.vw_inquire_applications OWNER TO postgres;

--
-- Name: vw_regix_applications; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.vw_regix_applications AS
 SELECT apn.app_num,
    apn.app_date,
    COALESCE(ass.name, 'В процес на обработка'::character varying) AS application_recognition_status,
    lrn.name AS legal_reason,
        CASE
            WHEN (apn.diff_diploma_names = 1) THEN tce.fname
            ELSE pen.fname
        END AS fname,
        CASE
            WHEN (apn.diff_diploma_names = 1) THEN tce.sname
            ELSE pen.sname
        END AS sname,
        CASE
            WHEN (apn.diff_diploma_names = 1) THEN tce.lname
            ELSE pen.lname
        END AS lname,
    pen.civil_id,
    pen.civil_id_type,
    rell.name AS recognized_edu_level,
    rqun.name AS recognized_qualification_name,
    uny.org_name AS university_original_name,
    uny.bg_name AS university_bg_name,
    unyc.name AS university_country_name,
    uny.addr_details AS university_address_details,
    uny.city AS university_city,
    ARRAY( SELECT cnr.cert_number
           FROM public.cert_number_to_attached_doc cnr
          WHERE (cnr.application_id = apn.id)
          ORDER BY cnr.id DESC) AS certificate_numbers,
    ARRAY( SELECT spec.name
           FROM (public.recognized_specs rsp
             JOIN nomenclatures.speciality spec ON ((spec.id = rsp.spec_id)))
          WHERE (rsp.training_course_id = tce.id)) AS recognized_specialities
   FROM ((((((((((public.application apn
     JOIN public.training_course tce ON ((tce.id = apn.training_course_id)))
     JOIN public.person pen ON ((pen.id = apn.applicant_id)))
     LEFT JOIN nomenclatures.edu_level rell ON ((rell.id = tce.recognized_edu_level_id)))
     LEFT JOIN nomenclatures.qualification rqun ON ((rqun.id = tce.recognized_qualification_id)))
     JOIN public.diploma_issuer dir ON (((dir.diploma_id = tce.id) AND (dir.ord_num = 1))))
     JOIN public.university uny ON ((uny.id = dir.university_id)))
     JOIN nomenclatures.country unyc ON ((unyc.id = uny.country_id)))
     JOIN public.app_status_history shy ON ((shy.id = apn.final_status_history_id)))
     LEFT JOIN nomenclatures.app_status ass ON ((ass.id = shy.status_id)))
     LEFT JOIN nomenclatures.legal_reason lrn ON ((lrn.id = shy.stat_legal_reason_id)))
  WHERE ((((apn.application_type = 1) AND (apn.docflow_status_id <> 1)) AND (shy.status_id = ANY (ARRAY[10, 11, 17]))) AND
        CASE
            WHEN (shy.status_id = 11) THEN (apn.app_date >= '2009-04-01'::date)
            ELSE (1 = 1)
        END);


ALTER TABLE public.vw_regix_applications OWNER TO postgres;

--
-- Name: way_of_graduation; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.way_of_graduation (
    id integer NOT NULL,
    training_course_id integer NOT NULL,
    way_of_graduation_id integer,
    notes character varying(255)
);


ALTER TABLE public.way_of_graduation OWNER TO postgres;

--
-- Name: way_of_graduation_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.way_of_graduation_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.way_of_graduation_id_seq OWNER TO postgres;

--
-- Name: way_of_graduation_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.way_of_graduation_id_seq OWNED BY public.way_of_graduation.id;


--
-- Name: app_status_doc_type; Type: TABLE; Schema: regprof; Owner: postgres
--

CREATE TABLE regprof.app_status_doc_type (
    id integer NOT NULL,
    app_status_id integer,
    doc_type_id integer NOT NULL
);


ALTER TABLE regprof.app_status_doc_type OWNER TO postgres;

--
-- Name: app_status_doc_type_id_seq; Type: SEQUENCE; Schema: regprof; Owner: postgres
--

CREATE SEQUENCE regprof.app_status_doc_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE regprof.app_status_doc_type_id_seq OWNER TO postgres;

--
-- Name: app_status_doc_type_id_seq; Type: SEQUENCE OWNED BY; Schema: regprof; Owner: postgres
--

ALTER SEQUENCE regprof.app_status_doc_type_id_seq OWNED BY regprof.app_status_doc_type.id;


--
-- Name: app_status_docflow_history; Type: TABLE; Schema: regprof; Owner: postgres
--

CREATE TABLE regprof.app_status_docflow_history (
    id integer NOT NULL,
    application_id integer NOT NULL,
    app_status_docflow_id integer NOT NULL,
    date_assigned date NOT NULL,
    user_assigned integer NOT NULL
);


ALTER TABLE regprof.app_status_docflow_history OWNER TO postgres;

--
-- Name: app_status_docflow_history_id_seq; Type: SEQUENCE; Schema: regprof; Owner: postgres
--

CREATE SEQUENCE regprof.app_status_docflow_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE regprof.app_status_docflow_history_id_seq OWNER TO postgres;

--
-- Name: app_status_docflow_history_id_seq; Type: SEQUENCE OWNED BY; Schema: regprof; Owner: postgres
--

ALTER SEQUENCE regprof.app_status_docflow_history_id_seq OWNED BY regprof.app_status_docflow_history.id;


--
-- Name: app_status_history_id_seq; Type: SEQUENCE; Schema: regprof; Owner: postgres
--

CREATE SEQUENCE regprof.app_status_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE regprof.app_status_history_id_seq OWNER TO postgres;

--
-- Name: app_status_history_id_seq; Type: SEQUENCE OWNED BY; Schema: regprof; Owner: postgres
--

ALTER SEQUENCE regprof.app_status_history_id_seq OWNED BY regprof.app_status_history.id;


--
-- Name: cert_number_to_attached_doc_id_seq; Type: SEQUENCE; Schema: regprof; Owner: postgres
--

CREATE SEQUENCE regprof.cert_number_to_attached_doc_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE regprof.cert_number_to_attached_doc_id_seq OWNER TO postgres;

--
-- Name: cert_number_to_attached_doc_id_seq; Type: SEQUENCE OWNED BY; Schema: regprof; Owner: postgres
--

ALTER SEQUENCE regprof.cert_number_to_attached_doc_id_seq OWNED BY regprof.cert_number_to_attached_doc.id;


--
-- Name: doc_exam_attached_docs; Type: TABLE; Schema: regprof; Owner: postgres
--

CREATE TABLE regprof.doc_exam_attached_docs (
    id integer NOT NULL,
    doc_descr text,
    doc_type_id integer,
    parent_id integer NOT NULL,
    docflow_id character varying(10),
    docflow_date date,
    copy_type_id integer,
    document_id integer NOT NULL,
    scanned_document_id integer
);


ALTER TABLE regprof.doc_exam_attached_docs OWNER TO postgres;

--
-- Name: doc_exam_attached_docs_id_seq; Type: SEQUENCE; Schema: regprof; Owner: postgres
--

CREATE SEQUENCE regprof.doc_exam_attached_docs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE regprof.doc_exam_attached_docs_id_seq OWNER TO postgres;

--
-- Name: doc_exam_attached_docs_id_seq; Type: SEQUENCE OWNED BY; Schema: regprof; Owner: postgres
--

ALTER SEQUENCE regprof.doc_exam_attached_docs_id_seq OWNED BY regprof.doc_exam_attached_docs.id;


--
-- Name: document_examination; Type: TABLE; Schema: regprof; Owner: postgres
--

CREATE TABLE regprof.document_examination (
    id integer NOT NULL,
    training_course_id integer,
    document_examination_date date NOT NULL,
    user_created integer,
    source integer
);


ALTER TABLE regprof.document_examination OWNER TO postgres;

--
-- Name: document_examination_id_seq; Type: SEQUENCE; Schema: regprof; Owner: postgres
--

CREATE SEQUENCE regprof.document_examination_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE regprof.document_examination_id_seq OWNER TO postgres;

--
-- Name: document_examination_id_seq; Type: SEQUENCE OWNED BY; Schema: regprof; Owner: postgres
--

ALTER SEQUENCE regprof.document_examination_id_seq OWNED BY regprof.document_examination.id;


--
-- Name: education_type_to_institution_type; Type: TABLE; Schema: regprof; Owner: postgres
--

CREATE TABLE regprof.education_type_to_institution_type (
    id integer NOT NULL,
    education_type integer NOT NULL,
    institution_type integer NOT NULL
);


ALTER TABLE regprof.education_type_to_institution_type OWNER TO postgres;

--
-- Name: education_type_to_institution_type_id_seq; Type: SEQUENCE; Schema: regprof; Owner: postgres
--

CREATE SEQUENCE regprof.education_type_to_institution_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE regprof.education_type_to_institution_type_id_seq OWNER TO postgres;

--
-- Name: education_type_to_institution_type_id_seq; Type: SEQUENCE OWNED BY; Schema: regprof; Owner: postgres
--

ALTER SEQUENCE regprof.education_type_to_institution_type_id_seq OWNED BY regprof.education_type_to_institution_type.id;


--
-- Name: prof_qualification_examination_id_seq; Type: SEQUENCE; Schema: regprof; Owner: postgres
--

CREATE SEQUENCE regprof.prof_qualification_examination_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE regprof.prof_qualification_examination_id_seq OWNER TO postgres;

--
-- Name: prof_qualification_examination_id_seq; Type: SEQUENCE OWNED BY; Schema: regprof; Owner: postgres
--

ALTER SEQUENCE regprof.prof_qualification_examination_id_seq OWNED BY regprof.prof_qualification_examination.id;


--
-- Name: profession_experience_dates; Type: TABLE; Schema: regprof; Owner: postgres
--

CREATE TABLE regprof.profession_experience_dates (
    id integer NOT NULL,
    date_from date NOT NULL,
    date_to date NOT NULL,
    workday_duration integer,
    prof_experience_document_id integer
);


ALTER TABLE regprof.profession_experience_dates OWNER TO postgres;

--
-- Name: profession_experience_dates_id_seq; Type: SEQUENCE; Schema: regprof; Owner: postgres
--

CREATE SEQUENCE regprof.profession_experience_dates_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE regprof.profession_experience_dates_id_seq OWNER TO postgres;

--
-- Name: profession_experience_dates_id_seq; Type: SEQUENCE OWNED BY; Schema: regprof; Owner: postgres
--

ALTER SEQUENCE regprof.profession_experience_dates_id_seq OWNED BY regprof.profession_experience_dates.id;


--
-- Name: profession_experience_documents; Type: TABLE; Schema: regprof; Owner: postgres
--

CREATE TABLE regprof.profession_experience_documents (
    id integer NOT NULL,
    prof_experience_doc_type_id integer NOT NULL,
    document_number character varying(100),
    document_issuer character varying(100) NOT NULL,
    prof_experience_id integer NOT NULL,
    for_experience_calculation integer NOT NULL,
    document_date character varying(50)
);


ALTER TABLE regprof.profession_experience_documents OWNER TO postgres;

--
-- Name: profession_experience_documents_id_seq; Type: SEQUENCE; Schema: regprof; Owner: postgres
--

CREATE SEQUENCE regprof.profession_experience_documents_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE regprof.profession_experience_documents_id_seq OWNER TO postgres;

--
-- Name: profession_experience_documents_id_seq; Type: SEQUENCE OWNED BY; Schema: regprof; Owner: postgres
--

ALTER SEQUENCE regprof.profession_experience_documents_id_seq OWNED BY regprof.profession_experience_documents.id;


--
-- Name: profession_experience_exam_attached_docs; Type: TABLE; Schema: regprof; Owner: postgres
--

CREATE TABLE regprof.profession_experience_exam_attached_docs (
    doc_descr text,
    doc_type_id integer,
    parent_id integer,
    docflow_id character varying(10),
    docflow_date date,
    copy_type_id integer,
    id integer NOT NULL,
    document_id integer NOT NULL,
    scanned_document_id integer
);


ALTER TABLE regprof.profession_experience_exam_attached_docs OWNER TO postgres;

--
-- Name: profession_experience_exam_attached_docs_id_seq; Type: SEQUENCE; Schema: regprof; Owner: postgres
--

CREATE SEQUENCE regprof.profession_experience_exam_attached_docs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE regprof.profession_experience_exam_attached_docs_id_seq OWNER TO postgres;

--
-- Name: profession_experience_exam_attached_docs_id_seq; Type: SEQUENCE OWNED BY; Schema: regprof; Owner: postgres
--

ALTER SEQUENCE regprof.profession_experience_exam_attached_docs_id_seq OWNED BY regprof.profession_experience_exam_attached_docs.id;


--
-- Name: profession_experience_examination; Type: TABLE; Schema: regprof; Owner: postgres
--

CREATE TABLE regprof.profession_experience_examination (
    id integer NOT NULL,
    experience_document_recognized integer,
    regprof_profession_experience_id integer NOT NULL,
    user_id integer NOT NULL,
    not_restricted integer NOT NULL,
    article_item_id integer
);


ALTER TABLE regprof.profession_experience_examination OWNER TO postgres;

--
-- Name: profession_experience_examination_id_seq; Type: SEQUENCE; Schema: regprof; Owner: postgres
--

CREATE SEQUENCE regprof.profession_experience_examination_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE regprof.profession_experience_examination_id_seq OWNER TO postgres;

--
-- Name: profession_experience_examination_id_seq; Type: SEQUENCE OWNED BY; Schema: regprof; Owner: postgres
--

ALTER SEQUENCE regprof.profession_experience_examination_id_seq OWNED BY regprof.profession_experience_examination.id;


--
-- Name: profession_experience_id_seq; Type: SEQUENCE; Schema: regprof; Owner: postgres
--

CREATE SEQUENCE regprof.profession_experience_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE regprof.profession_experience_id_seq OWNER TO postgres;

--
-- Name: profession_experience_id_seq; Type: SEQUENCE OWNED BY; Schema: regprof; Owner: postgres
--

ALTER SEQUENCE regprof.profession_experience_id_seq OWNED BY regprof.profession_experience.id;


--
-- Name: professional_institution; Type: TABLE; Schema: regprof; Owner: postgres
--

CREATE TABLE regprof.professional_institution (
    id integer NOT NULL,
    country_id integer,
    bg_name character varying(255),
    city character varying(255),
    addr_details text,
    phone character varying(255),
    fax character varying(255),
    email character varying(255),
    web_site character varying(255),
    date_from date,
    date_to date,
    url_diploma_register text,
    professional_institution_type_id integer NOT NULL
);


ALTER TABLE regprof.professional_institution OWNER TO postgres;

--
-- Name: professional_institution_examination; Type: TABLE; Schema: regprof; Owner: postgres
--

CREATE TABLE regprof.professional_institution_examination (
    id integer NOT NULL,
    professional_institution_validity_id integer NOT NULL,
    regprof_application_id integer NOT NULL,
    examination_date date NOT NULL,
    notes text,
    user_created integer NOT NULL,
    date_created timestamp with time zone DEFAULT now() NOT NULL,
    is_legitimate integer NOT NULL
);


ALTER TABLE regprof.professional_institution_examination OWNER TO postgres;

--
-- Name: professional_institution_examination_id_seq; Type: SEQUENCE; Schema: regprof; Owner: postgres
--

CREATE SEQUENCE regprof.professional_institution_examination_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE regprof.professional_institution_examination_id_seq OWNER TO postgres;

--
-- Name: professional_institution_examination_id_seq; Type: SEQUENCE OWNED BY; Schema: regprof; Owner: postgres
--

ALTER SEQUENCE regprof.professional_institution_examination_id_seq OWNED BY regprof.professional_institution_examination.id;


--
-- Name: professional_institution_id_seq; Type: SEQUENCE; Schema: regprof; Owner: postgres
--

CREATE SEQUENCE regprof.professional_institution_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE regprof.professional_institution_id_seq OWNER TO postgres;

--
-- Name: professional_institution_id_seq; Type: SEQUENCE OWNED BY; Schema: regprof; Owner: postgres
--

ALTER SEQUENCE regprof.professional_institution_id_seq OWNED BY regprof.professional_institution.id;


--
-- Name: professional_institution_names; Type: TABLE; Schema: regprof; Owner: postgres
--

CREATE TABLE regprof.professional_institution_names (
    id integer NOT NULL,
    professional_institution_id integer NOT NULL,
    former_name character varying(255) NOT NULL,
    active integer
);


ALTER TABLE regprof.professional_institution_names OWNER TO postgres;

--
-- Name: professional_institution_names_id_seq; Type: SEQUENCE; Schema: regprof; Owner: postgres
--

CREATE SEQUENCE regprof.professional_institution_names_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE regprof.professional_institution_names_id_seq OWNER TO postgres;

--
-- Name: professional_institution_names_id_seq; Type: SEQUENCE OWNED BY; Schema: regprof; Owner: postgres
--

ALTER SEQUENCE regprof.professional_institution_names_id_seq OWNED BY regprof.professional_institution_names.id;


--
-- Name: professional_institution_validity; Type: TABLE; Schema: regprof; Owner: postgres
--

CREATE TABLE regprof.professional_institution_validity (
    id integer NOT NULL,
    examination_date date NOT NULL,
    qualification_bulgaria_high_sdk_id integer,
    professional_institution_id integer NOT NULL,
    has_rights_educate integer NOT NULL,
    is_legitimate integer NOT NULL,
    user_created integer NOT NULL,
    date_created timestamp with time zone DEFAULT now() NOT NULL,
    notes text,
    qualification_bulgaria_sec_id integer
);


ALTER TABLE regprof.professional_institution_validity OWNER TO postgres;

--
-- Name: professional_institution_validity_id_seq; Type: SEQUENCE; Schema: regprof; Owner: postgres
--

CREATE SEQUENCE regprof.professional_institution_validity_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE regprof.professional_institution_validity_id_seq OWNER TO postgres;

--
-- Name: professional_institution_validity_id_seq; Type: SEQUENCE OWNED BY; Schema: regprof; Owner: postgres
--

ALTER SEQUENCE regprof.professional_institution_validity_id_seq OWNED BY regprof.professional_institution_validity.id;


--
-- Name: regprof_application_id_seq; Type: SEQUENCE; Schema: regprof; Owner: postgres
--

CREATE SEQUENCE regprof.regprof_application_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE regprof.regprof_application_id_seq OWNER TO postgres;

--
-- Name: regprof_application_id_seq; Type: SEQUENCE OWNED BY; Schema: regprof; Owner: postgres
--

ALTER SEQUENCE regprof.regprof_application_id_seq OWNED BY regprof.regprof_application.id;


--
-- Name: regprof_attached_docs; Type: TABLE; Schema: regprof; Owner: postgres
--

CREATE TABLE regprof.regprof_attached_docs (
    id integer NOT NULL,
    parent_id integer NOT NULL,
    doc_descr text,
    doc_type_id integer,
    copy_type_id integer,
    docflow_id character varying(10),
    docflow_date date,
    document_id integer NOT NULL,
    scanned_document_id integer
);


ALTER TABLE regprof.regprof_attached_docs OWNER TO postgres;

--
-- Name: regprof_attached_docs_id_seq; Type: SEQUENCE; Schema: regprof; Owner: postgres
--

CREATE SEQUENCE regprof.regprof_attached_docs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE regprof.regprof_attached_docs_id_seq OWNER TO postgres;

--
-- Name: regprof_attached_docs_id_seq; Type: SEQUENCE OWNED BY; Schema: regprof; Owner: postgres
--

ALTER SEQUENCE regprof.regprof_attached_docs_id_seq OWNED BY regprof.regprof_attached_docs.id;


--
-- Name: regprof_document_recipient; Type: TABLE; Schema: regprof; Owner: postgres
--

CREATE TABLE regprof.regprof_document_recipient (
    id integer NOT NULL,
    application_id integer NOT NULL,
    name text,
    country_id integer,
    city character varying(255),
    district character varying(255),
    post_code character varying(40),
    address text,
    mobile_phone character varying(50)
);


ALTER TABLE regprof.regprof_document_recipient OWNER TO postgres;

--
-- Name: regprof_document_recipient_id_seq; Type: SEQUENCE; Schema: regprof; Owner: postgres
--

CREATE SEQUENCE regprof.regprof_document_recipient_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE regprof.regprof_document_recipient_id_seq OWNER TO postgres;

--
-- Name: regprof_document_recipient_id_seq; Type: SEQUENCE OWNED BY; Schema: regprof; Owner: postgres
--

ALTER SEQUENCE regprof.regprof_document_recipient_id_seq OWNED BY regprof.regprof_document_recipient.id;


--
-- Name: regulated_examination; Type: TABLE; Schema: regprof; Owner: postgres
--

CREATE TABLE regprof.regulated_examination (
    id integer NOT NULL,
    regulated_validity_id integer NOT NULL,
    regprof_application_id integer NOT NULL,
    is_regulated integer,
    examination_date date,
    notes text,
    user_created integer,
    date_created timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE regprof.regulated_examination OWNER TO postgres;

--
-- Name: regulated_examination_id_seq; Type: SEQUENCE; Schema: regprof; Owner: postgres
--

CREATE SEQUENCE regprof.regulated_examination_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE regprof.regulated_examination_id_seq OWNER TO postgres;

--
-- Name: regulated_examination_id_seq; Type: SEQUENCE OWNED BY; Schema: regprof; Owner: postgres
--

ALTER SEQUENCE regprof.regulated_examination_id_seq OWNED BY regprof.regulated_examination.id;


--
-- Name: regulated_validity; Type: TABLE; Schema: regprof; Owner: postgres
--

CREATE TABLE regprof.regulated_validity (
    id integer NOT NULL,
    country_id integer,
    examination_date date,
    date_created time with time zone DEFAULT now() NOT NULL,
    notes text,
    user_created integer,
    profession character varying(150),
    is_regulated integer
);


ALTER TABLE regprof.regulated_validity OWNER TO postgres;

--
-- Name: regulated_validity_id_seq; Type: SEQUENCE; Schema: regprof; Owner: postgres
--

CREATE SEQUENCE regprof.regulated_validity_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE regprof.regulated_validity_id_seq OWNER TO postgres;

--
-- Name: regulated_validity_id_seq; Type: SEQUENCE OWNED BY; Schema: regprof; Owner: postgres
--

ALTER SEQUENCE regprof.regulated_validity_id_seq OWNED BY regprof.regulated_validity.id;


--
-- Name: responsible_users; Type: TABLE; Schema: regprof; Owner: postgres
--

CREATE TABLE regprof.responsible_users (
    id integer NOT NULL,
    user_id integer,
    regprof_application_id integer
);


ALTER TABLE regprof.responsible_users OWNER TO postgres;

--
-- Name: responsible_users_id_seq; Type: SEQUENCE; Schema: regprof; Owner: postgres
--

CREATE SEQUENCE regprof.responsible_users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE regprof.responsible_users_id_seq OWNER TO postgres;

--
-- Name: responsible_users_id_seq; Type: SEQUENCE OWNED BY; Schema: regprof; Owner: postgres
--

ALTER SEQUENCE regprof.responsible_users_id_seq OWNED BY regprof.responsible_users.id;


--
-- Name: training_course_id_seq; Type: SEQUENCE; Schema: regprof; Owner: postgres
--

CREATE SEQUENCE regprof.training_course_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE regprof.training_course_id_seq OWNER TO postgres;

--
-- Name: training_course_id_seq; Type: SEQUENCE OWNED BY; Schema: regprof; Owner: postgres
--

ALTER SEQUENCE regprof.training_course_id_seq OWNED BY regprof.training_course.id;


--
-- Name: training_course_specialities; Type: TABLE; Schema: regprof; Owner: postgres
--

CREATE TABLE regprof.training_course_specialities (
    id integer NOT NULL,
    training_course_id integer NOT NULL,
    secondary_speciality_id integer,
    higher_speciality_id integer,
    sdk_speciality_id integer
);


ALTER TABLE regprof.training_course_specialities OWNER TO postgres;

--
-- Name: training_course_specialities_id_seq; Type: SEQUENCE; Schema: regprof; Owner: postgres
--

CREATE SEQUENCE regprof.training_course_specialities_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE regprof.training_course_specialities_id_seq OWNER TO postgres;

--
-- Name: training_course_specialities_id_seq; Type: SEQUENCE OWNED BY; Schema: regprof; Owner: postgres
--

ALTER SEQUENCE regprof.training_course_specialities_id_seq OWNED BY regprof.training_course_specialities.id;


--
-- Name: address id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.address ALTER COLUMN id SET DEFAULT nextval('backoffice.address_id_seq'::regclass);


--
-- Name: analytic_product_files id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.analytic_product_files ALTER COLUMN id SET DEFAULT nextval('backoffice.analytic_product_files_id_seq'::regclass);


--
-- Name: analytic_products id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.analytic_products ALTER COLUMN id SET DEFAULT nextval('backoffice.analytic_products_id_seq'::regclass);


--
-- Name: analytic_products_hist hist_id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.analytic_products_hist ALTER COLUMN hist_id SET DEFAULT nextval('backoffice.analytic_products_hist_hist_id_seq'::regclass);


--
-- Name: app_status_docflow_history id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.app_status_docflow_history ALTER COLUMN id SET DEFAULT nextval('backoffice.app_status_docflow_history_id_seq'::regclass);


--
-- Name: assignment id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.assignment ALTER COLUMN id SET DEFAULT nextval('backoffice.assignment_id_seq'::regclass);


--
-- Name: bibliographic_references id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.bibliographic_references ALTER COLUMN id SET DEFAULT nextval('backoffice.bibliographic_references_id_seq'::regclass);


--
-- Name: bibliographic_references_files id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.bibliographic_references_files ALTER COLUMN id SET DEFAULT nextval('backoffice.bibliographic_references_files_id_seq'::regclass);


--
-- Name: bibliographic_references_hist hist_id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.bibliographic_references_hist ALTER COLUMN hist_id SET DEFAULT nextval('backoffice.bibliographic_references_hist_hist_id_seq'::regclass);


--
-- Name: company id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.company ALTER COLUMN id SET DEFAULT nextval('backoffice.company_id_seq'::regclass);


--
-- Name: document id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.document ALTER COLUMN id SET DEFAULT nextval('backoffice.document_id_seq'::regclass);


--
-- Name: document_delivery_files id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.document_delivery_files ALTER COLUMN id SET DEFAULT nextval('backoffice.document_delivery_files_id_seq'::regclass);


--
-- Name: document_deliverys id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.document_deliverys ALTER COLUMN id SET DEFAULT nextval('backoffice.document_deliverys_id_seq'::regclass);


--
-- Name: document_deliverys_hist hist_id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.document_deliverys_hist ALTER COLUMN hist_id SET DEFAULT nextval('backoffice.document_deliverys_hist_hist_id_seq'::regclass);


--
-- Name: impact_factor_report_rows id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.impact_factor_report_rows ALTER COLUMN id SET DEFAULT nextval('backoffice.impact_factor_report_rows_id_seq'::regclass);


--
-- Name: inquiry id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.inquiry ALTER COLUMN id SET DEFAULT nextval('backoffice.inquiry_id_seq'::regclass);


--
-- Name: inquiry_files id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.inquiry_files ALTER COLUMN id SET DEFAULT nextval('backoffice.inquiry_files_id_seq'::regclass);


--
-- Name: inquiry_hist hist_id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.inquiry_hist ALTER COLUMN hist_id SET DEFAULT nextval('backoffice.inquiry_hist_hist_id_seq'::regclass);


--
-- Name: notes id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.notes ALTER COLUMN id SET DEFAULT nextval('backoffice.notes_id_seq'::regclass);


--
-- Name: notifications id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.notifications ALTER COLUMN id SET DEFAULT nextval('backoffice.notifications_id_seq'::regclass);


--
-- Name: official_note_files id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.official_note_files ALTER COLUMN id SET DEFAULT nextval('backoffice.official_note_files_id_seq'::regclass);


--
-- Name: official_notes id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.official_notes ALTER COLUMN id SET DEFAULT nextval('backoffice.official_notes_id_seq'::regclass);


--
-- Name: official_notes_hist hist_id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.official_notes_hist ALTER COLUMN hist_id SET DEFAULT nextval('backoffice.official_notes_hist_hist_id_seq'::regclass);


--
-- Name: person id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.person ALTER COLUMN id SET DEFAULT nextval('backoffice.person_id_seq'::regclass);


--
-- Name: public_access id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.public_access ALTER COLUMN id SET DEFAULT nextval('backoffice.public_access_id_seq'::regclass);


--
-- Name: public_access_files id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.public_access_files ALTER COLUMN id SET DEFAULT nextval('backoffice.public_access_files_id_seq'::regclass);


--
-- Name: public_access_hist hist_id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.public_access_hist ALTER COLUMN hist_id SET DEFAULT nextval('backoffice.public_access_hist_hist_id_seq'::regclass);


--
-- Name: public_person id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.public_person ALTER COLUMN id SET DEFAULT nextval('backoffice.public_person_id_seq'::regclass);


--
-- Name: signal_files id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.signal_files ALTER COLUMN id SET DEFAULT nextval('backoffice.signal_files_id_seq'::regclass);


--
-- Name: signals id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.signals ALTER COLUMN id SET DEFAULT nextval('backoffice.signals_id_seq'::regclass);


--
-- Name: signals_hist hist_id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.signals_hist ALTER COLUMN hist_id SET DEFAULT nextval('backoffice.signals_hist_hist_id_seq'::regclass);


--
-- Name: suggestions id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.suggestions ALTER COLUMN id SET DEFAULT nextval('backoffice.suggestions_id_seq'::regclass);


--
-- Name: suggestions_files id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.suggestions_files ALTER COLUMN id SET DEFAULT nextval('backoffice.suggestions_files_id_seq'::regclass);


--
-- Name: suggestions_hist hist_id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.suggestions_hist ALTER COLUMN hist_id SET DEFAULT nextval('backoffice.suggestions_hist_sugg_id_seq'::regclass);


--
-- Name: templates id; Type: DEFAULT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.templates ALTER COLUMN id SET DEFAULT nextval('backoffice.templates_id_seq'::regclass);


--
-- Name: blobs id; Type: DEFAULT; Schema: blobs; Owner: postgres
--

ALTER TABLE ONLY blobs.blobs ALTER COLUMN id SET DEFAULT nextval('blobs.blobs_id_seq'::regclass);


--
-- Name: address id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.address ALTER COLUMN id SET DEFAULT nextval('eservices.address_id_seq'::regclass);


--
-- Name: analytic_products id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.analytic_products ALTER COLUMN id SET DEFAULT nextval('eservices.analytic_products_id_seq'::regclass);


--
-- Name: analytic_products_hist hist_id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.analytic_products_hist ALTER COLUMN hist_id SET DEFAULT nextval('eservices.analytic_products_hist_hist_id_seq'::regclass);


--
-- Name: application id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.application ALTER COLUMN id SET DEFAULT nextval('eservices.application_id_seq'::regclass);


--
-- Name: bibliographic_references id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.bibliographic_references ALTER COLUMN id SET DEFAULT nextval('eservices.bibliographic_references_id_seq'::regclass);


--
-- Name: bibliographic_references_hist hist_id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.bibliographic_references_hist ALTER COLUMN hist_id SET DEFAULT nextval('eservices.bibliographic_references_hist_hist_id_seq'::regclass);


--
-- Name: company id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.company ALTER COLUMN id SET DEFAULT nextval('eservices.company_id_seq'::regclass);


--
-- Name: company_hist hist_id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.company_hist ALTER COLUMN hist_id SET DEFAULT nextval('eservices.company_hist_hist_id_seq'::regclass);


--
-- Name: document id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.document ALTER COLUMN id SET DEFAULT nextval('eservices.document_id_seq'::regclass);


--
-- Name: document_delivery id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.document_delivery ALTER COLUMN id SET DEFAULT nextval('eservices.document_delivery_id_seq'::regclass);


--
-- Name: document_delivery_hist id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.document_delivery_hist ALTER COLUMN id SET DEFAULT nextval('eservices.document_delivery_hist_id_seq'::regclass);


--
-- Name: document_delivery_hist hist_id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.document_delivery_hist ALTER COLUMN hist_id SET DEFAULT nextval('eservices.document_delivery_hist_hist_id_seq'::regclass);


--
-- Name: inquiry id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.inquiry ALTER COLUMN id SET DEFAULT nextval('eservices.inquiry_id_seq'::regclass);


--
-- Name: inquiry_hist hist_id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.inquiry_hist ALTER COLUMN hist_id SET DEFAULT nextval('eservices.inquiry_hist_hist_id_seq'::regclass);


--
-- Name: irregularity_relation id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.irregularity_relation ALTER COLUMN id SET DEFAULT nextval('eservices.irregularity_relation_id_seq'::regclass);


--
-- Name: official_notes id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.official_notes ALTER COLUMN id SET DEFAULT nextval('eservices.official_notes_id_seq'::regclass);


--
-- Name: official_notes_hist hist_id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.official_notes_hist ALTER COLUMN hist_id SET DEFAULT nextval('eservices.official_notes_hist_hist_id_seq'::regclass);


--
-- Name: person id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.person ALTER COLUMN id SET DEFAULT nextval('eservices.person_id_seq'::regclass);


--
-- Name: person_document id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.person_document ALTER COLUMN id SET DEFAULT nextval('eservices.person_document_id_seq'::regclass);


--
-- Name: person_hist hist_id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.person_hist ALTER COLUMN hist_id SET DEFAULT nextval('eservices.person_hist_hist_id_seq'::regclass);


--
-- Name: price_list id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.price_list ALTER COLUMN id SET DEFAULT nextval('eservices.price_list_id_seq'::regclass);


--
-- Name: public_access id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.public_access ALTER COLUMN id SET DEFAULT nextval('eservices.public_access_id_seq'::regclass);


--
-- Name: public_access_hist hist_id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.public_access_hist ALTER COLUMN hist_id SET DEFAULT nextval('eservices.public_access_hist_hist_id_seq'::regclass);


--
-- Name: public_person id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.public_person ALTER COLUMN id SET DEFAULT nextval('eservices.public_person_id_seq'::regclass);


--
-- Name: recommendation id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.recommendation ALTER COLUMN id SET DEFAULT nextval('eservices.recommendation_id_seq'::regclass);


--
-- Name: regprof_app_libilities id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_app_libilities ALTER COLUMN id SET DEFAULT nextval('eservices.regprof_app_libilities_id_seq'::regclass);


--
-- Name: regprof_application id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_application ALTER COLUMN id SET DEFAULT nextval('eservices.regprof_application_id_seq'::regclass);


--
-- Name: regprof_application_comments id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_application_comments ALTER COLUMN id SET DEFAULT nextval('eservices.regprof_application_comments_id_seq'::regclass);


--
-- Name: regprof_attached_docs id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_attached_docs ALTER COLUMN id SET DEFAULT nextval('eservices.regprof_attached_docs_id_seq'::regclass);


--
-- Name: regprof_document_recipient id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_document_recipient ALTER COLUMN id SET DEFAULT nextval('eservices.regprof_document_recipient_id_seq'::regclass);


--
-- Name: regprof_profession_experience id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_profession_experience ALTER COLUMN id SET DEFAULT nextval('eservices.regprof_profession_experience_id_seq'::regclass);


--
-- Name: regprof_profession_experience_dates id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_profession_experience_dates ALTER COLUMN id SET DEFAULT nextval('eservices.regprof_profession_experience_dates_id_seq'::regclass);


--
-- Name: regprof_profession_experience_documents id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_profession_experience_documents ALTER COLUMN id SET DEFAULT nextval('eservices.regprof_profession_experience_documents_id_seq'::regclass);


--
-- Name: regprof_signed_docs id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_signed_docs ALTER COLUMN id SET DEFAULT nextval('eservices.regprof_signed_docs_id_seq'::regclass);


--
-- Name: regprof_training_course id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_training_course ALTER COLUMN id SET DEFAULT nextval('eservices.regprof_training_course_id_seq'::regclass);


--
-- Name: regprof_training_course_specialities id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_training_course_specialities ALTER COLUMN id SET DEFAULT nextval('eservices.regprof_training_course_specialities_id_seq'::regclass);


--
-- Name: rudi_application id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_application ALTER COLUMN id SET DEFAULT nextval('eservices.rudi_application_id_seq'::regclass);


--
-- Name: rudi_application_comments id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_application_comments ALTER COLUMN id SET DEFAULT nextval('eservices.rudi_application_comments_id_seq'::regclass);


--
-- Name: rudi_application_kind id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_application_kind ALTER COLUMN id SET DEFAULT nextval('eservices.rudi_application_kind_id_seq'::regclass);


--
-- Name: rudi_attached_docs id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_attached_docs ALTER COLUMN id SET DEFAULT nextval('eservices.rudi_attached_docs_id_seq'::regclass);


--
-- Name: rudi_diploma_issuer id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_diploma_issuer ALTER COLUMN id SET DEFAULT nextval('eservices.rudi_diploma_issuer_id_seq'::regclass);


--
-- Name: rudi_document_recipient id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_document_recipient ALTER COLUMN id SET DEFAULT nextval('eservices.rudi_document_recipient_id_seq'::regclass);


--
-- Name: rudi_purpose_of_recognition id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_purpose_of_recognition ALTER COLUMN id SET DEFAULT nextval('eservices.rudi_purpose_of_recognition_id_seq'::regclass);


--
-- Name: rudi_signed_docs id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_signed_docs ALTER COLUMN id SET DEFAULT nextval('eservices.rudi_signed_docs_id_seq'::regclass);


--
-- Name: rudi_training_course id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_training_course ALTER COLUMN id SET DEFAULT nextval('eservices.rudi_training_course_id_seq'::regclass);


--
-- Name: rudi_training_course_specialities id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_training_course_specialities ALTER COLUMN id SET DEFAULT nextval('eservices.rudi_training_course_specialities_id_seq'::regclass);


--
-- Name: rudi_training_form id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_training_form ALTER COLUMN id SET DEFAULT nextval('eservices.rudi_training_form_id_seq'::regclass);


--
-- Name: rudi_training_location id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_training_location ALTER COLUMN id SET DEFAULT nextval('eservices.rudi_training_location_id_seq'::regclass);


--
-- Name: rudi_way_of_graduation id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_way_of_graduation ALTER COLUMN id SET DEFAULT nextval('eservices.rudi_way_of_graduation_id_seq'::regclass);


--
-- Name: salaries id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.salaries ALTER COLUMN id SET DEFAULT nextval('eservices.salaries_id_seq'::regclass);


--
-- Name: service_irregularity id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.service_irregularity ALTER COLUMN id SET DEFAULT nextval('eservices.service_irregularity_id_seq'::regclass);


--
-- Name: service_reject id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.service_reject ALTER COLUMN id SET DEFAULT nextval('eservices.service_reject_id_seq'::regclass);


--
-- Name: signals id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.signals ALTER COLUMN id SET DEFAULT nextval('eservices.signals_id_seq'::regclass);


--
-- Name: signals_hist hist_id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.signals_hist ALTER COLUMN hist_id SET DEFAULT nextval('eservices.signals_hist_hist_id_seq'::regclass);


--
-- Name: signed_docs id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.signed_docs ALTER COLUMN id SET DEFAULT nextval('eservices.signed_docs_id_seq'::regclass);


--
-- Name: signed_docs_hist hist_id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.signed_docs_hist ALTER COLUMN hist_id SET DEFAULT nextval('eservices.signed_docs_hist_hist_id_seq'::regclass);


--
-- Name: suggestions id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.suggestions ALTER COLUMN id SET DEFAULT nextval('eservices.suggestions_id_seq'::regclass);


--
-- Name: suggestions_hist hist_id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.suggestions_hist ALTER COLUMN hist_id SET DEFAULT nextval('eservices.suggestions_hist_hist_id_seq'::regclass);


--
-- Name: training_course id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.training_course ALTER COLUMN id SET DEFAULT nextval('eservices.training_course_id_seq'::regclass);


--
-- Name: xml_services id; Type: DEFAULT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.xml_services ALTER COLUMN id SET DEFAULT nextval('eservices.xml_services_id_seq'::regclass);


--
-- Name: academic_title id; Type: DEFAULT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.academic_title ALTER COLUMN id SET DEFAULT nextval('isobaq.academic_title_id_seq'::regclass);


--
-- Name: award_institution_type id; Type: DEFAULT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.award_institution_type ALTER COLUMN id SET DEFAULT nextval('isobaq.award_institution_type_id_seq'::regclass);


--
-- Name: blobs id; Type: DEFAULT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.blobs ALTER COLUMN id SET DEFAULT nextval('isobaq.blobs_id_seq'::regclass);


--
-- Name: bologna_cycle id; Type: DEFAULT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.bologna_cycle ALTER COLUMN id SET DEFAULT nextval('isobaq.bologna_cycle_id_seq'::regclass);


--
-- Name: doc_type id; Type: DEFAULT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.doc_type ALTER COLUMN id SET DEFAULT nextval('isobaq.doc_type_id_seq'::regclass);


--
-- Name: edu_doc_type id; Type: DEFAULT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.edu_doc_type ALTER COLUMN id SET DEFAULT nextval('isobaq.edu_doc_type_id_seq'::regclass);


--
-- Name: edu_doc_type_views id; Type: DEFAULT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.edu_doc_type_views ALTER COLUMN id SET DEFAULT nextval('isobaq.edu_doc_type_views_id_seq'::regclass);


--
-- Name: eqf id; Type: DEFAULT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.eqf ALTER COLUMN id SET DEFAULT nextval('isobaq.eqf_id_seq'::regclass);


--
-- Name: isobaq_authority isobaq_user_id; Type: DEFAULT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.isobaq_authority ALTER COLUMN isobaq_user_id SET DEFAULT nextval('isobaq.isobaq_authority_isobaq_user_id_seq'::regclass);


--
-- Name: isobaq_user id; Type: DEFAULT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.isobaq_user ALTER COLUMN id SET DEFAULT nextval('isobaq.isobaq_user_id_seq'::regclass);


--
-- Name: nqf id; Type: DEFAULT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.nqf ALTER COLUMN id SET DEFAULT nextval('isobaq.nqf_id_seq'::regclass);


--
-- Name: way_of_graduation id; Type: DEFAULT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.way_of_graduation ALTER COLUMN id SET DEFAULT nextval('isobaq.way_of_graduation_id_seq'::regclass);


--
-- Name: age_range id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.age_range ALTER COLUMN id SET DEFAULT nextval('nomenclatures.age_range_id_seq'::regclass);


--
-- Name: app_session_status id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.app_session_status ALTER COLUMN id SET DEFAULT nextval('nomenclatures.app_session_status_id_seq'::regclass);


--
-- Name: app_status id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.app_status ALTER COLUMN id SET DEFAULT nextval('nomenclatures.app_status_id_seq'::regclass);


--
-- Name: app_status_docflow id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.app_status_docflow ALTER COLUMN id SET DEFAULT nextval('nomenclatures.app_status_docflow_id_seq'::regclass);


--
-- Name: article_directive id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.article_directive ALTER COLUMN id SET DEFAULT nextval('nomenclatures.article_directive_id_seq'::regclass);


--
-- Name: article_item id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.article_item ALTER COLUMN id SET DEFAULT nextval('nomenclatures.article_item_id_seq'::regclass);


--
-- Name: bg_academic_recognition_status id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.bg_academic_recognition_status ALTER COLUMN id SET DEFAULT nextval('nomenclatures.bg_academic_recognition_status_id_seq'::regclass);


--
-- Name: bologna_cycle id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.bologna_cycle ALTER COLUMN id SET DEFAULT nextval('nomenclatures.bologna_cycle_id_seq'::regclass);


--
-- Name: certificate_prof_qualification id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.certificate_prof_qualification ALTER COLUMN id SET DEFAULT nextval('nomenclatures.certificate_prof_qualification_id_seq'::regclass);


--
-- Name: civil_id_type id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.civil_id_type ALTER COLUMN id SET DEFAULT nextval('nomenclatures.civil_id_type_id_seq'::regclass);


--
-- Name: commission_position id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.commission_position ALTER COLUMN id SET DEFAULT nextval('nomenclatures.commission_position_id_seq'::regclass);


--
-- Name: copy_types id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.copy_types ALTER COLUMN id SET DEFAULT nextval('nomenclatures.copy_types_id_seq'::regclass);


--
-- Name: doc_category id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.doc_category ALTER COLUMN id SET DEFAULT nextval('nomenclatures.doc_category_id_seq'::regclass);


--
-- Name: doc_type_to_doc_category id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.doc_type_to_doc_category ALTER COLUMN id SET DEFAULT nextval('nomenclatures.doc_type_to_doc_category_id_seq'::regclass);


--
-- Name: doc_types id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.doc_types ALTER COLUMN id SET DEFAULT nextval('nomenclatures.doc_types_id_seq'::regclass);


--
-- Name: document_receive_method id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.document_receive_method ALTER COLUMN id SET DEFAULT nextval('nomenclatures.document_receive_method_id_seq'::regclass);


--
-- Name: duration_unit id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.duration_unit ALTER COLUMN id SET DEFAULT nextval('nomenclatures.duration_unit_id_seq'::regclass);


--
-- Name: edu_level_to_app_type id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.edu_level_to_app_type ALTER COLUMN id SET DEFAULT nextval('nomenclatures.edu_level_to_app_type_id_seq'::regclass);


--
-- Name: education_document_type id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.education_document_type ALTER COLUMN id SET DEFAULT nextval('nomenclatures.education_document_type_id_seq'::regclass);


--
-- Name: education_type id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.education_type ALTER COLUMN id SET DEFAULT nextval('nomenclatures.education_type_id_seq'::regclass);


--
-- Name: ekareas id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.ekareas ALTER COLUMN id SET DEFAULT nextval('nomenclatures.ekareas_id_seq'::regclass);


--
-- Name: ekdistricts id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.ekdistricts ALTER COLUMN id SET DEFAULT nextval('nomenclatures.ekdistricts_id_seq'::regclass);


--
-- Name: ekmayoralties id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.ekmayoralties ALTER COLUMN id SET DEFAULT nextval('nomenclatures.ekmayoralties_id_seq'::regclass);


--
-- Name: ekmunicipalities id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.ekmunicipalities ALTER COLUMN id SET DEFAULT nextval('nomenclatures.ekmunicipalities_id_seq'::regclass);


--
-- Name: eksecondlevelregions id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.eksecondlevelregions ALTER COLUMN id SET DEFAULT nextval('nomenclatures.eksecondlevelregions_id_seq'::regclass);


--
-- Name: eksettlements id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.eksettlements ALTER COLUMN id SET DEFAULT nextval('nomenclatures.eksettlements_id_seq'::regclass);


--
-- Name: european_qualifications_framework id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.european_qualifications_framework ALTER COLUMN id SET DEFAULT nextval('nomenclatures.european_qualifications_framework_id_seq'::regclass);


--
-- Name: event_status id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.event_status ALTER COLUMN id SET DEFAULT nextval('nomenclatures.event_status_id_seq'::regclass);


--
-- Name: event_type id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.event_type ALTER COLUMN id SET DEFAULT nextval('nomenclatures.event_type_id_seq'::regclass);


--
-- Name: expert_position id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.expert_position ALTER COLUMN id SET DEFAULT nextval('nomenclatures.expert_position_id_seq'::regclass);


--
-- Name: grade id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.grade ALTER COLUMN id SET DEFAULT nextval('nomenclatures.grade_id_seq'::regclass);


--
-- Name: graduation_document_type id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.graduation_document_type ALTER COLUMN id SET DEFAULT nextval('nomenclatures.graduation_document_type_id_seq'::regclass);


--
-- Name: graoareas id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.graoareas ALTER COLUMN id SET DEFAULT nextval('nomenclatures.graoareas_id_seq'::regclass);


--
-- Name: graoareas municipalityid; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.graoareas ALTER COLUMN municipalityid SET DEFAULT nextval('nomenclatures.graoareas_municipalityid_seq'::regclass);


--
-- Name: graodistricts id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.graodistricts ALTER COLUMN id SET DEFAULT nextval('nomenclatures.graodistricts_id_seq'::regclass);


--
-- Name: graomunicipalities id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.graomunicipalities ALTER COLUMN id SET DEFAULT nextval('nomenclatures.graomunicipalities_id_seq'::regclass);


--
-- Name: graomunicipalities districtid; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.graomunicipalities ALTER COLUMN districtid SET DEFAULT nextval('nomenclatures.graomunicipalities_districtid_seq'::regclass);


--
-- Name: graosettlements id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.graosettlements ALTER COLUMN id SET DEFAULT nextval('nomenclatures.graosettlements_id_seq'::regclass);


--
-- Name: higher_prof_qualification id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.higher_prof_qualification ALTER COLUMN id SET DEFAULT nextval('nomenclatures.higher_prof_qualification_id_seq'::regclass);


--
-- Name: higher_speciality id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.higher_speciality ALTER COLUMN id SET DEFAULT nextval('nomenclatures.higher_speciality_id_seq'::regclass);


--
-- Name: irregularities id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.irregularities ALTER COLUMN id SET DEFAULT nextval('nomenclatures.irregularities_id_seq'::regclass);


--
-- Name: irregularity_service id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.irregularity_service ALTER COLUMN id SET DEFAULT nextval('nomenclatures.irregularity_service_id_seq'::regclass);


--
-- Name: language id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.language ALTER COLUMN id SET DEFAULT nextval('nomenclatures.language_id_seq'::regclass);


--
-- Name: legal_reason id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.legal_reason ALTER COLUMN id SET DEFAULT nextval('nomenclatures.legal_reason_id_seq'::regclass);


--
-- Name: legal_reason_to_app_type id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.legal_reason_to_app_type ALTER COLUMN id SET DEFAULT nextval('nomenclatures.legal_reason_to_app_type_id_seq'::regclass);


--
-- Name: national_qualifications_framework id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.national_qualifications_framework ALTER COLUMN id SET DEFAULT nextval('nomenclatures.national_qualifications_framework_id_seq'::regclass);


--
-- Name: original_edu_level id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.original_edu_level ALTER COLUMN id SET DEFAULT nextval('nomenclatures.original_edu_level_id_seq'::regclass);


--
-- Name: original_qualification id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.original_qualification ALTER COLUMN id SET DEFAULT nextval('nomenclatures.original_qualification_id_seq'::regclass);


--
-- Name: original_speciality id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.original_speciality ALTER COLUMN id SET DEFAULT nextval('nomenclatures.original_speciality_id_seq'::regclass);


--
-- Name: payment_type id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.payment_type ALTER COLUMN id SET DEFAULT nextval('nomenclatures.payment_type_id_seq'::regclass);


--
-- Name: personal_id_document_type id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.personal_id_document_type ALTER COLUMN id SET DEFAULT nextval('nomenclatures.personal_id_document_type_id_seq'::regclass);


--
-- Name: profession id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.profession ALTER COLUMN id SET DEFAULT nextval('nomenclatures.profession_id_seq'::regclass);


--
-- Name: profession_experience id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.profession_experience ALTER COLUMN id SET DEFAULT nextval('nomenclatures.profession_experience_id_seq'::regclass);


--
-- Name: profession_experience_document_type id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.profession_experience_document_type ALTER COLUMN id SET DEFAULT nextval('nomenclatures.profession_experience_document_type_id_seq'::regclass);


--
-- Name: professional_institution_type id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.professional_institution_type ALTER COLUMN id SET DEFAULT nextval('nomenclatures.professional_institution_type_id_seq'::regclass);


--
-- Name: purpose_of_recognition id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.purpose_of_recognition ALTER COLUMN id SET DEFAULT nextval('nomenclatures.purpose_of_recognition_id_seq'::regclass);


--
-- Name: qualification id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.qualification ALTER COLUMN id SET DEFAULT nextval('nomenclatures.qualification_id_seq'::regclass);


--
-- Name: regprof_app_status id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.regprof_app_status ALTER COLUMN id SET DEFAULT nextval('nomenclatures.regprof_app_status_id_seq'::regclass);


--
-- Name: school_type id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.school_type ALTER COLUMN id SET DEFAULT nextval('nomenclatures.school_type_id_seq'::regclass);


--
-- Name: secondary_caliber id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.secondary_caliber ALTER COLUMN id SET DEFAULT nextval('nomenclatures.secondary_caliber_id_seq'::regclass);


--
-- Name: secondary_prof_qualification id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.secondary_prof_qualification ALTER COLUMN id SET DEFAULT nextval('nomenclatures.secondary_prof_qualification_id_seq'::regclass);


--
-- Name: secondary_profession_group id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.secondary_profession_group ALTER COLUMN id SET DEFAULT nextval('nomenclatures.secondary_profession_group_id_seq'::regclass);


--
-- Name: secondary_qualification_degree id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.secondary_qualification_degree ALTER COLUMN id SET DEFAULT nextval('nomenclatures.secondary_qualification_degree_id_seq'::regclass);


--
-- Name: secondary_speciality id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.secondary_speciality ALTER COLUMN id SET DEFAULT nextval('nomenclatures.secondary_speciality_id_seq'::regclass);


--
-- Name: service_type id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.service_type ALTER COLUMN id SET DEFAULT nextval('nomenclatures.service_type_id_seq'::regclass);


--
-- Name: session_status id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.session_status ALTER COLUMN id SET DEFAULT nextval('nomenclatures.session_status_id_seq'::regclass);


--
-- Name: training_form id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.training_form ALTER COLUMN id SET DEFAULT nextval('nomenclatures.training_form_id_seq'::regclass);


--
-- Name: training_location id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.training_location ALTER COLUMN id SET DEFAULT nextval('nomenclatures.training_location_id_seq'::regclass);


--
-- Name: university_details id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.university_details ALTER COLUMN id SET DEFAULT nextval('nomenclatures.university_details_id_seq'::regclass);


--
-- Name: university_generic_name id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.university_generic_name ALTER COLUMN id SET DEFAULT nextval('nomenclatures.university_generic_name_id_seq'::regclass);


--
-- Name: way_of_graduation id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.way_of_graduation ALTER COLUMN id SET DEFAULT nextval('nomenclatures.way_of_graduation_id_seq'::regclass);


--
-- Name: way_of_graduation_to_app_type id; Type: DEFAULT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.way_of_graduation_to_app_type ALTER COLUMN id SET DEFAULT nextval('nomenclatures.way_of_graduation_to_app_type_id_seq'::regclass);


--
-- Name: entry_num_egov_code id; Type: DEFAULT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.entry_num_egov_code ALTER COLUMN id SET DEFAULT nextval('payments.entry_num_egov_code_id_seq'::regclass);


--
-- Name: epay_code id; Type: DEFAULT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.epay_code ALTER COLUMN id SET DEFAULT nextval('payments.epay_code_id_seq'::regclass);


--
-- Name: epay_merchant_configurations id; Type: DEFAULT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.epay_merchant_configurations ALTER COLUMN id SET DEFAULT nextval('payments.epay_merchant_configurations_id_seq'::regclass);


--
-- Name: epay_module_configurations id; Type: DEFAULT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.epay_module_configurations ALTER COLUMN id SET DEFAULT nextval('payments.epay_module_configurations_id_seq'::regclass);


--
-- Name: liabilities id; Type: DEFAULT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.liabilities ALTER COLUMN id SET DEFAULT nextval('payments.liabilities_id_seq'::regclass);


--
-- Name: liability_details id; Type: DEFAULT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.liability_details ALTER COLUMN id SET DEFAULT nextval('payments.liability_details_id_seq'::regclass);


--
-- Name: liable_persons id; Type: DEFAULT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.liable_persons ALTER COLUMN id SET DEFAULT nextval('payments.liable_persons_id_seq'::regclass);


--
-- Name: module_configurations id; Type: DEFAULT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.module_configurations ALTER COLUMN id SET DEFAULT nextval('payments.module_configurations_id_seq'::regclass);


--
-- Name: payments id; Type: DEFAULT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.payments ALTER COLUMN id SET DEFAULT nextval('payments.payments_id_seq'::regclass);


--
-- Name: request_log id; Type: DEFAULT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.request_log ALTER COLUMN id SET DEFAULT nextval('payments.request_log_id_seq'::regclass);


--
-- Name: poll_answers id; Type: DEFAULT; Schema: poll; Owner: postgres
--

ALTER TABLE ONLY poll.poll_answers ALTER COLUMN id SET DEFAULT nextval('poll.poll_answers_id_seq'::regclass);


--
-- Name: app_status_doc_type id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.app_status_doc_type ALTER COLUMN id SET DEFAULT nextval('public.app_status_doc_type_id_seq'::regclass);


--
-- Name: app_status_history id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.app_status_history ALTER COLUMN id SET DEFAULT nextval('public.app_status_history_id_seq'::regclass);


--
-- Name: application id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application ALTER COLUMN id SET DEFAULT nextval('public.application_id_seq'::regclass);


--
-- Name: application_changes_history id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application_changes_history ALTER COLUMN id SET DEFAULT nextval('public.application_changes_history_id_seq'::regclass);


--
-- Name: application_expert id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application_expert ALTER COLUMN id SET DEFAULT nextval('public.application_expert_id_seq'::regclass);


--
-- Name: application_expert_specialities id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application_expert_specialities ALTER COLUMN id SET DEFAULT nextval('public.application_expert_specialities_id_seq'::regclass);


--
-- Name: application_kind id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application_kind ALTER COLUMN id SET DEFAULT nextval('public.application_kind_id_seq'::regclass);


--
-- Name: attached_docs id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.attached_docs ALTER COLUMN id SET DEFAULT nextval('public.attached_docs_id_seq'::regclass);


--
-- Name: available_training_forms id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.available_training_forms ALTER COLUMN id SET DEFAULT nextval('public.available_training_forms_id_seq'::regclass);


--
-- Name: bg_academic_recognition_file_log id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.bg_academic_recognition_file_log ALTER COLUMN id SET DEFAULT nextval('public.bg_academic_recognition_file_log_id_seq'::regclass);


--
-- Name: bg_academic_recognition_info id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.bg_academic_recognition_info ALTER COLUMN id SET DEFAULT nextval('public.bg_academic_recognition_info_id_seq'::regclass);


--
-- Name: cert_number_to_attached_doc id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cert_number_to_attached_doc ALTER COLUMN id SET DEFAULT nextval('public.cert_number_to_attached_doc_id_seq'::regclass);


--
-- Name: comission_agenda id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comission_agenda ALTER COLUMN id SET DEFAULT nextval('public.comission_agenda_id_seq'::regclass);


--
-- Name: comission_calendar id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comission_calendar ALTER COLUMN id SET DEFAULT nextval('public.comission_calendar_id_seq'::regclass);


--
-- Name: comission_member id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comission_member ALTER COLUMN id SET DEFAULT nextval('public.comission_member_id_seq'::regclass);


--
-- Name: comission_participation id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comission_participation ALTER COLUMN id SET DEFAULT nextval('public.comission_participation_id_seq'::regclass);


--
-- Name: common_vars id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.common_vars ALTER COLUMN id SET DEFAULT nextval('public.common_vars_id_seq'::regclass);


--
-- Name: competent_institution id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.competent_institution ALTER COLUMN id SET DEFAULT nextval('public.competent_institution_id_seq'::regclass);


--
-- Name: diploma_examination id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.diploma_examination ALTER COLUMN id SET DEFAULT nextval('public.diploma_examination_id_seq'::regclass);


--
-- Name: diploma_issuer id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.diploma_issuer ALTER COLUMN id SET DEFAULT nextval('public.diploma_issuer_id_seq'::regclass);


--
-- Name: diploma_type id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.diploma_type ALTER COLUMN id SET DEFAULT nextval('public.diploma_type_id_seq'::regclass);


--
-- Name: diploma_type_attached_docs id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.diploma_type_attached_docs ALTER COLUMN id SET DEFAULT nextval('public.diploma_type_attached_docs_id_seq'::regclass);


--
-- Name: diploma_type_issuer id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.diploma_type_issuer ALTER COLUMN id SET DEFAULT nextval('public.diploma_type_issuer_id_seq'::regclass);


--
-- Name: document_recipient id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.document_recipient ALTER COLUMN id SET DEFAULT nextval('public.document_recipient_id_seq'::regclass);


--
-- Name: email id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.email ALTER COLUMN id SET DEFAULT nextval('public.email_id_seq'::regclass);


--
-- Name: epay_messages id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.epay_messages ALTER COLUMN id SET DEFAULT nextval('public.epay_messages_id_seq'::regclass);


--
-- Name: epay_payment_details id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.epay_payment_details ALTER COLUMN id SET DEFAULT nextval('public.epay_payment_details_id_seq'::regclass);


--
-- Name: esoed_messages id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.esoed_messages ALTER COLUMN id SET DEFAULT nextval('public.esoed_messages_id_seq'::regclass);


--
-- Name: event id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.event ALTER COLUMN id SET DEFAULT nextval('public.event_id_seq'::regclass);


--
-- Name: expert_statement id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.expert_statement ALTER COLUMN id SET DEFAULT nextval('public.expert_statement_id_seq'::regclass);


--
-- Name: ext_menu id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ext_menu ALTER COLUMN id SET DEFAULT nextval('public.ext_menu_id_seq'::regclass);


--
-- Name: liabilities id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.liabilities ALTER COLUMN id SET DEFAULT nextval('public.liabilities_id_seq'::regclass);


--
-- Name: person id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.person ALTER COLUMN id SET DEFAULT nextval('public.person_id_seq'::regclass);


--
-- Name: person_document id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.person_document ALTER COLUMN id SET DEFAULT nextval('public.person_document_id_seq'::regclass);


--
-- Name: purpose_of_recognition id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.purpose_of_recognition ALTER COLUMN id SET DEFAULT nextval('public.purpose_of_recognition_id_seq'::regclass);


--
-- Name: ras_nomenclatures_map id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ras_nomenclatures_map ALTER COLUMN id SET DEFAULT nextval('public.ras_nomenclatures_map_id_seq'::regclass);


--
-- Name: recognized_specs id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recognized_specs ALTER COLUMN id SET DEFAULT nextval('public.recognized_specs_id_seq'::regclass);


--
-- Name: sources_of_information id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sources_of_information ALTER COLUMN id SET DEFAULT nextval('public.sources_of_information_id_seq'::regclass);


--
-- Name: training_course id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_course ALTER COLUMN id SET DEFAULT nextval('public.training_course_id_seq'::regclass);


--
-- Name: training_course_institution id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_course_institution ALTER COLUMN id SET DEFAULT nextval('public.training_course_institution_id_seq'::regclass);


--
-- Name: training_course_specialities id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_course_specialities ALTER COLUMN id SET DEFAULT nextval('public.training_course_specialities_id_seq'::regclass);


--
-- Name: training_form id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_form ALTER COLUMN id SET DEFAULT nextval('public.training_form_id_seq'::regclass);


--
-- Name: training_institution id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_institution ALTER COLUMN id SET DEFAULT nextval('public.training_institution_id_seq'::regclass);


--
-- Name: training_location id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_location ALTER COLUMN id SET DEFAULT nextval('public.training_location_id_seq'::regclass);


--
-- Name: uni_exam_attached_docs id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.uni_exam_attached_docs ALTER COLUMN id SET DEFAULT nextval('public.uni_exam_attached_docs_id_seq'::regclass);


--
-- Name: university id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.university ALTER COLUMN id SET DEFAULT nextval('public.university_id_seq'::regclass);


--
-- Name: university_examination id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.university_examination ALTER COLUMN id SET DEFAULT nextval('public.university_examination_id_seq'::regclass);


--
-- Name: university_faculty id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.university_faculty ALTER COLUMN id SET DEFAULT nextval('public.university_faculty_id_seq'::regclass);


--
-- Name: university_id id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.university_id ALTER COLUMN id SET DEFAULT nextval('public.university_id_id_seq'::regclass);


--
-- Name: university_validity id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.university_validity ALTER COLUMN id SET DEFAULT nextval('public.university_validity_id_seq'::regclass);


--
-- Name: user_addr id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_addr ALTER COLUMN id SET DEFAULT nextval('public.user_addr_id_seq'::regclass);


--
-- Name: users id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users ALTER COLUMN id SET DEFAULT nextval('public.users_id_seq'::regclass);


--
-- Name: users_group_membership record_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_group_membership ALTER COLUMN record_id SET DEFAULT nextval('public.users_group_membership_record_id_seq'::regclass);


--
-- Name: users_sys_log record_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_sys_log ALTER COLUMN record_id SET DEFAULT nextval('public.users_sys_log_record_id_seq'::regclass);


--
-- Name: users_sys_log_operations record_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_sys_log_operations ALTER COLUMN record_id SET DEFAULT nextval('public.users_sys_log_operations_record_id_seq'::regclass);


--
-- Name: way_of_graduation id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.way_of_graduation ALTER COLUMN id SET DEFAULT nextval('public.way_of_graduation_id_seq'::regclass);


--
-- Name: app_status_doc_type id; Type: DEFAULT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.app_status_doc_type ALTER COLUMN id SET DEFAULT nextval('regprof.app_status_doc_type_id_seq'::regclass);


--
-- Name: app_status_docflow_history id; Type: DEFAULT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.app_status_docflow_history ALTER COLUMN id SET DEFAULT nextval('regprof.app_status_docflow_history_id_seq'::regclass);


--
-- Name: app_status_history id; Type: DEFAULT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.app_status_history ALTER COLUMN id SET DEFAULT nextval('regprof.app_status_history_id_seq'::regclass);


--
-- Name: cert_number_to_attached_doc id; Type: DEFAULT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.cert_number_to_attached_doc ALTER COLUMN id SET DEFAULT nextval('regprof.cert_number_to_attached_doc_id_seq'::regclass);


--
-- Name: doc_exam_attached_docs id; Type: DEFAULT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.doc_exam_attached_docs ALTER COLUMN id SET DEFAULT nextval('regprof.doc_exam_attached_docs_id_seq'::regclass);


--
-- Name: document_examination id; Type: DEFAULT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.document_examination ALTER COLUMN id SET DEFAULT nextval('regprof.document_examination_id_seq'::regclass);


--
-- Name: education_type_to_institution_type id; Type: DEFAULT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.education_type_to_institution_type ALTER COLUMN id SET DEFAULT nextval('regprof.education_type_to_institution_type_id_seq'::regclass);


--
-- Name: prof_qualification_examination id; Type: DEFAULT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.prof_qualification_examination ALTER COLUMN id SET DEFAULT nextval('regprof.prof_qualification_examination_id_seq'::regclass);


--
-- Name: profession_experience id; Type: DEFAULT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.profession_experience ALTER COLUMN id SET DEFAULT nextval('regprof.profession_experience_id_seq'::regclass);


--
-- Name: profession_experience_dates id; Type: DEFAULT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.profession_experience_dates ALTER COLUMN id SET DEFAULT nextval('regprof.profession_experience_dates_id_seq'::regclass);


--
-- Name: profession_experience_documents id; Type: DEFAULT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.profession_experience_documents ALTER COLUMN id SET DEFAULT nextval('regprof.profession_experience_documents_id_seq'::regclass);


--
-- Name: profession_experience_exam_attached_docs id; Type: DEFAULT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.profession_experience_exam_attached_docs ALTER COLUMN id SET DEFAULT nextval('regprof.profession_experience_exam_attached_docs_id_seq'::regclass);


--
-- Name: profession_experience_examination id; Type: DEFAULT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.profession_experience_examination ALTER COLUMN id SET DEFAULT nextval('regprof.profession_experience_examination_id_seq'::regclass);


--
-- Name: professional_institution id; Type: DEFAULT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.professional_institution ALTER COLUMN id SET DEFAULT nextval('regprof.professional_institution_id_seq'::regclass);


--
-- Name: professional_institution_examination id; Type: DEFAULT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.professional_institution_examination ALTER COLUMN id SET DEFAULT nextval('regprof.professional_institution_examination_id_seq'::regclass);


--
-- Name: professional_institution_names id; Type: DEFAULT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.professional_institution_names ALTER COLUMN id SET DEFAULT nextval('regprof.professional_institution_names_id_seq'::regclass);


--
-- Name: professional_institution_validity id; Type: DEFAULT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.professional_institution_validity ALTER COLUMN id SET DEFAULT nextval('regprof.professional_institution_validity_id_seq'::regclass);


--
-- Name: regprof_application id; Type: DEFAULT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regprof_application ALTER COLUMN id SET DEFAULT nextval('regprof.regprof_application_id_seq'::regclass);


--
-- Name: regprof_attached_docs id; Type: DEFAULT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regprof_attached_docs ALTER COLUMN id SET DEFAULT nextval('regprof.regprof_attached_docs_id_seq'::regclass);


--
-- Name: regprof_document_recipient id; Type: DEFAULT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regprof_document_recipient ALTER COLUMN id SET DEFAULT nextval('regprof.regprof_document_recipient_id_seq'::regclass);


--
-- Name: regulated_examination id; Type: DEFAULT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regulated_examination ALTER COLUMN id SET DEFAULT nextval('regprof.regulated_examination_id_seq'::regclass);


--
-- Name: regulated_validity id; Type: DEFAULT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regulated_validity ALTER COLUMN id SET DEFAULT nextval('regprof.regulated_validity_id_seq'::regclass);


--
-- Name: responsible_users id; Type: DEFAULT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.responsible_users ALTER COLUMN id SET DEFAULT nextval('regprof.responsible_users_id_seq'::regclass);


--
-- Name: training_course id; Type: DEFAULT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.training_course ALTER COLUMN id SET DEFAULT nextval('regprof.training_course_id_seq'::regclass);


--
-- Name: training_course_specialities id; Type: DEFAULT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.training_course_specialities ALTER COLUMN id SET DEFAULT nextval('regprof.training_course_specialities_id_seq'::regclass);


--
-- Name: analytic_product_files analytic_product_files_pkey; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.analytic_product_files
    ADD CONSTRAINT analytic_product_files_pkey PRIMARY KEY (id);


--
-- Name: analytic_products analytic_products_pkey; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.analytic_products
    ADD CONSTRAINT analytic_products_pkey PRIMARY KEY (id);


--
-- Name: app_status_docflow_entry_num_series app_status_docflow_entry_num_series_pkey; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.app_status_docflow_entry_num_series
    ADD CONSTRAINT app_status_docflow_entry_num_series_pkey PRIMARY KEY (app_status_docflow_id, entry_num_series_id);


--
-- Name: app_status_docflow_history app_status_docflow_history_pkey; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.app_status_docflow_history
    ADD CONSTRAINT app_status_docflow_history_pkey PRIMARY KEY (id);


--
-- Name: app_status_entry_num_series app_status_entry_num_series_pkey; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.app_status_entry_num_series
    ADD CONSTRAINT app_status_entry_num_series_pkey PRIMARY KEY (app_status_id, entry_num_series_id);


--
-- Name: assignment assignment_pk; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.assignment
    ADD CONSTRAINT assignment_pk PRIMARY KEY (id);


--
-- Name: bibliographic_references_files bibliographic_references_files_pkey; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.bibliographic_references_files
    ADD CONSTRAINT bibliographic_references_files_pkey PRIMARY KEY (id);


--
-- Name: bibliographic_references_hist bibliographic_references_hist_pkey; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.bibliographic_references_hist
    ADD CONSTRAINT bibliographic_references_hist_pkey PRIMARY KEY (hist_id);


--
-- Name: bibliographic_references bibliographic_references_pkey; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.bibliographic_references
    ADD CONSTRAINT bibliographic_references_pkey PRIMARY KEY (id);


--
-- Name: company company_pk; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.company
    ADD CONSTRAINT company_pk PRIMARY KEY (id);


--
-- Name: doc_type_entry_num_series doc_type_entry_num_series_pk; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.doc_type_entry_num_series
    ADD CONSTRAINT doc_type_entry_num_series_pk PRIMARY KEY (doc_type_id, num_series_id);


--
-- Name: document_delivery_files document_delivery_files_pkey; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.document_delivery_files
    ADD CONSTRAINT document_delivery_files_pkey PRIMARY KEY (id);


--
-- Name: document_deliverys document_deliverys_pkey; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.document_deliverys
    ADD CONSTRAINT document_deliverys_pkey PRIMARY KEY (id);


--
-- Name: document document_pkey; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.document
    ADD CONSTRAINT document_pkey PRIMARY KEY (id);


--
-- Name: address eserv_address_pk; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.address
    ADD CONSTRAINT eserv_address_pk PRIMARY KEY (id);


--
-- Name: person ext_person_pk; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.person
    ADD CONSTRAINT ext_person_pk PRIMARY KEY (id);


--
-- Name: analytic_products_hist hist_ap_id_pk; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.analytic_products_hist
    ADD CONSTRAINT hist_ap_id_pk PRIMARY KEY (hist_id);


--
-- Name: document_deliverys_hist hist_document_deliverys_id_pk; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.document_deliverys_hist
    ADD CONSTRAINT hist_document_deliverys_id_pk PRIMARY KEY (hist_id);


--
-- Name: official_notes_hist hist_id_on_pk; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.official_notes_hist
    ADD CONSTRAINT hist_id_on_pk PRIMARY KEY (hist_id);


--
-- Name: signals_hist hist_id_pk; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.signals_hist
    ADD CONSTRAINT hist_id_pk PRIMARY KEY (hist_id);


--
-- Name: impact_factor_report_rows impact_factor_report_rows_pkey; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.impact_factor_report_rows
    ADD CONSTRAINT impact_factor_report_rows_pkey PRIMARY KEY (id);


--
-- Name: inquiry_files inquiry_files_pkey; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.inquiry_files
    ADD CONSTRAINT inquiry_files_pkey PRIMARY KEY (id);


--
-- Name: inquiry_hist inquiry_hist_id_pk; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.inquiry_hist
    ADD CONSTRAINT inquiry_hist_id_pk PRIMARY KEY (hist_id);


--
-- Name: inquiry inquiry_pkey; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.inquiry
    ADD CONSTRAINT inquiry_pkey PRIMARY KEY (id);


--
-- Name: notes note_pkey; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.notes
    ADD CONSTRAINT note_pkey PRIMARY KEY (id);


--
-- Name: notifications notifications_pkey; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.notifications
    ADD CONSTRAINT notifications_pkey PRIMARY KEY (id);


--
-- Name: official_note_files official_note_files_pkey; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.official_note_files
    ADD CONSTRAINT official_note_files_pkey PRIMARY KEY (id);


--
-- Name: official_notes official_notes_bo_pkey; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.official_notes
    ADD CONSTRAINT official_notes_bo_pkey PRIMARY KEY (id);


--
-- Name: public_access_files public_access_files_pkey; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.public_access_files
    ADD CONSTRAINT public_access_files_pkey PRIMARY KEY (id);


--
-- Name: public_access_hist public_access_hist_id_pk; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.public_access_hist
    ADD CONSTRAINT public_access_hist_id_pk PRIMARY KEY (hist_id);


--
-- Name: public_access public_access_pkey; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.public_access
    ADD CONSTRAINT public_access_pkey PRIMARY KEY (id);


--
-- Name: public_person public_person_pkey; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.public_person
    ADD CONSTRAINT public_person_pkey PRIMARY KEY (id);


--
-- Name: signal_files signal_files_pkey; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.signal_files
    ADD CONSTRAINT signal_files_pkey PRIMARY KEY (id);


--
-- Name: signals signals_pk; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.signals
    ADD CONSTRAINT signals_pk PRIMARY KEY (id);


--
-- Name: suggestions_hist sugg_id_pkey; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.suggestions_hist
    ADD CONSTRAINT sugg_id_pkey PRIMARY KEY (hist_id);


--
-- Name: suggestions_files suggestions_files_pkey; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.suggestions_files
    ADD CONSTRAINT suggestions_files_pkey PRIMARY KEY (id);


--
-- Name: suggestions suggestions_pk; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.suggestions
    ADD CONSTRAINT suggestions_pk PRIMARY KEY (id);


--
-- Name: templates templates_pkey; Type: CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.templates
    ADD CONSTRAINT templates_pkey PRIMARY KEY (id);


--
-- Name: blobs2 blobs2_pkey; Type: CONSTRAINT; Schema: blobs; Owner: postgres
--

ALTER TABLE ONLY blobs.blobs2
    ADD CONSTRAINT blobs2_pkey PRIMARY KEY (id);


--
-- Name: blobs blobs_pkey; Type: CONSTRAINT; Schema: blobs; Owner: postgres
--

ALTER TABLE ONLY blobs.blobs
    ADD CONSTRAINT blobs_pkey PRIMARY KEY (id);


--
-- Name: analytic_product_files analytic_product_files_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.analytic_product_files
    ADD CONSTRAINT analytic_product_files_pk PRIMARY KEY (analytic_products_id, blob_id);


--
-- Name: analytic_products analytic_products_pkey; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.analytic_products
    ADD CONSTRAINT analytic_products_pkey PRIMARY KEY (id);


--
-- Name: application_university application_university_fkey; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.application_university
    ADD CONSTRAINT application_university_fkey PRIMARY KEY (application_id, university_id);


--
-- Name: bibliographic_references_files bibliographic_references_files_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.bibliographic_references_files
    ADD CONSTRAINT bibliographic_references_files_pk PRIMARY KEY (bibliographic_references_id, blob_id);


--
-- Name: bibliographic_references bibliographic_references_pkey; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.bibliographic_references
    ADD CONSTRAINT bibliographic_references_pkey PRIMARY KEY (id);


--
-- Name: company_hist company_hist_id; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.company_hist
    ADD CONSTRAINT company_hist_id PRIMARY KEY (hist_id);


--
-- Name: company company_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.company
    ADD CONSTRAINT company_pk PRIMARY KEY (id);


--
-- Name: document_delivery doc_delivery_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.document_delivery
    ADD CONSTRAINT doc_delivery_pk PRIMARY KEY (id);


--
-- Name: document_delivery_files document_delivery_files_pkey; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.document_delivery_files
    ADD CONSTRAINT document_delivery_files_pkey PRIMARY KEY (document_delivery_id, blob_id);


--
-- Name: document document_pkey; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.document
    ADD CONSTRAINT document_pkey PRIMARY KEY (id);


--
-- Name: address eserv_address_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.address
    ADD CONSTRAINT eserv_address_pk PRIMARY KEY (id);


--
-- Name: regprof_application ext_apn_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_application
    ADD CONSTRAINT ext_apn_pk PRIMARY KEY (id);


--
-- Name: rudi_application ext_application_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_application
    ADD CONSTRAINT ext_application_pk PRIMARY KEY (id);


--
-- Name: rudi_diploma_issuer ext_diploma_issuer_pkey; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_diploma_issuer
    ADD CONSTRAINT ext_diploma_issuer_pkey PRIMARY KEY (id);


--
-- Name: person_document ext_pers_doc_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.person_document
    ADD CONSTRAINT ext_pers_doc_pk PRIMARY KEY (id);


--
-- Name: person ext_person_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.person
    ADD CONSTRAINT ext_person_pk PRIMARY KEY (id);


--
-- Name: regprof_profession_experience_dates ext_profession_experience_dates_pkey; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_profession_experience_dates
    ADD CONSTRAINT ext_profession_experience_dates_pkey PRIMARY KEY (id);


--
-- Name: regprof_profession_experience_documents ext_profession_experience_documents_pkey; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_profession_experience_documents
    ADD CONSTRAINT ext_profession_experience_documents_pkey PRIMARY KEY (id);


--
-- Name: regprof_profession_experience ext_profession_experience_pkey; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_profession_experience
    ADD CONSTRAINT ext_profession_experience_pkey PRIMARY KEY (id);


--
-- Name: regprof_profession_experience ext_profession_experience_training_course_id_key; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_profession_experience
    ADD CONSTRAINT ext_profession_experience_training_course_id_key UNIQUE (training_course_id);


--
-- Name: rudi_purpose_of_recognition ext_purpose_of_recognition_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_purpose_of_recognition
    ADD CONSTRAINT ext_purpose_of_recognition_pk PRIMARY KEY (id);


--
-- Name: regprof_app_libilities ext_regprof_app_libilities_ext_regprof_application_id_key; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_app_libilities
    ADD CONSTRAINT ext_regprof_app_libilities_ext_regprof_application_id_key UNIQUE (ext_regprof_application_id);


--
-- Name: regprof_app_libilities ext_regprof_app_libilities_liability_id_key; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_app_libilities
    ADD CONSTRAINT ext_regprof_app_libilities_liability_id_key UNIQUE (liability_id);


--
-- Name: regprof_app_libilities ext_regprof_app_libilities_pkey; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_app_libilities
    ADD CONSTRAINT ext_regprof_app_libilities_pkey PRIMARY KEY (id);


--
-- Name: rudi_training_course ext_training_course_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_training_course
    ADD CONSTRAINT ext_training_course_pk PRIMARY KEY (id);


--
-- Name: rudi_training_form ext_training_form_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_training_form
    ADD CONSTRAINT ext_training_form_pk PRIMARY KEY (id);


--
-- Name: rudi_training_location ext_training_location_pkey; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_training_location
    ADD CONSTRAINT ext_training_location_pkey PRIMARY KEY (id);


--
-- Name: rudi_way_of_graduation ext_way_of_graduation_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_way_of_graduation
    ADD CONSTRAINT ext_way_of_graduation_pk PRIMARY KEY (id);


--
-- Name: analytic_products_hist hist_analytic_products_id_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.analytic_products_hist
    ADD CONSTRAINT hist_analytic_products_id_pk PRIMARY KEY (hist_id);


--
-- Name: bibliographic_references_hist hist_bibliographic_references_id_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.bibliographic_references_hist
    ADD CONSTRAINT hist_bibliographic_references_id_pk PRIMARY KEY (hist_id);


--
-- Name: document_delivery_hist hist_document_delivery_id_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.document_delivery_hist
    ADD CONSTRAINT hist_document_delivery_id_pk PRIMARY KEY (hist_id);


--
-- Name: inquiry_hist hist_inquiry_id_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.inquiry_hist
    ADD CONSTRAINT hist_inquiry_id_pk PRIMARY KEY (hist_id);


--
-- Name: official_notes_hist hist_official_notes_id_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.official_notes_hist
    ADD CONSTRAINT hist_official_notes_id_pk PRIMARY KEY (hist_id);


--
-- Name: public_access_hist hist_public_access_id_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.public_access_hist
    ADD CONSTRAINT hist_public_access_id_pk PRIMARY KEY (hist_id);


--
-- Name: signals_hist hist_signal_id_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.signals_hist
    ADD CONSTRAINT hist_signal_id_pk PRIMARY KEY (hist_id);


--
-- Name: suggestions_hist hist_suggestion_id_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.suggestions_hist
    ADD CONSTRAINT hist_suggestion_id_pk PRIMARY KEY (hist_id);


--
-- Name: inquiry_files inquiry_files_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.inquiry_files
    ADD CONSTRAINT inquiry_files_pk PRIMARY KEY (inquiry_id, blob_id);


--
-- Name: inquiry inquiry_pkey; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.inquiry
    ADD CONSTRAINT inquiry_pkey PRIMARY KEY (id);


--
-- Name: irregularity_relation irregularity_relation_pkey; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.irregularity_relation
    ADD CONSTRAINT irregularity_relation_pkey PRIMARY KEY (id);


--
-- Name: official_note_files official_note_files_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.official_note_files
    ADD CONSTRAINT official_note_files_pk PRIMARY KEY (official_note_id, blob_id);


--
-- Name: official_notes official_notes_pkey; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.official_notes
    ADD CONSTRAINT official_notes_pkey PRIMARY KEY (id);


--
-- Name: person_hist person_hist_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.person_hist
    ADD CONSTRAINT person_hist_pk PRIMARY KEY (hist_id);


--
-- Name: price_list price_lsit_pkey; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.price_list
    ADD CONSTRAINT price_lsit_pkey PRIMARY KEY (id);


--
-- Name: public_access public_access_pkey; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.public_access
    ADD CONSTRAINT public_access_pkey PRIMARY KEY (id);


--
-- Name: public_person public_person_pkey; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.public_person
    ADD CONSTRAINT public_person_pkey PRIMARY KEY (id);


--
-- Name: recommendation_blob recommendation_blob_pkey; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.recommendation_blob
    ADD CONSTRAINT recommendation_blob_pkey PRIMARY KEY (recommendation_id, blob_id);


--
-- Name: recommendation_diploma_type recommendation_diploma_type_pkey; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.recommendation_diploma_type
    ADD CONSTRAINT recommendation_diploma_type_pkey PRIMARY KEY (recommendation_id, diploma_type_id);


--
-- Name: recommendation recommendation_pkey; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.recommendation
    ADD CONSTRAINT recommendation_pkey PRIMARY KEY (id);


--
-- Name: recommendation_training_course recommendation_training_course_pkey; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.recommendation_training_course
    ADD CONSTRAINT recommendation_training_course_pkey PRIMARY KEY (recommendation_id, training_course_id);


--
-- Name: regprof_application_comments regprof_application_comments_pkey; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_application_comments
    ADD CONSTRAINT regprof_application_comments_pkey PRIMARY KEY (id);


--
-- Name: regprof_attached_docs regprof_attached_docs_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_attached_docs
    ADD CONSTRAINT regprof_attached_docs_pk PRIMARY KEY (id);


--
-- Name: regprof_document_recipient regprof_document_recipient_application_id_key; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_document_recipient
    ADD CONSTRAINT regprof_document_recipient_application_id_key UNIQUE (application_id);


--
-- Name: regprof_document_recipient regprof_document_recipient_id_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_document_recipient
    ADD CONSTRAINT regprof_document_recipient_id_pk PRIMARY KEY (id);


--
-- Name: regprof_signed_docs regprof_esigneddocs_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_signed_docs
    ADD CONSTRAINT regprof_esigneddocs_pk PRIMARY KEY (id);


--
-- Name: regprof_training_course_specialities regprof_training_course_specialities_pkey; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_training_course_specialities
    ADD CONSTRAINT regprof_training_course_specialities_pkey PRIMARY KEY (id);


--
-- Name: regprof_training_course rp_ext_tce_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_training_course
    ADD CONSTRAINT rp_ext_tce_pk PRIMARY KEY (id);


--
-- Name: rudi_application_comments rudi_application_comments_pkey; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_application_comments
    ADD CONSTRAINT rudi_application_comments_pkey PRIMARY KEY (id);


--
-- Name: rudi_application_kind rudi_application_kind_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_application_kind
    ADD CONSTRAINT rudi_application_kind_pk PRIMARY KEY (id);


--
-- Name: rudi_attached_docs rudi_attached_docs_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_attached_docs
    ADD CONSTRAINT rudi_attached_docs_pk PRIMARY KEY (id);


--
-- Name: rudi_document_recipient rudi_document_recipient_application_id_key; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_document_recipient
    ADD CONSTRAINT rudi_document_recipient_application_id_key UNIQUE (application_id);


--
-- Name: rudi_document_recipient rudi_document_recipient_id_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_document_recipient
    ADD CONSTRAINT rudi_document_recipient_id_pk PRIMARY KEY (id);


--
-- Name: rudi_signed_docs rudi_esigneddocs_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_signed_docs
    ADD CONSTRAINT rudi_esigneddocs_pk PRIMARY KEY (id);


--
-- Name: rudi_training_course_specialities rudi_training_course_specialities_pkey; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_training_course_specialities
    ADD CONSTRAINT rudi_training_course_specialities_pkey PRIMARY KEY (id);


--
-- Name: salaries salaries_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.salaries
    ADD CONSTRAINT salaries_pk PRIMARY KEY (id);


--
-- Name: service_irregularity service_irregularity_pkey; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.service_irregularity
    ADD CONSTRAINT service_irregularity_pkey PRIMARY KEY (id);


--
-- Name: service_reject service_reject_pkey; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.service_reject
    ADD CONSTRAINT service_reject_pkey PRIMARY KEY (id);


--
-- Name: signal_files signal_files_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.signal_files
    ADD CONSTRAINT signal_files_pk PRIMARY KEY (signal_id, blob_id);


--
-- Name: signals signals_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.signals
    ADD CONSTRAINT signals_pk PRIMARY KEY (id);


--
-- Name: signed_docs_hist signeddocs_hist_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.signed_docs_hist
    ADD CONSTRAINT signeddocs_hist_pk PRIMARY KEY (hist_id);


--
-- Name: signed_docs signeddocs_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.signed_docs
    ADD CONSTRAINT signeddocs_pk PRIMARY KEY (id);


--
-- Name: suggestion_files suggestion_files_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.suggestion_files
    ADD CONSTRAINT suggestion_files_pk PRIMARY KEY (suggestion_id, blob_id);


--
-- Name: suggestions suggestions_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.suggestions
    ADD CONSTRAINT suggestions_pk PRIMARY KEY (id);


--
-- Name: application training_course_id_fkey; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.application
    ADD CONSTRAINT training_course_id_fkey PRIMARY KEY (id);


--
-- Name: training_course training_course_pk; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.training_course
    ADD CONSTRAINT training_course_pk PRIMARY KEY (id);


--
-- Name: xml_services xml_services_pkey; Type: CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.xml_services
    ADD CONSTRAINT xml_services_pkey PRIMARY KEY (id);


--
-- Name: academic_title academic_title_id_pk; Type: CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.academic_title
    ADD CONSTRAINT academic_title_id_pk PRIMARY KEY (id);


--
-- Name: access_further_bologna access_further_bologna_pk; Type: CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.access_further_bologna
    ADD CONSTRAINT access_further_bologna_pk PRIMARY KEY (edu_doc_type_id, bologna_cycle_id);


--
-- Name: access_further_eqf access_further_eqf_pk; Type: CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.access_further_eqf
    ADD CONSTRAINT access_further_eqf_pk PRIMARY KEY (edu_doc_type_id, eqf_id);


--
-- Name: access_further_nqf access_further_nqf_pk; Type: CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.access_further_nqf
    ADD CONSTRAINT access_further_nqf_pk PRIMARY KEY (edu_doc_type_id, nqf_id);


--
-- Name: award_institution_type award_institution_type_id_pk; Type: CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.award_institution_type
    ADD CONSTRAINT award_institution_type_id_pk PRIMARY KEY (id);


--
-- Name: blobs2 blobs2_id_pk; Type: CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.blobs2
    ADD CONSTRAINT blobs2_id_pk PRIMARY KEY (id);


--
-- Name: blobs blobs_id_pk; Type: CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.blobs
    ADD CONSTRAINT blobs_id_pk PRIMARY KEY (id);


--
-- Name: bologna_cycle bologna_cycle_id_pk; Type: CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.bologna_cycle
    ADD CONSTRAINT bologna_cycle_id_pk PRIMARY KEY (id);


--
-- Name: country country_code_pk; Type: CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.country
    ADD CONSTRAINT country_code_pk PRIMARY KEY (code);


--
-- Name: doc_type doc_type_id_pk; Type: CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.doc_type
    ADD CONSTRAINT doc_type_id_pk PRIMARY KEY (id);


--
-- Name: edu_doc_type_descrs edu_doc_type_descrs_pk; Type: CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.edu_doc_type_descrs
    ADD CONSTRAINT edu_doc_type_descrs_pk PRIMARY KEY (edu_doc_type_id, blob_id);


--
-- Name: edu_doc_type edu_doc_type_id_pk; Type: CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.edu_doc_type
    ADD CONSTRAINT edu_doc_type_id_pk PRIMARY KEY (id);


--
-- Name: edu_doc_type_linkages edu_doc_type_linkages_pk; Type: CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.edu_doc_type_linkages
    ADD CONSTRAINT edu_doc_type_linkages_pk PRIMARY KEY (edu_doc_type_id, blob_id);


--
-- Name: edu_doc_type_nat_heis edu_doc_type_nat_heis_pk; Type: CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.edu_doc_type_nat_heis
    ADD CONSTRAINT edu_doc_type_nat_heis_pk PRIMARY KEY (edu_doc_type_id, blob_id);


--
-- Name: edu_doc_type_views edu_doc_type_views_id_pk; Type: CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.edu_doc_type_views
    ADD CONSTRAINT edu_doc_type_views_id_pk PRIMARY KEY (id);


--
-- Name: eqf eqf_id_pk; Type: CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.eqf
    ADD CONSTRAINT eqf_id_pk PRIMARY KEY (id);


--
-- Name: isobaq_authority isobaq_authority_pk; Type: CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.isobaq_authority
    ADD CONSTRAINT isobaq_authority_pk PRIMARY KEY (isobaq_user_id, authority_name);


--
-- Name: isobaq_user isobaq_user_id_pk; Type: CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.isobaq_user
    ADD CONSTRAINT isobaq_user_id_pk PRIMARY KEY (id);


--
-- Name: isobaq_user isobaq_user_username_key; Type: CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.isobaq_user
    ADD CONSTRAINT isobaq_user_username_key UNIQUE (username);


--
-- Name: nqf nqf_id_pk; Type: CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.nqf
    ADD CONSTRAINT nqf_id_pk PRIMARY KEY (id);


--
-- Name: way_of_graduation way_of_graduation_id_pk; Type: CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.way_of_graduation
    ADD CONSTRAINT way_of_graduation_id_pk PRIMARY KEY (id);


--
-- Name: bg_academic_recognition_status bg_academic_rec_status_id_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.bg_academic_recognition_status
    ADD CONSTRAINT bg_academic_rec_status_id_pk PRIMARY KEY (id);


--
-- Name: bologna_cycle bologna_cycle_pkey; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.bologna_cycle
    ADD CONSTRAINT bologna_cycle_pkey PRIMARY KEY (id);


--
-- Name: doc_type_to_doc_category doc_type_to_doc_category_doc_type_id_doc_category_id_key; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.doc_type_to_doc_category
    ADD CONSTRAINT doc_type_to_doc_category_doc_type_id_doc_category_id_key UNIQUE (doc_type_id, doc_category_id);


--
-- Name: document_receive_method document_receive_method_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.document_receive_method
    ADD CONSTRAINT document_receive_method_pk PRIMARY KEY (id);


--
-- Name: european_qualifications_framework european_qualifications_framework_pkey; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.european_qualifications_framework
    ADD CONSTRAINT european_qualifications_framework_pkey PRIMARY KEY (id);


--
-- Name: event_type event_type_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.event_type
    ADD CONSTRAINT event_type_pk PRIMARY KEY (id);


--
-- Name: graduation_document_type graduation_document_type_pkey; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.graduation_document_type
    ADD CONSTRAINT graduation_document_type_pkey PRIMARY KEY (id);


--
-- Name: ekareas idxcode_ekareas; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.ekareas
    ADD CONSTRAINT idxcode_ekareas UNIQUE (code);


--
-- Name: ekdistricts idxcode_ekdistricts; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.ekdistricts
    ADD CONSTRAINT idxcode_ekdistricts UNIQUE (code);


--
-- Name: ekmunicipalities idxcode_ekmanicipalities; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.ekmunicipalities
    ADD CONSTRAINT idxcode_ekmanicipalities UNIQUE (code);


--
-- Name: ekmayoralties idxcode_ekmayoralties; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.ekmayoralties
    ADD CONSTRAINT idxcode_ekmayoralties UNIQUE (code);


--
-- Name: eksecondlevelregions idxcode_eksecondlevelregions; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.eksecondlevelregions
    ADD CONSTRAINT idxcode_eksecondlevelregions UNIQUE (code);


--
-- Name: eksettlements idxcode_eksettlement; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.eksettlements
    ADD CONSTRAINT idxcode_eksettlement UNIQUE (code);


--
-- Name: irregularities irregularities_pkey; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.irregularities
    ADD CONSTRAINT irregularities_pkey PRIMARY KEY (id);


--
-- Name: irregularity_service irregularity_service_pkey; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.irregularity_service
    ADD CONSTRAINT irregularity_service_pkey PRIMARY KEY (id);


--
-- Name: language language_iso639_code_key; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.language
    ADD CONSTRAINT language_iso639_code_key UNIQUE (iso639_code);


--
-- Name: language language_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.language
    ADD CONSTRAINT language_pk PRIMARY KEY (id);


--
-- Name: app_session_status n_app_session_status_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.app_session_status
    ADD CONSTRAINT n_app_session_status_pk PRIMARY KEY (id);


--
-- Name: app_status n_app_status_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.app_status
    ADD CONSTRAINT n_app_status_pk PRIMARY KEY (id);


--
-- Name: certificate_prof_qualification n_certificate_prof_qualification_pkey; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.certificate_prof_qualification
    ADD CONSTRAINT n_certificate_prof_qualification_pkey PRIMARY KEY (id);


--
-- Name: civil_id_type n_civil_id_type_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.civil_id_type
    ADD CONSTRAINT n_civil_id_type_pk PRIMARY KEY (id);


--
-- Name: commission_position n_commission_position_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.commission_position
    ADD CONSTRAINT n_commission_position_pk PRIMARY KEY (id);


--
-- Name: copy_types n_copy_types_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.copy_types
    ADD CONSTRAINT n_copy_types_pk PRIMARY KEY (id);


--
-- Name: country n_country_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.country
    ADD CONSTRAINT n_country_pk PRIMARY KEY (id);


--
-- Name: doc_category n_doc_category_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.doc_category
    ADD CONSTRAINT n_doc_category_pk PRIMARY KEY (id);


--
-- Name: doc_types n_doc_types_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.doc_types
    ADD CONSTRAINT n_doc_types_pk PRIMARY KEY (id);


--
-- Name: duration_unit n_duration_unit_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.duration_unit
    ADD CONSTRAINT n_duration_unit_pk PRIMARY KEY (id);


--
-- Name: edu_area n_edu_area_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.edu_area
    ADD CONSTRAINT n_edu_area_pk PRIMARY KEY (id);


--
-- Name: edu_level n_edu_level_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.edu_level
    ADD CONSTRAINT n_edu_level_pk PRIMARY KEY (id);


--
-- Name: education_document_type n_education_document_type_pkey; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.education_document_type
    ADD CONSTRAINT n_education_document_type_pkey PRIMARY KEY (id);


--
-- Name: education_type n_education_type_pkey; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.education_type
    ADD CONSTRAINT n_education_type_pkey PRIMARY KEY (id);


--
-- Name: event_status n_event_status_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.event_status
    ADD CONSTRAINT n_event_status_pk PRIMARY KEY (id);


--
-- Name: higher_speciality n_higher_edu_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.higher_speciality
    ADD CONSTRAINT n_higher_edu_pk PRIMARY KEY (id);


--
-- Name: higher_prof_qualification n_higher_edu_prof_qual_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.higher_prof_qualification
    ADD CONSTRAINT n_higher_edu_prof_qual_pk PRIMARY KEY (id);


--
-- Name: legal_reason n_legal_reason_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.legal_reason
    ADD CONSTRAINT n_legal_reason_pk PRIMARY KEY (id);


--
-- Name: original_qualification n_original_qualification_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.original_qualification
    ADD CONSTRAINT n_original_qualification_pk PRIMARY KEY (id);


--
-- Name: payment_type n_payment_type_pkey; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.payment_type
    ADD CONSTRAINT n_payment_type_pkey PRIMARY KEY (id);


--
-- Name: prof_group n_prof_group_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.prof_group
    ADD CONSTRAINT n_prof_group_pk PRIMARY KEY (id);


--
-- Name: profession_experience_document_type n_profession_experience_document_type_pkey; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.profession_experience_document_type
    ADD CONSTRAINT n_profession_experience_document_type_pkey PRIMARY KEY (id);


--
-- Name: profession_experience n_profession_experience_pkey; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.profession_experience
    ADD CONSTRAINT n_profession_experience_pkey PRIMARY KEY (id);


--
-- Name: profession n_profession_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.profession
    ADD CONSTRAINT n_profession_pk PRIMARY KEY (id);


--
-- Name: purpose_of_recognition n_purpose_of_recognition_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.purpose_of_recognition
    ADD CONSTRAINT n_purpose_of_recognition_pk PRIMARY KEY (id);


--
-- Name: qualification n_qualification_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.qualification
    ADD CONSTRAINT n_qualification_pk PRIMARY KEY (id);


--
-- Name: secondary_profession_group n_sec_edu_prof_group_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.secondary_profession_group
    ADD CONSTRAINT n_sec_edu_prof_group_pk PRIMARY KEY (id);


--
-- Name: secondary_prof_qualification n_sec_edu_prof_qual_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.secondary_prof_qualification
    ADD CONSTRAINT n_sec_edu_prof_qual_pk PRIMARY KEY (id);


--
-- Name: secondary_qualification_degree n_sec_edu_qual_degree_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.secondary_qualification_degree
    ADD CONSTRAINT n_sec_edu_qual_degree_pk PRIMARY KEY (id);


--
-- Name: secondary_caliber n_secondary_caliber_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.secondary_caliber
    ADD CONSTRAINT n_secondary_caliber_pk PRIMARY KEY (id);


--
-- Name: secondary_speciality n_secondary_edu_specialiy_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.secondary_speciality
    ADD CONSTRAINT n_secondary_edu_specialiy_pk PRIMARY KEY (id);


--
-- Name: session_status n_session_status_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.session_status
    ADD CONSTRAINT n_session_status_pk PRIMARY KEY (id);


--
-- Name: speciality n_speciality_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.speciality
    ADD CONSTRAINT n_speciality_pk PRIMARY KEY (id);


--
-- Name: training_form n_training_form_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.training_form
    ADD CONSTRAINT n_training_form_pk PRIMARY KEY (id);


--
-- Name: training_location n_training_location_pkey; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.training_location
    ADD CONSTRAINT n_training_location_pkey PRIMARY KEY (id);


--
-- Name: way_of_graduation n_way_of_graduation_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.way_of_graduation
    ADD CONSTRAINT n_way_of_graduation_pk PRIMARY KEY (id);


--
-- Name: national_qualifications_framework national_qualifications_framework_pkey; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.national_qualifications_framework
    ADD CONSTRAINT national_qualifications_framework_pkey PRIMARY KEY (id);


--
-- Name: age_range nom_age_range_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.age_range
    ADD CONSTRAINT nom_age_range_pk PRIMARY KEY (id);


--
-- Name: app_status_docflow nom_app_status_docflow_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.app_status_docflow
    ADD CONSTRAINT nom_app_status_docflow_pk PRIMARY KEY (id);


--
-- Name: expert_position nom_expert_position_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.expert_position
    ADD CONSTRAINT nom_expert_position_pk PRIMARY KEY (id);


--
-- Name: grade nom_grade_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.grade
    ADD CONSTRAINT nom_grade_pk PRIMARY KEY (id);


--
-- Name: personal_id_document_type nom_personal_id_document_type_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.personal_id_document_type
    ADD CONSTRAINT nom_personal_id_document_type_pk PRIMARY KEY (id);


--
-- Name: school_type nom_school_type_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.school_type
    ADD CONSTRAINT nom_school_type_pk PRIMARY KEY (id);


--
-- Name: original_edu_level original_edu_level_pkey; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.original_edu_level
    ADD CONSTRAINT original_edu_level_pkey PRIMARY KEY (id);


--
-- Name: original_speciality original_speciality_pkey; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.original_speciality
    ADD CONSTRAINT original_speciality_pkey PRIMARY KEY (id);


--
-- Name: graoareas pk_areas; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.graoareas
    ADD CONSTRAINT pk_areas PRIMARY KEY (id);


--
-- Name: graodistricts pk_districts; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.graodistricts
    ADD CONSTRAINT pk_districts PRIMARY KEY (id);


--
-- Name: ekareas pk_ekareas; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.ekareas
    ADD CONSTRAINT pk_ekareas PRIMARY KEY (id);


--
-- Name: ekdistricts pk_ekdistricts; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.ekdistricts
    ADD CONSTRAINT pk_ekdistricts PRIMARY KEY (id);


--
-- Name: ekmayoralties pk_ekmayoralties; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.ekmayoralties
    ADD CONSTRAINT pk_ekmayoralties PRIMARY KEY (id);


--
-- Name: ekmunicipalities pk_ekmunicipalities; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.ekmunicipalities
    ADD CONSTRAINT pk_ekmunicipalities PRIMARY KEY (id);


--
-- Name: eksecondlevelregions pk_eksecondlevelregions; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.eksecondlevelregions
    ADD CONSTRAINT pk_eksecondlevelregions PRIMARY KEY (id);


--
-- Name: eksettlements pk_eksettlements; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.eksettlements
    ADD CONSTRAINT pk_eksettlements PRIMARY KEY (id);


--
-- Name: graomunicipalities pk_municipalities; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.graomunicipalities
    ADD CONSTRAINT pk_municipalities PRIMARY KEY (id);


--
-- Name: graosettlements pk_settlements; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.graosettlements
    ADD CONSTRAINT pk_settlements PRIMARY KEY (id);


--
-- Name: professional_institution_type prof_inst_type_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.professional_institution_type
    ADD CONSTRAINT prof_inst_type_pk PRIMARY KEY (id);


--
-- Name: property properties_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.property
    ADD CONSTRAINT properties_pk PRIMARY KEY (id);


--
-- Name: regprof_app_status regprof_app_status_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.regprof_app_status
    ADD CONSTRAINT regprof_app_status_pk PRIMARY KEY (id);


--
-- Name: article_directive regprof_n_article_directive_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.article_directive
    ADD CONSTRAINT regprof_n_article_directive_pk PRIMARY KEY (id);


--
-- Name: article_item regprof_n_article_item_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.article_item
    ADD CONSTRAINT regprof_n_article_item_pk PRIMARY KEY (id);


--
-- Name: service_type regprof_n_service_type_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.service_type
    ADD CONSTRAINT regprof_n_service_type_pk PRIMARY KEY (id);


--
-- Name: university_details university_details_pkey; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.university_details
    ADD CONSTRAINT university_details_pkey PRIMARY KEY (id);


--
-- Name: university_generic_name university_generic_name_pk; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.university_generic_name
    ADD CONSTRAINT university_generic_name_pk PRIMARY KEY (id);


--
-- Name: way_of_graduation_to_app_type way_of_graduation_app_type_pkey; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.way_of_graduation_to_app_type
    ADD CONSTRAINT way_of_graduation_app_type_pkey PRIMARY KEY (id);


--
-- Name: way_of_graduation_to_app_type way_of_graduation_to_app_type_way_of_graduation_id_applicat_key; Type: CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.way_of_graduation_to_app_type
    ADD CONSTRAINT way_of_graduation_to_app_type_way_of_graduation_id_applicat_key UNIQUE (way_of_graduation_id, application_type);


--
-- Name: entry_num_series entry_num_series_pkey; Type: CONSTRAINT; Schema: numgenerator; Owner: postgres
--

ALTER TABLE ONLY numgenerator.entry_num_series
    ADD CONSTRAINT entry_num_series_pkey PRIMARY KEY (id);


--
-- Name: entry_nums entry_nums_pkey; Type: CONSTRAINT; Schema: numgenerator; Owner: postgres
--

ALTER TABLE ONLY numgenerator.entry_nums
    ADD CONSTRAINT entry_nums_pkey PRIMARY KEY (id);


--
-- Name: submission_types submission_types_pkey; Type: CONSTRAINT; Schema: numgenerator; Owner: postgres
--

ALTER TABLE ONLY numgenerator.submission_types
    ADD CONSTRAINT submission_types_pkey PRIMARY KEY (id);


--
-- Name: entry_num_egov_code entry_num_egov_code_pk; Type: CONSTRAINT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.entry_num_egov_code
    ADD CONSTRAINT entry_num_egov_code_pk PRIMARY KEY (id);


--
-- Name: epay_code epay_code_pk; Type: CONSTRAINT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.epay_code
    ADD CONSTRAINT epay_code_pk PRIMARY KEY (id);


--
-- Name: epay_merchant_configurations epay_merchant_configurations_pkey; Type: CONSTRAINT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.epay_merchant_configurations
    ADD CONSTRAINT epay_merchant_configurations_pkey PRIMARY KEY (id);


--
-- Name: epay_module_configurations epay_module_configurations_pkey; Type: CONSTRAINT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.epay_module_configurations
    ADD CONSTRAINT epay_module_configurations_pkey PRIMARY KEY (id);


--
-- Name: liabilities liab_pk; Type: CONSTRAINT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.liabilities
    ADD CONSTRAINT liab_pk PRIMARY KEY (id);


--
-- Name: liabilities liabilities_reference_number_ukey; Type: CONSTRAINT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.liabilities
    ADD CONSTRAINT liabilities_reference_number_ukey UNIQUE (reference_number);


--
-- Name: liability_code_to_module liability_code_to_module_pkey; Type: CONSTRAINT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.liability_code_to_module
    ADD CONSTRAINT liability_code_to_module_pkey PRIMARY KEY (module, liability_code);


--
-- Name: liability_details liability_details_pkey; Type: CONSTRAINT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.liability_details
    ADD CONSTRAINT liability_details_pkey PRIMARY KEY (id);


--
-- Name: liable_persons liable_persons_pkey; Type: CONSTRAINT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.liable_persons
    ADD CONSTRAINT liable_persons_pkey PRIMARY KEY (id);


--
-- Name: module_configurations module_configuration_module_uk; Type: CONSTRAINT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.module_configurations
    ADD CONSTRAINT module_configuration_module_uk UNIQUE (module);


--
-- Name: module_configurations module_configurations_pkey; Type: CONSTRAINT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.module_configurations
    ADD CONSTRAINT module_configurations_pkey PRIMARY KEY (id);


--
-- Name: modules modules_pkey; Type: CONSTRAINT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.modules
    ADD CONSTRAINT modules_pkey PRIMARY KEY (module);


--
-- Name: nom_liability_codes nom_liability_codes_pkey; Type: CONSTRAINT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.nom_liability_codes
    ADD CONSTRAINT nom_liability_codes_pkey PRIMARY KEY (liability_code);


--
-- Name: payments payments_pkey; Type: CONSTRAINT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.payments
    ADD CONSTRAINT payments_pkey PRIMARY KEY (id);


--
-- Name: payments payments_ref_number_key; Type: CONSTRAINT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.payments
    ADD CONSTRAINT payments_ref_number_key UNIQUE (ref_number, date_payment);


--
-- Name: ref_data rda_rvdomain_rvcode_uk; Type: CONSTRAINT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.ref_data
    ADD CONSTRAINT rda_rvdomain_rvcode_uk UNIQUE (rv_code, rv_domain);


--
-- Name: ref_data rda_rvdomain_rvindex_uk; Type: CONSTRAINT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.ref_data
    ADD CONSTRAINT rda_rvdomain_rvindex_uk UNIQUE (rv_index, rv_domain);


--
-- Name: ref_data ref_data_pkey; Type: CONSTRAINT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.ref_data
    ADD CONSTRAINT ref_data_pkey PRIMARY KEY (rv_domain, rv_code);


--
-- Name: request_log request_log_pkey; Type: CONSTRAINT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.request_log
    ADD CONSTRAINT request_log_pkey PRIMARY KEY (id);


--
-- Name: poll_answers poll_answers_pkey; Type: CONSTRAINT; Schema: poll; Owner: postgres
--

ALTER TABLE ONLY poll.poll_answers
    ADD CONSTRAINT poll_answers_pkey PRIMARY KEY (id);


--
-- Name: ref_data rda_rvdomain_rvcode_uk; Type: CONSTRAINT; Schema: poll; Owner: postgres
--

ALTER TABLE ONLY poll.ref_data
    ADD CONSTRAINT rda_rvdomain_rvcode_uk UNIQUE (rv_code, rv_domain);


--
-- Name: ref_data rda_rvdomain_rvindex_uk; Type: CONSTRAINT; Schema: poll; Owner: postgres
--

ALTER TABLE ONLY poll.ref_data
    ADD CONSTRAINT rda_rvdomain_rvindex_uk UNIQUE (rv_index, rv_domain);


--
-- Name: ref_data ref_data_pkey; Type: CONSTRAINT; Schema: poll; Owner: postgres
--

ALTER TABLE ONLY poll.ref_data
    ADD CONSTRAINT ref_data_pkey PRIMARY KEY (rv_domain, rv_code);


--
-- Name: application_changes_history app_changes_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application_changes_history
    ADD CONSTRAINT app_changes_pk PRIMARY KEY (id);


--
-- Name: app_status_doc_type app_status_doc_type_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.app_status_doc_type
    ADD CONSTRAINT app_status_doc_type_pkey PRIMARY KEY (id);


--
-- Name: app_status_history app_status_history_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.app_status_history
    ADD CONSTRAINT app_status_history_pkey PRIMARY KEY (id);


--
-- Name: application_expert application_expert_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application_expert
    ADD CONSTRAINT application_expert_pk PRIMARY KEY (id);


--
-- Name: application_expert_specialities application_expert_specialiti_application_id_expert_id_spec_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application_expert_specialities
    ADD CONSTRAINT application_expert_specialiti_application_id_expert_id_spec_key UNIQUE (application_id, expert_id, speciality_id);


--
-- Name: application_expert_specialities application_expert_specialities_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application_expert_specialities
    ADD CONSTRAINT application_expert_specialities_pkey PRIMARY KEY (id);


--
-- Name: application_kind application_kind_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application_kind
    ADD CONSTRAINT application_kind_pk PRIMARY KEY (id);


--
-- Name: application application_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application
    ADD CONSTRAINT application_pkey PRIMARY KEY (id);


--
-- Name: attached_docs attached_docs_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.attached_docs
    ADD CONSTRAINT attached_docs_pkey PRIMARY KEY (id);


--
-- Name: available_training_forms available_training_forms_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.available_training_forms
    ADD CONSTRAINT available_training_forms_pk PRIMARY KEY (id);


--
-- Name: bg_academic_recognition_file_log bg_academic_recognition_file_log_id_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.bg_academic_recognition_file_log
    ADD CONSTRAINT bg_academic_recognition_file_log_id_pk PRIMARY KEY (id);


--
-- Name: bg_academic_recognition_info bg_academic_recognition_info_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.bg_academic_recognition_info
    ADD CONSTRAINT bg_academic_recognition_info_pkey PRIMARY KEY (id);


--
-- Name: cert_number_to_attached_doc cert_number_to_attached_doc_attached_doc_id_application_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cert_number_to_attached_doc
    ADD CONSTRAINT cert_number_to_attached_doc_attached_doc_id_application_id_key UNIQUE (attached_doc_id, application_id);


--
-- Name: cert_number_to_attached_doc cert_number_to_attached_doc_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cert_number_to_attached_doc
    ADD CONSTRAINT cert_number_to_attached_doc_pkey PRIMARY KEY (id);


--
-- Name: comission_agenda comission_agenda_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comission_agenda
    ADD CONSTRAINT comission_agenda_pkey PRIMARY KEY (id);


--
-- Name: comission_calendar comission_calendar_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comission_calendar
    ADD CONSTRAINT comission_calendar_pk PRIMARY KEY (id);


--
-- Name: comission_member comission_member_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comission_member
    ADD CONSTRAINT comission_member_pkey PRIMARY KEY (id);


--
-- Name: comission_participation comission_participation_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comission_participation
    ADD CONSTRAINT comission_participation_pkey PRIMARY KEY (id);


--
-- Name: common_vars common_vars_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.common_vars
    ADD CONSTRAINT common_vars_pkey PRIMARY KEY (id);


--
-- Name: common_vars common_vars_var_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.common_vars
    ADD CONSTRAINT common_vars_var_name_key UNIQUE (var_name);


--
-- Name: competent_institution competent_institution_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.competent_institution
    ADD CONSTRAINT competent_institution_pk PRIMARY KEY (id);


--
-- Name: dipl_exam_attached_docs dipl_exam_attached_docs_bak_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dipl_exam_attached_docs
    ADD CONSTRAINT dipl_exam_attached_docs_bak_pkey PRIMARY KEY (id);


--
-- Name: diploma_examination diploma_examination_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.diploma_examination
    ADD CONSTRAINT diploma_examination_pk PRIMARY KEY (id);


--
-- Name: diploma_issuer diploma_issuer_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.diploma_issuer
    ADD CONSTRAINT diploma_issuer_pk PRIMARY KEY (diploma_id, university_id);


--
-- Name: diploma_type_attached_docs diploma_type_attached_docs_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.diploma_type_attached_docs
    ADD CONSTRAINT diploma_type_attached_docs_pkey PRIMARY KEY (id);


--
-- Name: diploma_type_issuer diploma_type_issuer_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.diploma_type_issuer
    ADD CONSTRAINT diploma_type_issuer_pkey PRIMARY KEY (id);


--
-- Name: diploma_type diploma_type_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.diploma_type
    ADD CONSTRAINT diploma_type_pk PRIMARY KEY (id);


--
-- Name: document_recipient document_recipient_application_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.document_recipient
    ADD CONSTRAINT document_recipient_application_id_key UNIQUE (application_id);


--
-- Name: document_recipient document_recipient_id_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.document_recipient
    ADD CONSTRAINT document_recipient_id_pk PRIMARY KEY (id);


--
-- Name: email email_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.email
    ADD CONSTRAINT email_pkey PRIMARY KEY (id);


--
-- Name: epay_messages epay_messages_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.epay_messages
    ADD CONSTRAINT epay_messages_pkey PRIMARY KEY (id);


--
-- Name: epay_payment_details epay_payment_details_ref_number_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.epay_payment_details
    ADD CONSTRAINT epay_payment_details_ref_number_key UNIQUE (ref_number);


--
-- Name: event event_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.event
    ADD CONSTRAINT event_pk PRIMARY KEY (id);


--
-- Name: expert_statement expert_statement_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.expert_statement
    ADD CONSTRAINT expert_statement_pk PRIMARY KEY (id);


--
-- Name: epay_payment_details ext_epay_pmt_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.epay_payment_details
    ADD CONSTRAINT ext_epay_pmt_pk PRIMARY KEY (id);


--
-- Name: liabilities ext_liab_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.liabilities
    ADD CONSTRAINT ext_liab_pk PRIMARY KEY (id);


--
-- Name: ext_menu ext_menu_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ext_menu
    ADD CONSTRAINT ext_menu_pkey PRIMARY KEY (id);


--
-- Name: users_sys_log_operations id; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_sys_log_operations
    ADD CONSTRAINT id PRIMARY KEY (record_id);


--
-- Name: menu menu_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.menu
    ADD CONSTRAINT menu_pkey PRIMARY KEY (id);


--
-- Name: esoed_messages msg_mee_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.esoed_messages
    ADD CONSTRAINT msg_mee_pk PRIMARY KEY (id);


--
-- Name: person_document pers_doc_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.person_document
    ADD CONSTRAINT pers_doc_pk PRIMARY KEY (id);


--
-- Name: person person_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.person
    ADD CONSTRAINT person_pkey PRIMARY KEY (id);


--
-- Name: users_group_membership pk_user_group_membership; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_group_membership
    ADD CONSTRAINT pk_user_group_membership PRIMARY KEY (record_id);


--
-- Name: users_sys_log pk_users_sys_log; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_sys_log
    ADD CONSTRAINT pk_users_sys_log PRIMARY KEY (record_id);


--
-- Name: portal_users portal_users_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.portal_users
    ADD CONSTRAINT portal_users_pkey PRIMARY KEY (userid);


--
-- Name: purpose_of_recognition purpose_of_recognition_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.purpose_of_recognition
    ADD CONSTRAINT purpose_of_recognition_pk PRIMARY KEY (id);


--
-- Name: recognized_specs recognized_specs_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recognized_specs
    ADD CONSTRAINT recognized_specs_pkey PRIMARY KEY (id);


--
-- Name: sources_of_information sources_of_information_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sources_of_information
    ADD CONSTRAINT sources_of_information_pk PRIMARY KEY (id);


--
-- Name: training_course_institution training_course_institution_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_course_institution
    ADD CONSTRAINT training_course_institution_pkey PRIMARY KEY (id);


--
-- Name: training_course training_course_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_course
    ADD CONSTRAINT training_course_pk PRIMARY KEY (id);


--
-- Name: training_course_specialities training_course_specialities_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_course_specialities
    ADD CONSTRAINT training_course_specialities_pkey PRIMARY KEY (id);


--
-- Name: training_form training_form_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_form
    ADD CONSTRAINT training_form_pk PRIMARY KEY (id);


--
-- Name: training_institution training_institution_name_country_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_institution
    ADD CONSTRAINT training_institution_name_country_id_key UNIQUE (name, country_id);


--
-- Name: training_institution training_institution_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_institution
    ADD CONSTRAINT training_institution_pkey PRIMARY KEY (id);


--
-- Name: training_location training_location_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_location
    ADD CONSTRAINT training_location_pkey PRIMARY KEY (id);


--
-- Name: uni_exam_attached_docs uni_exam_attached_docs_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.uni_exam_attached_docs
    ADD CONSTRAINT uni_exam_attached_docs_pk PRIMARY KEY (id);


--
-- Name: university_examination university_examination_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.university_examination
    ADD CONSTRAINT university_examination_pk PRIMARY KEY (id);


--
-- Name: university_faculty university_faculty_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.university_faculty
    ADD CONSTRAINT university_faculty_pkey PRIMARY KEY (id);


--
-- Name: university_id university_id_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.university_id
    ADD CONSTRAINT university_id_pkey PRIMARY KEY (id);


--
-- Name: university university_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.university
    ADD CONSTRAINT university_pk PRIMARY KEY (id);


--
-- Name: university_validity university_validity_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.university_validity
    ADD CONSTRAINT university_validity_pk PRIMARY KEY (id);


--
-- Name: users user_id_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT user_id_pkey PRIMARY KEY (id);


--
-- Name: users username; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT username UNIQUE (username);


--
-- Name: user_addr usr_addr_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_addr
    ADD CONSTRAINT usr_addr_pkey PRIMARY KEY (id);


--
-- Name: way_of_graduation way_of_graduation_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.way_of_graduation
    ADD CONSTRAINT way_of_graduation_pk PRIMARY KEY (id);


--
-- Name: app_status_history app_stat_hist_pk; Type: CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.app_status_history
    ADD CONSTRAINT app_stat_hist_pk PRIMARY KEY (id);


--
-- Name: app_status_doc_type app_status_doc_type_pkey; Type: CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.app_status_doc_type
    ADD CONSTRAINT app_status_doc_type_pkey PRIMARY KEY (id);


--
-- Name: cert_number_to_attached_doc cert_number_to_attached_doc_attached_doc_id_application_id_key; Type: CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.cert_number_to_attached_doc
    ADD CONSTRAINT cert_number_to_attached_doc_attached_doc_id_application_id_key UNIQUE (attached_doc_id, application_id);


--
-- Name: cert_number_to_attached_doc cert_number_to_attached_doc_id_pk; Type: CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.cert_number_to_attached_doc
    ADD CONSTRAINT cert_number_to_attached_doc_id_pk PRIMARY KEY (id);


--
-- Name: education_type_to_institution_type education_type_to_institution_type_pkey; Type: CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.education_type_to_institution_type
    ADD CONSTRAINT education_type_to_institution_type_pkey PRIMARY KEY (id);


--
-- Name: professional_institution_validity institution_validity_pkey; Type: CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.professional_institution_validity
    ADD CONSTRAINT institution_validity_pkey PRIMARY KEY (id);


--
-- Name: professional_institution prof_inst_pk; Type: CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.professional_institution
    ADD CONSTRAINT prof_inst_pk PRIMARY KEY (id);


--
-- Name: prof_qualification_examination prof_qualification_examination_id_pk; Type: CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.prof_qualification_examination
    ADD CONSTRAINT prof_qualification_examination_id_pk PRIMARY KEY (id);


--
-- Name: profession_experience_dates profession_experience_dates_pkey; Type: CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.profession_experience_dates
    ADD CONSTRAINT profession_experience_dates_pkey PRIMARY KEY (id);


--
-- Name: profession_experience_documents profession_experience_documents_pkey; Type: CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.profession_experience_documents
    ADD CONSTRAINT profession_experience_documents_pkey PRIMARY KEY (id);


--
-- Name: profession_experience_exam_attached_docs profession_experience_exam_attached_docs_pkey; Type: CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.profession_experience_exam_attached_docs
    ADD CONSTRAINT profession_experience_exam_attached_docs_pkey PRIMARY KEY (id);


--
-- Name: profession_experience_examination profession_experience_examination_pkey; Type: CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.profession_experience_examination
    ADD CONSTRAINT profession_experience_examination_pkey PRIMARY KEY (id);


--
-- Name: profession_experience profession_experience_pkey; Type: CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.profession_experience
    ADD CONSTRAINT profession_experience_pkey PRIMARY KEY (id);


--
-- Name: profession_experience profession_experience_training_course_id_key; Type: CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.profession_experience
    ADD CONSTRAINT profession_experience_training_course_id_key UNIQUE (training_course_id);


--
-- Name: professional_institution_examination professional_institution_examination_pkey; Type: CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.professional_institution_examination
    ADD CONSTRAINT professional_institution_examination_pkey PRIMARY KEY (id);


--
-- Name: professional_institution_names professional_institution_names_pkey; Type: CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.professional_institution_names
    ADD CONSTRAINT professional_institution_names_pkey PRIMARY KEY (id);


--
-- Name: professional_institution_names professional_institution_names_professional_institution_id_key; Type: CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.professional_institution_names
    ADD CONSTRAINT professional_institution_names_professional_institution_id_key UNIQUE (professional_institution_id, former_name);


--
-- Name: app_status_docflow_history regprof_app_status_docflow_history_pkey; Type: CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.app_status_docflow_history
    ADD CONSTRAINT regprof_app_status_docflow_history_pkey PRIMARY KEY (id);


--
-- Name: regprof_application regprof_appl_pk; Type: CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regprof_application
    ADD CONSTRAINT regprof_appl_pk PRIMARY KEY (id);


--
-- Name: regprof_attached_docs regprof_attached_docs_pkey; Type: CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regprof_attached_docs
    ADD CONSTRAINT regprof_attached_docs_pkey PRIMARY KEY (id);


--
-- Name: doc_exam_attached_docs regprof_dipl_exam_attch_docs_id_pk; Type: CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.doc_exam_attached_docs
    ADD CONSTRAINT regprof_dipl_exam_attch_docs_id_pk PRIMARY KEY (id);


--
-- Name: document_examination regprof_diploma_examination_id_pk; Type: CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.document_examination
    ADD CONSTRAINT regprof_diploma_examination_id_pk PRIMARY KEY (id);


--
-- Name: regprof_document_recipient regprof_document_recipient_application_id_key; Type: CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regprof_document_recipient
    ADD CONSTRAINT regprof_document_recipient_application_id_key UNIQUE (application_id);


--
-- Name: regprof_document_recipient regprof_document_recipient_id_pk; Type: CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regprof_document_recipient
    ADD CONSTRAINT regprof_document_recipient_id_pk PRIMARY KEY (id);


--
-- Name: responsible_users regprof_responsible_users_id_pk; Type: CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.responsible_users
    ADD CONSTRAINT regprof_responsible_users_id_pk PRIMARY KEY (id);


--
-- Name: regulated_examination regulated_exam_id_pk; Type: CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regulated_examination
    ADD CONSTRAINT regulated_exam_id_pk PRIMARY KEY (id);


--
-- Name: regulated_validity regulated_validity_id_pk; Type: CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regulated_validity
    ADD CONSTRAINT regulated_validity_id_pk PRIMARY KEY (id);


--
-- Name: training_course training_course_pk; Type: CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.training_course
    ADD CONSTRAINT training_course_pk PRIMARY KEY (id);


--
-- Name: training_course_specialities training_course_specialities_pkey; Type: CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.training_course_specialities
    ADD CONSTRAINT training_course_specialities_pkey PRIMARY KEY (id);


--
-- Name: app_status_docflow_entry_num_series_entry_num_series_id_idx; Type: INDEX; Schema: backoffice; Owner: postgres
--

CREATE INDEX app_status_docflow_entry_num_series_entry_num_series_id_idx ON backoffice.app_status_docflow_entry_num_series USING btree (entry_num_series_id);


--
-- Name: app_status_docflow_history_app_status_docflow_id_idx; Type: INDEX; Schema: backoffice; Owner: postgres
--

CREATE INDEX app_status_docflow_history_app_status_docflow_id_idx ON backoffice.app_status_docflow_history USING btree (app_status_docflow_id);


--
-- Name: app_status_entry_num_series_entry_num_series_id_idx; Type: INDEX; Schema: backoffice; Owner: postgres
--

CREATE INDEX app_status_entry_num_series_entry_num_series_id_idx ON backoffice.app_status_entry_num_series USING btree (entry_num_series_id);


--
-- Name: auto_app_status_docflow_history_application_id_idx; Type: INDEX; Schema: backoffice; Owner: postgres
--

CREATE INDEX auto_app_status_docflow_history_application_id_idx ON backoffice.app_status_docflow_history USING btree (application_id);


--
-- Name: fki_address_country_FK; Type: INDEX; Schema: backoffice; Owner: postgres
--

CREATE INDEX "fki_address_country_FK" ON backoffice.address USING btree (country_id);


--
-- Name: fki_person_address_id; Type: INDEX; Schema: backoffice; Owner: postgres
--

CREATE INDEX fki_person_address_id ON backoffice.person USING btree (address_id);


--
-- Name: application_training_course_id_idx; Type: INDEX; Schema: eservices; Owner: postgres
--

CREATE INDEX application_training_course_id_idx ON eservices.application USING btree (training_course_id);


--
-- Name: ext_apn_apt_idx; Type: INDEX; Schema: eservices; Owner: postgres
--

CREATE INDEX ext_apn_apt_idx ON eservices.rudi_application USING btree (applicant_id);


--
-- Name: ext_apn_ree_idx; Type: INDEX; Schema: eservices; Owner: postgres
--

CREATE INDEX ext_apn_ree_idx ON eservices.rudi_application USING btree (representative_id);


--
-- Name: extrp_apn_apn_idx; Type: INDEX; Schema: eservices; Owner: postgres
--

CREATE INDEX extrp_apn_apn_idx ON eservices.regprof_application USING btree (regprof_application_id);


--
-- Name: extrp_apn_apt_idx; Type: INDEX; Schema: eservices; Owner: postgres
--

CREATE INDEX extrp_apn_apt_idx ON eservices.regprof_application USING btree (applicant_id);


--
-- Name: extrp_apn_ree_idx; Type: INDEX; Schema: eservices; Owner: postgres
--

CREATE INDEX extrp_apn_ree_idx ON eservices.regprof_application USING btree (representative_id);


--
-- Name: extrp_apn_tce_idx; Type: INDEX; Schema: eservices; Owner: postgres
--

CREATE INDEX extrp_apn_tce_idx ON eservices.regprof_application USING btree (training_course_id);


--
-- Name: fki_address_country_FK; Type: INDEX; Schema: eservices; Owner: postgres
--

CREATE INDEX "fki_address_country_FK" ON eservices.address USING btree (country_id);


--
-- Name: fki_company_settlement_id; Type: INDEX; Schema: eservices; Owner: postgres
--

CREATE INDEX fki_company_settlement_id ON eservices.company USING btree (settlement_id);


--
-- Name: fki_di_faculty_fk; Type: INDEX; Schema: eservices; Owner: postgres
--

CREATE INDEX fki_di_faculty_fk ON eservices.rudi_diploma_issuer USING btree (faculty_id);


--
-- Name: fki_ext_training_course_prev_diploma_speciality; Type: INDEX; Schema: eservices; Owner: postgres
--

CREATE INDEX fki_ext_training_course_prev_diploma_speciality ON eservices.rudi_training_course USING btree (prev_diploma_speciality_id);


--
-- Name: fki_rudi_application_kind_entry_num_series_fk; Type: INDEX; Schema: eservices; Owner: postgres
--

CREATE INDEX fki_rudi_application_kind_entry_num_series_fk ON eservices.rudi_application_kind USING btree (entry_num_series_id);


--
-- Name: fki_tc_prof_group_fk; Type: INDEX; Schema: eservices; Owner: postgres
--

CREATE INDEX fki_tc_prof_group_fk ON eservices.rudi_training_course USING btree (prof_group_id);


--
-- Name: idx_internal_application_id; Type: INDEX; Schema: eservices; Owner: postgres
--

CREATE INDEX idx_internal_application_id ON eservices.rudi_application USING btree (application_id);


--
-- Name: idx_internal_rudi_application_id; Type: INDEX; Schema: eservices; Owner: postgres
--

CREATE INDEX idx_internal_rudi_application_id ON eservices.rudi_application_kind USING btree (application_id);


--
-- Name: person_citizenship_id_idx; Type: INDEX; Schema: eservices; Owner: postgres
--

CREATE INDEX person_citizenship_id_idx ON eservices.person USING btree (citizenship_id);


--
-- Name: recommendation_training_course_training_course_id_idx; Type: INDEX; Schema: eservices; Owner: postgres
--

CREATE INDEX recommendation_training_course_training_course_id_idx ON eservices.recommendation_training_course USING btree (training_course_id);


--
-- Name: regprof_application_comments_application_id_idx; Type: INDEX; Schema: eservices; Owner: postgres
--

CREATE INDEX regprof_application_comments_application_id_idx ON eservices.regprof_application_comments USING btree (application_id);


--
-- Name: regprof_training_course_specialities_training_course_id_idx; Type: INDEX; Schema: eservices; Owner: postgres
--

CREATE INDEX regprof_training_course_specialities_training_course_id_idx ON eservices.regprof_training_course_specialities USING btree (training_course_id);


--
-- Name: rudi_application_comments_application_id_idx; Type: INDEX; Schema: eservices; Owner: postgres
--

CREATE INDEX rudi_application_comments_application_id_idx ON eservices.rudi_application_comments USING btree (application_id);


--
-- Name: rudi_application_training_course_id_idx; Type: INDEX; Schema: eservices; Owner: postgres
--

CREATE INDEX rudi_application_training_course_id_idx ON eservices.rudi_application USING btree (training_course_id);


--
-- Name: rudi_signed_docs_ext_app_id_idx; Type: INDEX; Schema: eservices; Owner: postgres
--

CREATE INDEX rudi_signed_docs_ext_app_id_idx ON eservices.rudi_signed_docs USING btree (ext_app_id);


--
-- Name: rudi_training_form_training_course_id_idx; Type: INDEX; Schema: eservices; Owner: postgres
--

CREATE INDEX rudi_training_form_training_course_id_idx ON eservices.rudi_training_form USING btree (training_course_id);


--
-- Name: rudi_training_location_training_course_id_idx; Type: INDEX; Schema: eservices; Owner: postgres
--

CREATE INDEX rudi_training_location_training_course_id_idx ON eservices.rudi_training_location USING btree (training_course_id);


--
-- Name: rudi_way_of_graduation_training_course_id_idx; Type: INDEX; Schema: eservices; Owner: postgres
--

CREATE INDEX rudi_way_of_graduation_training_course_id_idx ON eservices.rudi_way_of_graduation USING btree (training_course_id);


--
-- Name: article_item_article_directive_id_idx; Type: INDEX; Schema: nomenclatures; Owner: postgres
--

CREATE INDEX article_item_article_directive_id_idx ON nomenclatures.article_item USING btree (article_directive_id);


--
-- Name: dtdc_doc_category_id_idx; Type: INDEX; Schema: nomenclatures; Owner: postgres
--

CREATE INDEX dtdc_doc_category_id_idx ON nomenclatures.doc_type_to_doc_category USING btree (doc_category_id);


--
-- Name: dtdc_doc_type_id_idx; Type: INDEX; Schema: nomenclatures; Owner: postgres
--

CREATE INDEX dtdc_doc_type_id_idx ON nomenclatures.doc_type_to_doc_category USING btree (doc_type_id);


--
-- Name: edu_level_to_app_type_edu_level_id_idx; Type: INDEX; Schema: nomenclatures; Owner: postgres
--

CREATE INDEX edu_level_to_app_type_edu_level_id_idx ON nomenclatures.edu_level_to_app_type USING btree (edu_level_id);


--
-- Name: expert_position_related_app_status_id_idx; Type: INDEX; Schema: nomenclatures; Owner: postgres
--

CREATE INDEX expert_position_related_app_status_id_idx ON nomenclatures.expert_position USING btree (related_app_status_id);


--
-- Name: idx_pk_n_country; Type: INDEX; Schema: nomenclatures; Owner: postgres
--

CREATE INDEX idx_pk_n_country ON nomenclatures.country USING btree (id);


--
-- Name: idx_pk_n_prof_group; Type: INDEX; Schema: nomenclatures; Owner: postgres
--

CREATE INDEX idx_pk_n_prof_group ON nomenclatures.prof_group USING btree (id);


--
-- Name: idx_pk_n_qualification; Type: INDEX; Schema: nomenclatures; Owner: postgres
--

CREATE INDEX idx_pk_n_qualification ON nomenclatures.qualification USING btree (id);


--
-- Name: idx_pk_n_speciality; Type: INDEX; Schema: nomenclatures; Owner: postgres
--

CREATE INDEX idx_pk_n_speciality ON nomenclatures.speciality USING btree (id);


--
-- Name: irregularity_service_entry_num_series_idx; Type: INDEX; Schema: nomenclatures; Owner: postgres
--

CREATE INDEX irregularity_service_entry_num_series_idx ON nomenclatures.irregularity_service USING btree (entry_num_series);


--
-- Name: irregularity_service_irregularity_id_idx; Type: INDEX; Schema: nomenclatures; Owner: postgres
--

CREATE INDEX irregularity_service_irregularity_id_idx ON nomenclatures.irregularity_service USING btree (irregularity_id);


--
-- Name: legal_reason_to_app_type_legal_reason_id_idx; Type: INDEX; Schema: nomenclatures; Owner: postgres
--

CREATE INDEX legal_reason_to_app_type_legal_reason_id_idx ON nomenclatures.legal_reason_to_app_type USING btree (legal_reason_id);


--
-- Name: national_qualifications_framework_country_id_idx; Type: INDEX; Schema: nomenclatures; Owner: postgres
--

CREATE INDEX national_qualifications_framework_country_id_idx ON nomenclatures.national_qualifications_framework USING btree (country_id);


--
-- Name: original_edu_level_country_id_idx; Type: INDEX; Schema: nomenclatures; Owner: postgres
--

CREATE INDEX original_edu_level_country_id_idx ON nomenclatures.original_edu_level USING btree (country_id);


--
-- Name: original_edu_level_edu_level_id_idx; Type: INDEX; Schema: nomenclatures; Owner: postgres
--

CREATE INDEX original_edu_level_edu_level_id_idx ON nomenclatures.original_edu_level USING btree (edu_level_id);


--
-- Name: prof_group_edu_area_id_idx; Type: INDEX; Schema: nomenclatures; Owner: postgres
--

CREATE INDEX prof_group_edu_area_id_idx ON nomenclatures.prof_group USING btree (edu_area_id);


--
-- Name: secondary_prof_qualification_profession_group_id_idx; Type: INDEX; Schema: nomenclatures; Owner: postgres
--

CREATE INDEX secondary_prof_qualification_profession_group_id_idx ON nomenclatures.secondary_prof_qualification USING btree (profession_group_id);


--
-- Name: secondary_speciality_prof_qualification_id_idx; Type: INDEX; Schema: nomenclatures; Owner: postgres
--

CREATE INDEX secondary_speciality_prof_qualification_id_idx ON nomenclatures.secondary_speciality USING btree (prof_qualification_id);


--
-- Name: secondary_speciality_qualification_degree_id_idx; Type: INDEX; Schema: nomenclatures; Owner: postgres
--

CREATE INDEX secondary_speciality_qualification_degree_id_idx ON nomenclatures.secondary_speciality USING btree (qualification_degree_id);


--
-- Name: speciality_prof_group_id_idx; Type: INDEX; Schema: nomenclatures; Owner: postgres
--

CREATE INDEX speciality_prof_group_id_idx ON nomenclatures.speciality USING btree (prof_group_id);


--
-- Name: entry_nums_series_id_idx; Type: INDEX; Schema: numgenerator; Owner: postgres
--

CREATE INDEX entry_nums_series_id_idx ON numgenerator.entry_nums USING btree (series_id);


--
-- Name: entry_nums_submission_type_idx; Type: INDEX; Schema: numgenerator; Owner: postgres
--

CREATE INDEX entry_nums_submission_type_idx ON numgenerator.entry_nums USING btree (submission_type);


--
-- Name: epay_module_configurations_epay_merchant_config_id_idx; Type: INDEX; Schema: payments; Owner: postgres
--

CREATE INDEX epay_module_configurations_epay_merchant_config_id_idx ON payments.epay_module_configurations USING btree (epay_merchant_config_id);


--
-- Name: fki_epay_code_liabilities_fk; Type: INDEX; Schema: payments; Owner: postgres
--

CREATE INDEX fki_epay_code_liabilities_fk ON payments.epay_code USING btree (liability_id);


--
-- Name: liabilities_module_idx; Type: INDEX; Schema: payments; Owner: postgres
--

CREATE INDEX liabilities_module_idx ON payments.liabilities USING btree (module);


--
-- Name: liability_code_to_module_liability_code_idx; Type: INDEX; Schema: payments; Owner: postgres
--

CREATE INDEX liability_code_to_module_liability_code_idx ON payments.liability_code_to_module USING btree (liability_code);


--
-- Name: liability_details_liability_code_idx; Type: INDEX; Schema: payments; Owner: postgres
--

CREATE INDEX liability_details_liability_code_idx ON payments.liability_details USING btree (liability_code);


--
-- Name: liability_details_reference_number_idx; Type: INDEX; Schema: payments; Owner: postgres
--

CREATE INDEX liability_details_reference_number_idx ON payments.liability_details USING btree (reference_number);


--
-- Name: liability_reference_number_idx; Type: INDEX; Schema: payments; Owner: postgres
--

CREATE INDEX liability_reference_number_idx ON payments.liabilities USING btree (reference_number);


--
-- Name: mcn_module_idx; Type: INDEX; Schema: payments; Owner: postgres
--

CREATE INDEX mcn_module_idx ON payments.module_configurations USING btree (module);


--
-- Name: nom_liability_codes_liability_code_idx; Type: INDEX; Schema: payments; Owner: postgres
--

CREATE INDEX nom_liability_codes_liability_code_idx ON payments.nom_liability_codes USING btree (liability_code);


--
-- Name: payments_ref_number_idx; Type: INDEX; Schema: payments; Owner: postgres
--

CREATE INDEX payments_ref_number_idx ON payments.payments USING btree (ref_number);


--
-- Name: rda_pk; Type: INDEX; Schema: payments; Owner: postgres
--

CREATE UNIQUE INDEX rda_pk ON payments.ref_data USING btree (rv_domain, rv_code);


--
-- Name: app_stat_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX app_stat_idx ON public.app_status_history USING btree (application_id, date_assigned, id);


--
-- Name: app_status_history_session_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX app_status_history_session_id_idx ON public.app_status_history USING btree (session_id);


--
-- Name: app_status_history_stat_legal_reason_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX app_status_history_stat_legal_reason_id_idx ON public.app_status_history USING btree (stat_legal_reason_id);


--
-- Name: application_app_date_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX application_app_date_idx ON public.application USING btree (app_date);


--
-- Name: application_applicant_company_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX application_applicant_company_id_idx ON public.application USING btree (applicant_company_id);


--
-- Name: application_applicant_personal_id_document_type_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX application_applicant_personal_id_document_type_idx ON public.application USING btree (applicant_personal_id_document_type);


--
-- Name: application_applicant_type_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX application_applicant_type_idx ON public.application USING btree (applicant_type);


--
-- Name: application_application_type_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX application_application_type_idx ON public.application USING btree (application_type);


--
-- Name: application_changes_history_application_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX application_changes_history_application_id_idx ON public.application_changes_history USING btree (application_id);


--
-- Name: application_created_by_user_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX application_created_by_user_id_idx ON public.application USING btree (created_by_user_id);


--
-- Name: application_document_receive_method_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX application_document_receive_method_id_idx ON public.application USING btree (document_receive_method_id);


--
-- Name: application_expert_specialities_expert_id_fkey_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX application_expert_specialities_expert_id_fkey_idx ON public.application_expert_specialities USING btree (expert_id);


--
-- Name: application_final_status_history_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX application_final_status_history_id_idx ON public.application USING btree (final_status_history_id);


--
-- Name: application_kind_application_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX application_kind_application_id_idx ON public.application_kind USING btree (application_id);


--
-- Name: application_kind_entry_num_series_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX application_kind_entry_num_series_idx ON public.application_kind USING btree (entry_num_series_id);


--
-- Name: application_kind_final_status_history_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX application_kind_final_status_history_id_idx ON public.application_kind USING btree (final_status_history_id);


--
-- Name: application_training_course_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX application_training_course_id_idx ON public.application USING btree (training_course_id);


--
-- Name: attached_docs_document_type_fk; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX attached_docs_document_type_fk ON public.attached_docs USING btree (doc_type_id);


--
-- Name: attached_docs_parent_id_fk; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX attached_docs_parent_id_fk ON public.attached_docs USING btree (parent_id);


--
-- Name: auto_application_expert_specialities_expert_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auto_application_expert_specialities_expert_id_idx ON public.application_expert_specialities USING btree (expert_id);


--
-- Name: auto_application_expert_specialities_speciality_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auto_application_expert_specialities_speciality_id_idx ON public.application_expert_specialities USING btree (speciality_id);


--
-- Name: cert_number_to_attached_doc_application_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX cert_number_to_attached_doc_application_id_idx ON public.cert_number_to_attached_doc USING btree (application_id);


--
-- Name: cert_number_to_attached_doc_attached_doc_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX cert_number_to_attached_doc_attached_doc_id_idx ON public.cert_number_to_attached_doc USING btree (attached_doc_id);


--
-- Name: cert_number_to_attached_doc_invalidated_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX cert_number_to_attached_doc_invalidated_idx ON public.cert_number_to_attached_doc USING btree (invalidated);


--
-- Name: cert_number_to_attached_doc_uuid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX cert_number_to_attached_doc_uuid_idx ON public.cert_number_to_attached_doc USING btree (uuid);


--
-- Name: comission_agenda_application_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX comission_agenda_application_id_idx ON public.comission_agenda USING btree (application_id);


--
-- Name: comission_agenda_session_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX comission_agenda_session_id_idx ON public.comission_agenda USING btree (session_id);


--
-- Name: comission_member_user_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX comission_member_user_id_idx ON public.comission_member USING btree (user_id);


--
-- Name: comission_participation_expert_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX comission_participation_expert_id_idx ON public.comission_participation USING btree (expert_id);


--
-- Name: comission_participation_session_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX comission_participation_session_id_idx ON public.comission_participation USING btree (session_id);


--
-- Name: diploma_examination_training_course_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX diploma_examination_training_course_id_idx ON public.diploma_examination USING btree (training_course_id);


--
-- Name: diploma_type_edu_level_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX diploma_type_edu_level_id_idx ON public.diploma_type USING btree (edu_level_id);


--
-- Name: diploma_type_is_joint_degree_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX diploma_type_is_joint_degree_idx ON public.diploma_type USING btree (is_joint_degree);


--
-- Name: diploma_type_issuer_university_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX diploma_type_issuer_university_id_idx ON public.diploma_type_issuer USING btree (university_id);


--
-- Name: diploma_type_original_edu_level_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX diploma_type_original_edu_level_id_idx ON public.diploma_type USING btree (original_edu_level_id);


--
-- Name: diploma_type_type_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX diploma_type_type_idx ON public.diploma_type USING btree (type);


--
-- Name: dir_tce_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX dir_tce_idx ON public.diploma_issuer USING btree (diploma_id);


--
-- Name: dir_uny_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX dir_uny_idx ON public.diploma_issuer USING btree (university_id);


--
-- Name: dti_dt_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX dti_dt_idx ON public.diploma_type_issuer USING btree (diploma_type_id);


--
-- Name: event_application_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX event_application_id_idx ON public.event USING btree (application_id);


--
-- Name: event_doc_category_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX event_doc_category_id_idx ON public.event USING btree (doc_category_id);


--
-- Name: event_event_type_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX event_event_type_id_idx ON public.event USING btree (event_type_id);


--
-- Name: expert_statement_application_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX expert_statement_application_id_idx ON public.expert_statement USING btree (application_id);


--
-- Name: expert_statement_expert_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX expert_statement_expert_id_idx ON public.expert_statement USING btree (expert_id);


--
-- Name: fki_application_app_status_id_fk; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX fki_application_app_status_id_fk ON public.application USING btree (app_status_id);


--
-- Name: fki_application_docflow_status_id_fk; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX fki_application_docflow_status_id_fk ON public.application USING btree (docflow_status_id);


--
-- Name: fki_arn_uny_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX fki_arn_uny_id ON public.bg_academic_recognition_info USING btree (recognized_university_id);


--
-- Name: fki_di_faculty_fk; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX fki_di_faculty_fk ON public.diploma_issuer USING btree (faculty_id);


--
-- Name: fki_dti_faculty_fk; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX fki_dti_faculty_fk ON public.diploma_type_issuer USING btree (faculty_id);


--
-- Name: fki_final_status_history_id_fk; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX fki_final_status_history_id_fk ON public.application USING btree (final_status_history_id);


--
-- Name: fki_res_usr_id_fk; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX fki_res_usr_id_fk ON public.application USING btree (responsible_user);


--
-- Name: fki_status_history_status_id_fk; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX fki_status_history_status_id_fk ON public.app_status_history USING btree (status_id);


--
-- Name: fki_tc_dut_fk; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX fki_tc_dut_fk ON public.training_course USING btree (duration_unit_id);


--
-- Name: fki_tc_prof_group_fk; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX fki_tc_prof_group_fk ON public.training_course USING btree (prof_group_id);


--
-- Name: fki_tc_rec_prof_group_fk; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX fki_tc_rec_prof_group_fk ON public.training_course USING btree (recognized_prof_group_id);


--
-- Name: fki_training_course_prev_diploma_speciality; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX fki_training_course_prev_diploma_speciality ON public.training_course USING btree (prev_diploma_speciality_id);


--
-- Name: i_common_vars; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX i_common_vars ON public.common_vars USING btree (var_name);


--
-- Name: idx_app_exp1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_app_exp1 ON public.application_expert USING btree (application_id);


--
-- Name: idx_app_exp2; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_app_exp2 ON public.application_expert USING btree (expert_id);


--
-- Name: idx_app_pers; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_app_pers ON public.application USING btree (applicant_id);


--
-- Name: idx_app_repr; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_app_repr ON public.application USING btree (representative_id);


--
-- Name: idx_app_train; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_app_train ON public.application USING btree (training_course_id);


--
-- Name: idx_pers_citizenship; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_pers_citizenship ON public.person USING btree (citizenship_id);


--
-- Name: idx_pers_country; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_pers_country ON public.person USING btree (birth_country_id);


--
-- Name: idx_pers_idtype; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_pers_idtype ON public.person USING btree (civil_id_type);


--
-- Name: idx_pk_app_exp; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_pk_app_exp ON public.application_expert USING btree (id);


--
-- Name: idx_pk_comission_agenda; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_pk_comission_agenda ON public.comission_agenda USING btree (id);


--
-- Name: idx_pk_diploma_examination; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_pk_diploma_examination ON public.diploma_examination USING btree (id);


--
-- Name: idx_pk_person; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_pk_person ON public.person USING btree (id);


--
-- Name: idx_pk_recognized_specs; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_pk_recognized_specs ON public.recognized_specs USING btree (id);


--
-- Name: idx_pk_training_course; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_pk_training_course ON public.training_course USING btree (id);


--
-- Name: idx_pk_training_location; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_pk_training_location ON public.training_location USING btree (id);


--
-- Name: idx_pk_university; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_pk_university ON public.university USING btree (id);


--
-- Name: idx_pk_university_examination; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_pk_university_examination ON public.university_examination USING btree (id);


--
-- Name: idx_pk_university_validity; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_pk_university_validity ON public.university_validity USING btree (id);


--
-- Name: idx_recognized_specs1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_recognized_specs1 ON public.recognized_specs USING btree (training_course_id);


--
-- Name: idx_recognized_specs2; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_recognized_specs2 ON public.recognized_specs USING btree (spec_id);


--
-- Name: idx_training_location1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_training_location1 ON public.training_location USING btree (training_location_country_id);


--
-- Name: idx_training_location2; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_training_location2 ON public.training_location USING btree (training_course_id);


--
-- Name: idx_university1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_university1 ON public.university USING btree (bg_name);


--
-- Name: idx_university2; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_university2 ON public.university USING btree (org_name);


--
-- Name: idx_university3; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_university3 ON public.university USING btree (country_id);


--
-- Name: idx_university_examination1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_university_examination1 ON public.university_examination USING btree (training_course_id);


--
-- Name: idx_university_examination2; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_university_examination2 ON public.university_examination USING btree (university_validity_id);


--
-- Name: idx_university_validity1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_university_validity1 ON public.university_validity USING btree (university_id);


--
-- Name: person_document_person_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX person_document_person_id_idx ON public.person_document USING btree (person_id);


--
-- Name: purpose_of_recognition_application_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX purpose_of_recognition_application_id_idx ON public.purpose_of_recognition USING btree (application_id);


--
-- Name: purpose_of_recognition_purpose_of_recognition_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX purpose_of_recognition_purpose_of_recognition_id_idx ON public.purpose_of_recognition USING btree (purpose_of_recognition_id);


--
-- Name: ras_nomenclatures_map_nomenclature_type_internal_nom_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ras_nomenclatures_map_nomenclature_type_internal_nom_id_idx ON public.ras_nomenclatures_map USING btree (nomenclature_type, internal_nom_id);


--
-- Name: sources_of_information_competent_institution_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX sources_of_information_competent_institution_id_idx ON public.sources_of_information USING btree (competent_institution_id);


--
-- Name: sources_of_information_university_validity_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX sources_of_information_university_validity_id_idx ON public.sources_of_information USING btree (university_validity_id);


--
-- Name: tcs_training_course_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX tcs_training_course_id_idx ON public.training_course_specialities USING btree (training_course_id);


--
-- Name: training_course_diploma_type_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX training_course_diploma_type_id_idx ON public.training_course USING btree (diploma_type_id);


--
-- Name: training_course_graduation_document_type_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX training_course_graduation_document_type_id_idx ON public.training_course USING btree (graduation_document_type_id);


--
-- Name: training_course_institution_training_course_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX training_course_institution_training_course_id_idx ON public.training_course_institution USING btree (training_course_id);


--
-- Name: training_course_institution_training_inst_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX training_course_institution_training_inst_id_idx ON public.training_course_institution USING btree (training_inst_id);


--
-- Name: training_course_original_specialities_speciality_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX training_course_original_specialities_speciality_id_idx ON public.training_course_specialities USING btree (original_speciality_id);


--
-- Name: training_course_owner_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX training_course_owner_id_idx ON public.training_course USING btree (owner_id);


--
-- Name: training_course_recognized_edu_level_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX training_course_recognized_edu_level_id_idx ON public.training_course USING btree (recognized_edu_level_id);


--
-- Name: training_course_recognized_qualification_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX training_course_recognized_qualification_id_idx ON public.training_course USING btree (recognized_qualification_id);


--
-- Name: training_course_specialities_speciality_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX training_course_specialities_speciality_id_idx ON public.training_course_specialities USING btree (speciality_id);


--
-- Name: training_course_thesis_language_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX training_course_thesis_language_id_idx ON public.training_course USING btree (thesis_language_id);


--
-- Name: training_form_training_course_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX training_form_training_course_id_idx ON public.training_form USING btree (training_course_id);


--
-- Name: training_form_training_form_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX training_form_training_form_id_idx ON public.training_form USING btree (training_form_id);


--
-- Name: training_location_training_institution_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX training_location_training_institution_id_idx ON public.training_location USING btree (training_institution_id);


--
-- Name: unique_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX unique_idx ON public.users_group_membership USING btree (user_id, group_id, web_application);


--
-- Name: university_faculty_university_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX university_faculty_university_id_idx ON public.university_faculty USING btree (university_id);


--
-- Name: university_id_training_inst_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX university_id_training_inst_id_idx ON public.university_id USING btree (training_inst_id);


--
-- Name: university_id_university_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX university_id_university_id_idx ON public.university_id USING btree (university_id);


--
-- Name: users_sys_log_time_login_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX users_sys_log_time_login_idx ON public.users_sys_log USING btree (time_login);


--
-- Name: way_of_graduation_training_course_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX way_of_graduation_training_course_id_idx ON public.way_of_graduation USING btree (training_course_id);


--
-- Name: way_of_graduation_way_of_graduation_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX way_of_graduation_way_of_graduation_id_idx ON public.way_of_graduation USING btree (way_of_graduation_id);


--
-- Name: apn_applicant_country; Type: INDEX; Schema: regprof; Owner: postgres
--

CREATE INDEX apn_applicant_country ON regprof.regprof_application USING btree (applicant_country_id);


--
-- Name: apn_applicant_id_idx; Type: INDEX; Schema: regprof; Owner: postgres
--

CREATE INDEX apn_applicant_id_idx ON regprof.regprof_application USING btree (applicant_id);


--
-- Name: apn_country_idx; Type: INDEX; Schema: regprof; Owner: postgres
--

CREATE INDEX apn_country_idx ON regprof.regprof_application USING btree (application_country_id);


--
-- Name: apn_end_date_idx; Type: INDEX; Schema: regprof; Owner: postgres
--

CREATE INDEX apn_end_date_idx ON regprof.regprof_application USING btree (end_date);


--
-- Name: apn_representative_idx; Type: INDEX; Schema: regprof; Owner: postgres
--

CREATE INDEX apn_representative_idx ON regprof.regprof_application USING btree (representative_id);


--
-- Name: apn_status_idx; Type: INDEX; Schema: regprof; Owner: postgres
--

CREATE INDEX apn_status_idx ON regprof.regprof_application USING btree (status);


--
-- Name: apn_ste_idx; Type: INDEX; Schema: regprof; Owner: postgres
--

CREATE INDEX apn_ste_idx ON regprof.regprof_application USING btree (service_type_id);


--
-- Name: apn_tce_idx; Type: INDEX; Schema: regprof; Owner: postgres
--

CREATE INDEX apn_tce_idx ON regprof.regprof_application USING btree (training_course_id);


--
-- Name: app_status_doc_type_app_status_id_idx; Type: INDEX; Schema: regprof; Owner: postgres
--

CREATE INDEX app_status_doc_type_app_status_id_idx ON regprof.app_status_doc_type USING btree (app_status_id);


--
-- Name: app_status_doc_type_doc_type_id_idx; Type: INDEX; Schema: regprof; Owner: postgres
--

CREATE INDEX app_status_doc_type_doc_type_id_idx ON regprof.app_status_doc_type USING btree (doc_type_id);


--
-- Name: app_status_docflow_history_app_status_docflow_id_idx; Type: INDEX; Schema: regprof; Owner: postgres
--

CREATE INDEX app_status_docflow_history_app_status_docflow_id_idx ON regprof.app_status_docflow_history USING btree (app_status_docflow_id);


--
-- Name: app_status_docflow_history_application_id_idx; Type: INDEX; Schema: regprof; Owner: postgres
--

CREATE INDEX app_status_docflow_history_application_id_idx ON regprof.app_status_docflow_history USING btree (application_id);


--
-- Name: app_status_history_application_id_idx; Type: INDEX; Schema: regprof; Owner: postgres
--

CREATE INDEX app_status_history_application_id_idx ON regprof.app_status_history USING btree (application_id);


--
-- Name: app_status_history_status_id_idx; Type: INDEX; Schema: regprof; Owner: postgres
--

CREATE INDEX app_status_history_status_id_idx ON regprof.app_status_history USING btree (status_id);


--
-- Name: app_status_history_user_assigned_idx; Type: INDEX; Schema: regprof; Owner: postgres
--

CREATE INDEX app_status_history_user_assigned_idx ON regprof.app_status_history USING btree (user_assigned);


--
-- Name: cert_number_to_attached_doc_application_id_idx; Type: INDEX; Schema: regprof; Owner: postgres
--

CREATE INDEX cert_number_to_attached_doc_application_id_idx ON regprof.cert_number_to_attached_doc USING btree (application_id);


--
-- Name: cert_number_to_attached_doc_attached_doc_id_idx; Type: INDEX; Schema: regprof; Owner: postgres
--

CREATE INDEX cert_number_to_attached_doc_attached_doc_id_idx ON regprof.cert_number_to_attached_doc USING btree (attached_doc_id);


--
-- Name: cert_number_to_attached_doc_uuid_idx; Type: INDEX; Schema: regprof; Owner: postgres
--

CREATE INDEX cert_number_to_attached_doc_uuid_idx ON regprof.cert_number_to_attached_doc USING btree (uuid);


--
-- Name: doc_exam_attached_docs_parent_id_idx; Type: INDEX; Schema: regprof; Owner: postgres
--

CREATE INDEX doc_exam_attached_docs_parent_id_idx ON regprof.doc_exam_attached_docs USING btree (parent_id);


--
-- Name: document_examination_training_course_id_idx; Type: INDEX; Schema: regprof; Owner: postgres
--

CREATE INDEX document_examination_training_course_id_idx ON regprof.document_examination USING btree (training_course_id);


--
-- Name: fki_apn_pdt_fk; Type: INDEX; Schema: regprof; Owner: postgres
--

CREATE INDEX fki_apn_pdt_fk ON regprof.regprof_application USING btree (applicant_documents_id);


--
-- Name: prof_qualification_examination_recognized_profession_id_idx; Type: INDEX; Schema: regprof; Owner: postgres
--

CREATE INDEX prof_qualification_examination_recognized_profession_id_idx ON regprof.prof_qualification_examination USING btree (recognized_profession_id);


--
-- Name: prof_qualification_examination_training_course_id_idx; Type: INDEX; Schema: regprof; Owner: postgres
--

CREATE INDEX prof_qualification_examination_training_course_id_idx ON regprof.prof_qualification_examination USING btree (training_course_id);


--
-- Name: profession_experience_exam_attached_docs_parent_id_idx; Type: INDEX; Schema: regprof; Owner: postgres
--

CREATE INDEX profession_experience_exam_attached_docs_parent_id_idx ON regprof.profession_experience_exam_attached_docs USING btree (parent_id);


--
-- Name: regprof_application_apostille_application_idx; Type: INDEX; Schema: regprof; Owner: postgres
--

CREATE INDEX regprof_application_apostille_application_idx ON regprof.regprof_application USING btree (apostille_application);


--
-- Name: regprof_application_docflow_status_id_idx; Type: INDEX; Schema: regprof; Owner: postgres
--

CREATE INDEX regprof_application_docflow_status_id_idx ON regprof.regprof_application USING btree (docflow_status_id);


--
-- Name: training_course_specialities_training_course_id_idx; Type: INDEX; Schema: regprof; Owner: postgres
--

CREATE INDEX training_course_specialities_training_course_id_idx ON regprof.training_course_specialities USING btree (training_course_id);


--
-- Name: regprof_application chck_applicant_docs; Type: TRIGGER; Schema: eservices; Owner: postgres
--

CREATE TRIGGER chck_applicant_docs AFTER INSERT OR UPDATE ON eservices.regprof_application FOR EACH ROW EXECUTE PROCEDURE regprof.check_applicant_document();


--
-- Name: liability_details add_liablity_detail_for_ipas_transfer; Type: TRIGGER; Schema: payments; Owner: postgres
--

CREATE TRIGGER add_liablity_detail_for_ipas_transfer AFTER INSERT OR DELETE OR UPDATE ON payments.liability_details FOR EACH ROW EXECUTE PROCEDURE payments.add_liablity_detail_for_ipas_transfer();


--
-- Name: liability_details set_liabilities_amount_outstanding; Type: TRIGGER; Schema: payments; Owner: postgres
--

CREATE TRIGGER set_liabilities_amount_outstanding AFTER INSERT OR DELETE OR UPDATE ON payments.liability_details FOR EACH ROW EXECUTE PROCEDURE payments.set_liabilities_amount_outstanding();


--
-- Name: public_access address; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.public_access
    ADD CONSTRAINT address FOREIGN KEY (address_id) REFERENCES backoffice.address(id);


--
-- Name: address address_country_FK; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.address
    ADD CONSTRAINT "address_country_FK" FOREIGN KEY (country_id) REFERENCES nomenclatures.country(id);


--
-- Name: analytic_product_files analytic_product_files_id_blob_id_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.analytic_product_files
    ADD CONSTRAINT analytic_product_files_id_blob_id_fkey FOREIGN KEY (file_id) REFERENCES blobs.blobs(id);


--
-- Name: analytic_product_files analytic_product_id_analytic_product_files_id_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.analytic_product_files
    ADD CONSTRAINT analytic_product_id_analytic_product_files_id_fkey FOREIGN KEY (analytic_product_id) REFERENCES backoffice.analytic_products(id);


--
-- Name: app_status_docflow_entry_num_series apentry_docflow_num_series_id_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.app_status_docflow_entry_num_series
    ADD CONSTRAINT apentry_docflow_num_series_id_fkey FOREIGN KEY (entry_num_series_id) REFERENCES numgenerator.entry_num_series(id);


--
-- Name: app_status_entry_num_series apentry_num_series_id_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.app_status_entry_num_series
    ADD CONSTRAINT apentry_num_series_id_fkey FOREIGN KEY (entry_num_series_id) REFERENCES numgenerator.entry_num_series(id);


--
-- Name: app_status_docflow_entry_num_series app_status_docflow_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.app_status_docflow_entry_num_series
    ADD CONSTRAINT app_status_docflow_fkey FOREIGN KEY (app_status_docflow_id) REFERENCES nomenclatures.app_status_docflow(id);


--
-- Name: app_status_docflow_history app_status_docflow_history_app_status_docflow_id_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.app_status_docflow_history
    ADD CONSTRAINT app_status_docflow_history_app_status_docflow_id_fkey FOREIGN KEY (app_status_docflow_id) REFERENCES nomenclatures.app_status_docflow(id);


--
-- Name: app_status_docflow_history app_status_docflow_history_application_id_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.app_status_docflow_history
    ADD CONSTRAINT app_status_docflow_history_application_id_fkey FOREIGN KEY (application_id) REFERENCES public.application(id);


--
-- Name: app_status_entry_num_series app_status_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.app_status_entry_num_series
    ADD CONSTRAINT app_status_fkey FOREIGN KEY (app_status_id) REFERENCES nomenclatures.app_status(id);


--
-- Name: public_access applicant; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.public_access
    ADD CONSTRAINT applicant FOREIGN KEY (person_id) REFERENCES backoffice.public_person(id);


--
-- Name: analytic_products applicant_analitic_product_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.analytic_products
    ADD CONSTRAINT applicant_analitic_product_fkey FOREIGN KEY (applicant_id) REFERENCES backoffice.person(id);


--
-- Name: bibliographic_references applicant_bibliographic_references_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.bibliographic_references
    ADD CONSTRAINT applicant_bibliographic_references_fkey FOREIGN KEY (applicant_id) REFERENCES backoffice.person(id);


--
-- Name: document_deliverys applicant_document_delivery_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.document_deliverys
    ADD CONSTRAINT applicant_document_delivery_fkey FOREIGN KEY (applicant_id) REFERENCES backoffice.person(id);


--
-- Name: inquiry applicant_inquiry_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.inquiry
    ADD CONSTRAINT applicant_inquiry_fkey FOREIGN KEY (applicant_id) REFERENCES backoffice.person(id);


--
-- Name: bibliographic_references_files bibliographic_references_files_id_blob_id_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.bibliographic_references_files
    ADD CONSTRAINT bibliographic_references_files_id_blob_id_fkey FOREIGN KEY (file_id) REFERENCES blobs.blobs(id);


--
-- Name: bibliographic_references_files bibliographic_references_id_bibliographic_references_files_id_f; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.bibliographic_references_files
    ADD CONSTRAINT bibliographic_references_id_bibliographic_references_files_id_f FOREIGN KEY (bibliographic_references_id) REFERENCES backoffice.bibliographic_references(id);


--
-- Name: analytic_products bo_analytic_products_representative_a_structure_public_person_f; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.analytic_products
    ADD CONSTRAINT bo_analytic_products_representative_a_structure_public_person_f FOREIGN KEY (representative_administrative_id) REFERENCES backoffice.public_person(id);


--
-- Name: public_access company; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.public_access
    ADD CONSTRAINT company FOREIGN KEY (company_id) REFERENCES backoffice.company(id);


--
-- Name: analytic_products company_analytic_products_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.analytic_products
    ADD CONSTRAINT company_analytic_products_fkey FOREIGN KEY (company_id) REFERENCES backoffice.company(id);


--
-- Name: bibliographic_references company_bibliographic_references_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.bibliographic_references
    ADD CONSTRAINT company_bibliographic_references_fkey FOREIGN KEY (company_id) REFERENCES backoffice.company(id);


--
-- Name: company company_country_id; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.company
    ADD CONSTRAINT company_country_id FOREIGN KEY (country_id) REFERENCES nomenclatures.country(id);


--
-- Name: document_deliverys company_document_deliverys_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.document_deliverys
    ADD CONSTRAINT company_document_deliverys_fkey FOREIGN KEY (company_id) REFERENCES backoffice.company(id);


--
-- Name: inquiry company_inquiry_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.inquiry
    ADD CONSTRAINT company_inquiry_fkey FOREIGN KEY (company_id) REFERENCES backoffice.company(id);


--
-- Name: company company_settlement_id; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.company
    ADD CONSTRAINT company_settlement_id FOREIGN KEY (settlement_id) REFERENCES nomenclatures.eksettlements(id);


--
-- Name: analytic_products contact_details_analitic_product_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.analytic_products
    ADD CONSTRAINT contact_details_analitic_product_fkey FOREIGN KEY (contact_details_id) REFERENCES backoffice.address(id);


--
-- Name: bibliographic_references contact_details_bibliographic_references_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.bibliographic_references
    ADD CONSTRAINT contact_details_bibliographic_references_fkey FOREIGN KEY (contact_details_id) REFERENCES backoffice.address(id);


--
-- Name: document_deliverys contact_details_document_delivery_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.document_deliverys
    ADD CONSTRAINT contact_details_document_delivery_fkey FOREIGN KEY (contact_details_id) REFERENCES backoffice.address(id);


--
-- Name: inquiry contact_details_inquiry_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.inquiry
    ADD CONSTRAINT contact_details_inquiry_fkey FOREIGN KEY (contact_details_id) REFERENCES backoffice.address(id);


--
-- Name: document_delivery_files document_delivery_files_id_blob_id_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.document_delivery_files
    ADD CONSTRAINT document_delivery_files_id_blob_id_fkey FOREIGN KEY (file_id) REFERENCES blobs.blobs(id);


--
-- Name: document_delivery_files document_delivery_id_document_delivery_files_id_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.document_delivery_files
    ADD CONSTRAINT document_delivery_id_document_delivery_files_id_fkey FOREIGN KEY (document_delivery_id) REFERENCES backoffice.document_deliverys(id);


--
-- Name: document document_document_delivery_id_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.document
    ADD CONSTRAINT document_document_delivery_id_fkey FOREIGN KEY (document_delivery_id) REFERENCES backoffice.document_deliverys(id);


--
-- Name: doc_type_entry_num_series dtens_doc_type_fk; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.doc_type_entry_num_series
    ADD CONSTRAINT dtens_doc_type_fk FOREIGN KEY (doc_type_id) REFERENCES nomenclatures.doc_types(id);


--
-- Name: doc_type_entry_num_series dtens_num_series_fk; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.doc_type_entry_num_series
    ADD CONSTRAINT dtens_num_series_fk FOREIGN KEY (num_series_id) REFERENCES numgenerator.entry_num_series(id);


--
-- Name: notifications entry_num_series_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.notifications
    ADD CONSTRAINT entry_num_series_fkey FOREIGN KEY (entry_num_series_id) REFERENCES numgenerator.entry_num_series(id);


--
-- Name: notes entry_num_series_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.notes
    ADD CONSTRAINT entry_num_series_fkey FOREIGN KEY (entry_num_series_id) REFERENCES numgenerator.entry_num_series(id);


--
-- Name: assignment entry_num_series_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.assignment
    ADD CONSTRAINT entry_num_series_fkey FOREIGN KEY (entry_num_series_id) REFERENCES numgenerator.entry_num_series(id);


--
-- Name: person ext_person_user_id_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.person
    ADD CONSTRAINT ext_person_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id);


--
-- Name: impact_factor_report_rows impact_factor_report_rows_inquiry_id_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.impact_factor_report_rows
    ADD CONSTRAINT impact_factor_report_rows_inquiry_id_fkey FOREIGN KEY (inquiry_id) REFERENCES backoffice.inquiry(id);


--
-- Name: inquiry_files inquiry_files_id_blob_id_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.inquiry_files
    ADD CONSTRAINT inquiry_files_id_blob_id_fkey FOREIGN KEY (file_id) REFERENCES blobs.blobs(id);


--
-- Name: inquiry_files inquiry_id_inquiry_files_id_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.inquiry_files
    ADD CONSTRAINT inquiry_id_inquiry_files_id_fkey FOREIGN KEY (inquiry_id) REFERENCES backoffice.inquiry(id);


--
-- Name: official_notes official_note_bo_company_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.official_notes
    ADD CONSTRAINT official_note_bo_company_fkey FOREIGN KEY (company_id) REFERENCES backoffice.company(id);


--
-- Name: official_notes official_note_bo_representative_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.official_notes
    ADD CONSTRAINT official_note_bo_representative_fkey FOREIGN KEY (representative_id) REFERENCES backoffice.person(id);


--
-- Name: official_note_files official_note_files_id_blob_id_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.official_note_files
    ADD CONSTRAINT official_note_files_id_blob_id_fkey FOREIGN KEY (file_id) REFERENCES blobs.blobs(id);


--
-- Name: official_note_files official_note_id_official_note_files_id_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.official_note_files
    ADD CONSTRAINT official_note_id_official_note_files_id_fkey FOREIGN KEY (official_note_id) REFERENCES backoffice.official_notes(id);


--
-- Name: official_notes official_notes_bo_applicant_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.official_notes
    ADD CONSTRAINT official_notes_bo_applicant_fkey FOREIGN KEY (applicant_id) REFERENCES backoffice.person(id);


--
-- Name: official_notes official_notes_bo_contact_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.official_notes
    ADD CONSTRAINT official_notes_bo_contact_fkey FOREIGN KEY (contact_details_id) REFERENCES backoffice.address(id);


--
-- Name: person person_address_id; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.person
    ADD CONSTRAINT person_address_id FOREIGN KEY (address_id) REFERENCES backoffice.address(id);


--
-- Name: public_access_files public_access_files_id_blob_id_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.public_access_files
    ADD CONSTRAINT public_access_files_id_blob_id_fkey FOREIGN KEY (file_id) REFERENCES blobs.blobs(id);


--
-- Name: public_access_files public_access_id_public_access_files_id_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.public_access_files
    ADD CONSTRAINT public_access_id_public_access_files_id_fkey FOREIGN KEY (public_access_id) REFERENCES backoffice.public_access(id);


--
-- Name: public_access representative; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.public_access
    ADD CONSTRAINT representative FOREIGN KEY (representative_id) REFERENCES backoffice.public_person(id);


--
-- Name: bibliographic_references representative_administrative_structure_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.bibliographic_references
    ADD CONSTRAINT representative_administrative_structure_fkey FOREIGN KEY (representative_id) REFERENCES backoffice.person(id);


--
-- Name: bibliographic_references representative_administrative_structure_public_person_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.bibliographic_references
    ADD CONSTRAINT representative_administrative_structure_public_person_fkey FOREIGN KEY (representative_administrative_id) REFERENCES backoffice.public_person(id);


--
-- Name: analytic_products representative_analitic_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.analytic_products
    ADD CONSTRAINT representative_analitic_fkey FOREIGN KEY (representative_id) REFERENCES backoffice.person(id);


--
-- Name: inquiry representative_analityc_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.inquiry
    ADD CONSTRAINT representative_analityc_fkey FOREIGN KEY (representative_id) REFERENCES backoffice.person(id);


--
-- Name: document_deliverys representative_document_delivery_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.document_deliverys
    ADD CONSTRAINT representative_document_delivery_fkey FOREIGN KEY (representative_id) REFERENCES backoffice.person(id);


--
-- Name: signal_files signal_files_id_blob_id_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.signal_files
    ADD CONSTRAINT signal_files_id_blob_id_fkey FOREIGN KEY (file_id) REFERENCES blobs.blobs(id);


--
-- Name: signal_files signal_id_signal_files_id_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.signal_files
    ADD CONSTRAINT signal_id_signal_files_id_fkey FOREIGN KEY (signal_id) REFERENCES backoffice.signals(id);


--
-- Name: signals signals_applicant_fk; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.signals
    ADD CONSTRAINT signals_applicant_fk FOREIGN KEY (applicant_id) REFERENCES backoffice.person(id);


--
-- Name: signals signals_company_fk; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.signals
    ADD CONSTRAINT signals_company_fk FOREIGN KEY (company_id) REFERENCES backoffice.company(id);


--
-- Name: signals signals_contact_details_id; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.signals
    ADD CONSTRAINT signals_contact_details_id FOREIGN KEY (contact_details_id) REFERENCES backoffice.address(id);


--
-- Name: signals signals_representative_fk; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.signals
    ADD CONSTRAINT signals_representative_fk FOREIGN KEY (representative_id) REFERENCES backoffice.public_person(id);


--
-- Name: suggestions suggestion_contact_details_fk; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.suggestions
    ADD CONSTRAINT suggestion_contact_details_fk FOREIGN KEY (contact_details_id) REFERENCES eservices.address(id);


--
-- Name: suggestions suggestion_representative_fk; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.suggestions
    ADD CONSTRAINT suggestion_representative_fk FOREIGN KEY (representative_id) REFERENCES eservices.public_person(id);


--
-- Name: suggestions suggestions_applicant_fk; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.suggestions
    ADD CONSTRAINT suggestions_applicant_fk FOREIGN KEY (applicant_id) REFERENCES public.person(id);


--
-- Name: suggestions suggestions_company_id_fk; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.suggestions
    ADD CONSTRAINT suggestions_company_id_fk FOREIGN KEY (company_id) REFERENCES eservices.company(id);


--
-- Name: suggestions_files suggestions_files_id_blob_id_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.suggestions_files
    ADD CONSTRAINT suggestions_files_id_blob_id_fkey FOREIGN KEY (file_id) REFERENCES blobs.blobs(id);


--
-- Name: suggestions_files suggestions_id_suggestions_files_id_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.suggestions_files
    ADD CONSTRAINT suggestions_id_suggestions_files_id_fkey FOREIGN KEY (id) REFERENCES backoffice.suggestions(id);


--
-- Name: templates templates_blob_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.templates
    ADD CONSTRAINT templates_blob_fkey FOREIGN KEY (app_id) REFERENCES numgenerator.entry_num_series(id);


--
-- Name: templates templates_doc_fkey; Type: FK CONSTRAINT; Schema: backoffice; Owner: postgres
--

ALTER TABLE ONLY backoffice.templates
    ADD CONSTRAINT templates_doc_fkey FOREIGN KEY (doc_id) REFERENCES blobs.blobs(id);


--
-- Name: blobs2 blobs2_user_created_fkey; Type: FK CONSTRAINT; Schema: blobs; Owner: postgres
--

ALTER TABLE ONLY blobs.blobs2
    ADD CONSTRAINT blobs2_user_created_fkey FOREIGN KEY (rudi_user_created) REFERENCES public.users(id);


--
-- Name: blobs blobs_user_created_fkey; Type: FK CONSTRAINT; Schema: blobs; Owner: postgres
--

ALTER TABLE ONLY blobs.blobs
    ADD CONSTRAINT blobs_user_created_fkey FOREIGN KEY (rudi_user_created) REFERENCES public.users(id);


--
-- Name: public_access address; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.public_access
    ADD CONSTRAINT address FOREIGN KEY (address_id) REFERENCES eservices.address(id);


--
-- Name: address address_country_FK; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.address
    ADD CONSTRAINT "address_country_FK" FOREIGN KEY (country_id) REFERENCES nomenclatures.country(id);


--
-- Name: analytic_product_files analytic_product_files_analytic_products_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.analytic_product_files
    ADD CONSTRAINT analytic_product_files_analytic_products_fk FOREIGN KEY (analytic_products_id) REFERENCES eservices.analytic_products(id);


--
-- Name: analytic_product_files analytic_product_files_blob_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.analytic_product_files
    ADD CONSTRAINT analytic_product_files_blob_fk FOREIGN KEY (blob_id) REFERENCES blobs.blobs(id);


--
-- Name: analytic_products analytic_products_representative_a_structure_public_person_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.analytic_products
    ADD CONSTRAINT analytic_products_representative_a_structure_public_person_fkey FOREIGN KEY (representative_administrative_id) REFERENCES eservices.public_person(id);


--
-- Name: rudi_application apn_apt_id; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_application
    ADD CONSTRAINT apn_apt_id FOREIGN KEY (applicant_id) REFERENCES eservices.person(id);


--
-- Name: rudi_application app_applicant_personal_id_document_type_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_application
    ADD CONSTRAINT app_applicant_personal_id_document_type_fk FOREIGN KEY (applicant_personal_id_document_type) REFERENCES nomenclatures.personal_id_document_type(id);


--
-- Name: application app_usr_id_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.application
    ADD CONSTRAINT app_usr_id_fk FOREIGN KEY (training_course_id) REFERENCES public.training_course(id);


--
-- Name: public_access applicant; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.public_access
    ADD CONSTRAINT applicant FOREIGN KEY (person_id) REFERENCES eservices.public_person(id);


--
-- Name: analytic_products applicant_analitic_product_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.analytic_products
    ADD CONSTRAINT applicant_analitic_product_fkey FOREIGN KEY (applicant_id) REFERENCES eservices.person(id);


--
-- Name: bibliographic_references applicant_bibliographic_references_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.bibliographic_references
    ADD CONSTRAINT applicant_bibliographic_references_fkey FOREIGN KEY (applicant_id) REFERENCES eservices.person(id);


--
-- Name: inquiry applicant_inquiry_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.inquiry
    ADD CONSTRAINT applicant_inquiry_fkey FOREIGN KEY (applicant_id) REFERENCES eservices.person(id);


--
-- Name: application_university application_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.application_university
    ADD CONSTRAINT application_id_fkey FOREIGN KEY (application_id) REFERENCES public.application(id);


--
-- Name: bibliographic_references_files bibliographic_references_files_bibliographic_references_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.bibliographic_references_files
    ADD CONSTRAINT bibliographic_references_files_bibliographic_references_fk FOREIGN KEY (bibliographic_references_id) REFERENCES eservices.bibliographic_references(id);


--
-- Name: bibliographic_references_files bibliographic_references_files_blob_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.bibliographic_references_files
    ADD CONSTRAINT bibliographic_references_files_blob_fk FOREIGN KEY (blob_id) REFERENCES blobs.blobs(id);


--
-- Name: public_access company; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.public_access
    ADD CONSTRAINT company FOREIGN KEY (company_id) REFERENCES eservices.company(id);


--
-- Name: analytic_products company_analytic_products_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.analytic_products
    ADD CONSTRAINT company_analytic_products_fkey FOREIGN KEY (company_id) REFERENCES eservices.company(id);


--
-- Name: bibliographic_references company_bibliographic_references_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.bibliographic_references
    ADD CONSTRAINT company_bibliographic_references_fkey FOREIGN KEY (company_id) REFERENCES eservices.company(id);


--
-- Name: company company_country_id; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.company
    ADD CONSTRAINT company_country_id FOREIGN KEY (country_id) REFERENCES nomenclatures.country(id);


--
-- Name: inquiry company_inquiry_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.inquiry
    ADD CONSTRAINT company_inquiry_fkey FOREIGN KEY (company_id) REFERENCES eservices.company(id);


--
-- Name: rudi_application company_rudi_application_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_application
    ADD CONSTRAINT company_rudi_application_fkey FOREIGN KEY (company_id) REFERENCES eservices.company(id);


--
-- Name: company company_settlement_id; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.company
    ADD CONSTRAINT company_settlement_id FOREIGN KEY (settlement_id) REFERENCES nomenclatures.eksettlements(id);


--
-- Name: analytic_products contact_details_analitic_product_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.analytic_products
    ADD CONSTRAINT contact_details_analitic_product_fkey FOREIGN KEY (contact_details_id) REFERENCES eservices.address(id);


--
-- Name: bibliographic_references contact_details_bibliographic_references_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.bibliographic_references
    ADD CONSTRAINT contact_details_bibliographic_references_fkey FOREIGN KEY (contact_details_id) REFERENCES eservices.address(id);


--
-- Name: inquiry contact_details_inquiry_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.inquiry
    ADD CONSTRAINT contact_details_inquiry_fkey FOREIGN KEY (contact_details_id) REFERENCES eservices.address(id);


--
-- Name: rudi_application contact_details_rudi_application_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_application
    ADD CONSTRAINT contact_details_rudi_application_fkey FOREIGN KEY (contact_details_id) REFERENCES eservices.address(id);


--
-- Name: rudi_diploma_issuer di_faculty_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_diploma_issuer
    ADD CONSTRAINT di_faculty_fk FOREIGN KEY (faculty_id) REFERENCES public.university_faculty(id);


--
-- Name: document_delivery document_delivery_applicant_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.document_delivery
    ADD CONSTRAINT document_delivery_applicant_id_fkey FOREIGN KEY (applicant_id) REFERENCES eservices.person(id);


--
-- Name: document_delivery document_delivery_company_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.document_delivery
    ADD CONSTRAINT document_delivery_company_id_fkey FOREIGN KEY (company_id) REFERENCES eservices.company(id);


--
-- Name: document_delivery document_delivery_contact_details_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.document_delivery
    ADD CONSTRAINT document_delivery_contact_details_id_fkey FOREIGN KEY (contact_details_id) REFERENCES eservices.address(id);


--
-- Name: document_delivery_files document_delivery_files_blob_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.document_delivery_files
    ADD CONSTRAINT document_delivery_files_blob_id_fkey FOREIGN KEY (blob_id) REFERENCES blobs.blobs(id);


--
-- Name: document_delivery_files document_delivery_files_document_delivery_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.document_delivery_files
    ADD CONSTRAINT document_delivery_files_document_delivery_id_fkey FOREIGN KEY (document_delivery_id) REFERENCES eservices.document_delivery(id);


--
-- Name: document_delivery document_delivery_representative_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.document_delivery
    ADD CONSTRAINT document_delivery_representative_id_fkey FOREIGN KEY (representative_id) REFERENCES eservices.person(id);


--
-- Name: document document_document_delivery_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.document
    ADD CONSTRAINT document_document_delivery_id_fkey FOREIGN KEY (document_delivery_id) REFERENCES eservices.document_delivery(id);


--
-- Name: rudi_application document_receive_method_id_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_application
    ADD CONSTRAINT document_receive_method_id_fk FOREIGN KEY (document_receive_method_id) REFERENCES nomenclatures.document_receive_method(id);


--
-- Name: regprof_application document_receive_method_id_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_application
    ADD CONSTRAINT document_receive_method_id_fk FOREIGN KEY (document_receive_method_id) REFERENCES nomenclatures.document_receive_method(id);


--
-- Name: training_course edu_level_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.training_course
    ADD CONSTRAINT edu_level_id_fkey FOREIGN KEY (edu_level_id) REFERENCES nomenclatures.edu_level(id);


--
-- Name: signed_docs entry_num_series_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.signed_docs
    ADD CONSTRAINT entry_num_series_fkey FOREIGN KEY (entry_num_series_id) REFERENCES numgenerator.entry_num_series(id);


--
-- Name: price_list entry_num_series_price_lsit_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.price_list
    ADD CONSTRAINT entry_num_series_price_lsit_fkey FOREIGN KEY (entry_num_series_id) REFERENCES numgenerator.entry_num_series(id);


--
-- Name: regprof_app_libilities erpal_erp_app_id_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_app_libilities
    ADD CONSTRAINT erpal_erp_app_id_fk FOREIGN KEY (ext_regprof_application_id) REFERENCES eservices.regprof_application(id);


--
-- Name: regprof_app_libilities erpal_liab_id_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_app_libilities
    ADD CONSTRAINT erpal_liab_id_fk FOREIGN KEY (liability_id) REFERENCES public.liabilities(id);


--
-- Name: person_document es_pd_piddt_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.person_document
    ADD CONSTRAINT es_pd_piddt_fk FOREIGN KEY (personal_id_document_type) REFERENCES nomenclatures.personal_id_document_type(id);


--
-- Name: regprof_attached_docs eservices_regprof_attached_docs_doc_type_id_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_attached_docs
    ADD CONSTRAINT eservices_regprof_attached_docs_doc_type_id_fk FOREIGN KEY (doc_type_id) REFERENCES nomenclatures.doc_types(id);


--
-- Name: regprof_attached_docs eservices_regprof_attached_docs_document_id_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_attached_docs
    ADD CONSTRAINT eservices_regprof_attached_docs_document_id_fk FOREIGN KEY (document_id) REFERENCES blobs.blobs(id);


--
-- Name: rudi_attached_docs eservices_rudi_attached_docs_application_id_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_attached_docs
    ADD CONSTRAINT eservices_rudi_attached_docs_application_id_fk FOREIGN KEY (application_id) REFERENCES eservices.rudi_application(id);


--
-- Name: rudi_attached_docs eservices_rudi_attached_docs_document_id_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_attached_docs
    ADD CONSTRAINT eservices_rudi_attached_docs_document_id_fk FOREIGN KEY (document_id) REFERENCES blobs.blobs(id);


--
-- Name: training_course eservices_training_course_graduation_document_type_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.training_course
    ADD CONSTRAINT eservices_training_course_graduation_document_type_fk FOREIGN KEY (graduation_document_type_id) REFERENCES nomenclatures.graduation_document_type(id);


--
-- Name: rudi_training_course eservices_training_course_graduation_document_type_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_training_course
    ADD CONSTRAINT eservices_training_course_graduation_document_type_fk FOREIGN KEY (graduation_document_type_id) REFERENCES nomenclatures.graduation_document_type(id);


--
-- Name: regprof_application esregprof_app_applicant_personal_id_document_type_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_application
    ADD CONSTRAINT esregprof_app_applicant_personal_id_document_type_fk FOREIGN KEY (applicant_personal_id_document_type) REFERENCES nomenclatures.personal_id_document_type(id);


--
-- Name: rudi_application ext_apn_apn_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_application
    ADD CONSTRAINT ext_apn_apn_fk FOREIGN KEY (application_id) REFERENCES public.application(id);


--
-- Name: rudi_application ext_apn_coy_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_application
    ADD CONSTRAINT ext_apn_coy_fk FOREIGN KEY (home_country_id) REFERENCES nomenclatures.country(id);


--
-- Name: rudi_application ext_apn_tce_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_application
    ADD CONSTRAINT ext_apn_tce_fk FOREIGN KEY (training_course_id) REFERENCES eservices.rudi_training_course(id);


--
-- Name: regprof_attached_docs ext_application_ext_attached_docs_fk1; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_attached_docs
    ADD CONSTRAINT ext_application_ext_attached_docs_fk1 FOREIGN KEY (application_id) REFERENCES eservices.regprof_application(id);


--
-- Name: rudi_purpose_of_recognition ext_application_ext_purpose_of_recognition_fk1; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_purpose_of_recognition
    ADD CONSTRAINT ext_application_ext_purpose_of_recognition_fk1 FOREIGN KEY (application_id) REFERENCES eservices.rudi_application(id);


--
-- Name: rudi_diploma_issuer ext_diploma_issuer_diploma_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_diploma_issuer
    ADD CONSTRAINT ext_diploma_issuer_diploma_id_fkey FOREIGN KEY (diploma_id) REFERENCES eservices.rudi_training_course(id);


--
-- Name: rudi_diploma_issuer ext_diploma_issuer_university_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_diploma_issuer
    ADD CONSTRAINT ext_diploma_issuer_university_id_fkey FOREIGN KEY (university_id) REFERENCES public.university(id);


--
-- Name: regprof_profession_experience_dates ext_pedates_pedocs_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_profession_experience_dates
    ADD CONSTRAINT ext_pedates_pedocs_fk FOREIGN KEY (prof_experience_document_id) REFERENCES eservices.regprof_profession_experience_documents(id);


--
-- Name: person_document ext_pers_id_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.person_document
    ADD CONSTRAINT ext_pers_id_fk FOREIGN KEY (person_id) REFERENCES eservices.person(id);


--
-- Name: rudi_application ext_person_ext_application_fk1; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_application
    ADD CONSTRAINT ext_person_ext_application_fk1 FOREIGN KEY (applicant_id) REFERENCES eservices.person(id);


--
-- Name: person ext_person_user_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.person
    ADD CONSTRAINT ext_person_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id);


--
-- Name: regprof_profession_experience_documents ext_profession_experience_document_prof_experience_doc_type_id_; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_profession_experience_documents
    ADD CONSTRAINT ext_profession_experience_document_prof_experience_doc_type_id_ FOREIGN KEY (prof_experience_doc_type_id) REFERENCES nomenclatures.profession_experience_document_type(id);


--
-- Name: regprof_profession_experience_documents ext_profession_experience_documents_prof_experience_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_profession_experience_documents
    ADD CONSTRAINT ext_profession_experience_documents_prof_experience_id_fkey FOREIGN KEY (prof_experience_id) REFERENCES eservices.regprof_profession_experience(id);


--
-- Name: regprof_profession_experience ext_profession_experience_ext_training_course_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_profession_experience
    ADD CONSTRAINT ext_profession_experience_ext_training_course_id_fkey FOREIGN KEY (training_course_id) REFERENCES eservices.regprof_training_course(id);


--
-- Name: regprof_profession_experience ext_profession_experience_n_profession_experience_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_profession_experience
    ADD CONSTRAINT ext_profession_experience_n_profession_experience_id_fkey FOREIGN KEY (n_profession_experience_id) REFERENCES nomenclatures.profession_experience(id);


--
-- Name: regprof_profession_experience ext_profession_experience_user_id_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_profession_experience
    ADD CONSTRAINT ext_profession_experience_user_id_fk FOREIGN KEY (user_id) REFERENCES public.users(id);


--
-- Name: rudi_signed_docs ext_signed_docs_ext_app_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_signed_docs
    ADD CONSTRAINT ext_signed_docs_ext_app_id_fkey FOREIGN KEY (ext_app_id) REFERENCES eservices.rudi_application(id);


--
-- Name: regprof_signed_docs ext_signed_docs_ext_app_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_signed_docs
    ADD CONSTRAINT ext_signed_docs_ext_app_id_fkey FOREIGN KEY (ext_app_id) REFERENCES eservices.regprof_application(id);


--
-- Name: rudi_signed_docs ext_signed_docs_user_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_signed_docs
    ADD CONSTRAINT ext_signed_docs_user_id_fkey FOREIGN KEY (ext_user_id) REFERENCES public.users(id);


--
-- Name: regprof_signed_docs ext_signed_docs_user_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_signed_docs
    ADD CONSTRAINT ext_signed_docs_user_id_fkey FOREIGN KEY (ext_user_id) REFERENCES public.users(id);


--
-- Name: rudi_application ext_training_course_ext_application_fk1; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_application
    ADD CONSTRAINT ext_training_course_ext_application_fk1 FOREIGN KEY (training_course_id) REFERENCES eservices.rudi_training_course(id);


--
-- Name: rudi_training_form ext_training_course_ext_training_form_fk1; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_training_form
    ADD CONSTRAINT ext_training_course_ext_training_form_fk1 FOREIGN KEY (training_course_id) REFERENCES eservices.rudi_training_course(id);


--
-- Name: rudi_way_of_graduation ext_training_course_ext_way_of_graduation_fk1; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_way_of_graduation
    ADD CONSTRAINT ext_training_course_ext_way_of_graduation_fk1 FOREIGN KEY (training_course_id) REFERENCES eservices.rudi_training_course(id);


--
-- Name: rudi_training_course ext_training_course_prev_diploma_speciality; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_training_course
    ADD CONSTRAINT ext_training_course_prev_diploma_speciality FOREIGN KEY (prev_diploma_speciality_id) REFERENCES nomenclatures.speciality(id);


--
-- Name: regprof_training_course_specialities ext_training_course_sepciialities_ext_training_course_id_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_training_course_specialities
    ADD CONSTRAINT ext_training_course_sepciialities_ext_training_course_id_fk FOREIGN KEY (training_course_id) REFERENCES eservices.regprof_training_course(id);


--
-- Name: rudi_training_course_specialities ext_training_course_specialities_ext_training_course_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_training_course_specialities
    ADD CONSTRAINT ext_training_course_specialities_ext_training_course_id_fkey FOREIGN KEY (ext_training_course_id) REFERENCES eservices.rudi_training_course(id);


--
-- Name: regprof_training_course_specialities ext_training_course_specialities_higher_speciality_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_training_course_specialities
    ADD CONSTRAINT ext_training_course_specialities_higher_speciality_id_fkey FOREIGN KEY (higher_speciality_id) REFERENCES nomenclatures.higher_speciality(id);


--
-- Name: regprof_training_course_specialities ext_training_course_specialities_sdk_speciality_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_training_course_specialities
    ADD CONSTRAINT ext_training_course_specialities_sdk_speciality_id_fkey FOREIGN KEY (sdk_speciality_id) REFERENCES nomenclatures.higher_speciality(id);


--
-- Name: regprof_training_course_specialities ext_training_course_specialities_secondary_speciality_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_training_course_specialities
    ADD CONSTRAINT ext_training_course_specialities_secondary_speciality_id_fkey FOREIGN KEY (secondary_speciality_id) REFERENCES nomenclatures.secondary_speciality(id);


--
-- Name: rudi_training_course_specialities ext_training_course_specialities_speciality_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_training_course_specialities
    ADD CONSTRAINT ext_training_course_specialities_speciality_id_fkey FOREIGN KEY (speciality_id) REFERENCES nomenclatures.speciality(id);


--
-- Name: rudi_training_location ext_training_location_training_course_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_training_location
    ADD CONSTRAINT ext_training_location_training_course_id_fkey FOREIGN KEY (training_course_id) REFERENCES eservices.rudi_training_course(id);


--
-- Name: rudi_training_location ext_training_location_training_location_country_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_training_location
    ADD CONSTRAINT ext_training_location_training_location_country_id_fkey FOREIGN KEY (training_location_country_id) REFERENCES nomenclatures.country(id);


--
-- Name: regprof_application extrp_apn_appcountry_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_application
    ADD CONSTRAINT extrp_apn_appcountry_fk FOREIGN KEY (application_country_id) REFERENCES nomenclatures.country(id);


--
-- Name: regprof_application extrp_apn_coy_id; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_application
    ADD CONSTRAINT extrp_apn_coy_id FOREIGN KEY (applicant_country_id) REFERENCES nomenclatures.country(id);


--
-- Name: regprof_application extrp_apn_pdt_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_application
    ADD CONSTRAINT extrp_apn_pdt_fk FOREIGN KEY (applicant_documents_id) REFERENCES eservices.person_document(id);


--
-- Name: regprof_application extrp_apn_pen_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_application
    ADD CONSTRAINT extrp_apn_pen_fk FOREIGN KEY (applicant_id) REFERENCES eservices.person(id);


--
-- Name: regprof_application extrp_apn_representative_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_application
    ADD CONSTRAINT extrp_apn_representative_fk FOREIGN KEY (representative_id) REFERENCES eservices.person(id);


--
-- Name: regprof_application extrp_apn_rpapn_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_application
    ADD CONSTRAINT extrp_apn_rpapn_fk FOREIGN KEY (regprof_application_id) REFERENCES regprof.regprof_application(id);


--
-- Name: regprof_application extrp_apn_ste_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_application
    ADD CONSTRAINT extrp_apn_ste_fk FOREIGN KEY (service_type_id) REFERENCES nomenclatures.service_type(id);


--
-- Name: regprof_application extrp_apn_tce_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_application
    ADD CONSTRAINT extrp_apn_tce_fk FOREIGN KEY (training_course_id) REFERENCES eservices.regprof_training_course(id);


--
-- Name: regprof_training_course extrp_sdk_edt_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_training_course
    ADD CONSTRAINT extrp_sdk_edt_fk FOREIGN KEY (sdk_document_type) REFERENCES nomenclatures.education_document_type(id);


--
-- Name: regprof_training_course extrp_tce_cit_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_training_course
    ADD CONSTRAINT extrp_tce_cit_fk FOREIGN KEY (document_civil_id_type) REFERENCES nomenclatures.civil_id_type(id);


--
-- Name: regprof_training_course extrp_tce_cpq_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_training_course
    ADD CONSTRAINT extrp_tce_cpq_fk FOREIGN KEY (certificate_prof_qualification_id) REFERENCES nomenclatures.certificate_prof_qualification(id);


--
-- Name: regprof_training_course extrp_tce_edt_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_training_course
    ADD CONSTRAINT extrp_tce_edt_fk FOREIGN KEY (document_type) REFERENCES nomenclatures.education_document_type(id);


--
-- Name: regprof_training_course extrp_tce_ete_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_training_course
    ADD CONSTRAINT extrp_tce_ete_fk FOREIGN KEY (education_type_id) REFERENCES nomenclatures.education_type(id);


--
-- Name: regprof_training_course extrp_tce_hel_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_training_course
    ADD CONSTRAINT extrp_tce_hel_fk FOREIGN KEY (high_edu_level_id) REFERENCES nomenclatures.edu_level(id);


--
-- Name: regprof_training_course extrp_tce_hpq_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_training_course
    ADD CONSTRAINT extrp_tce_hpq_fk FOREIGN KEY (high_prof_qualification_id) REFERENCES nomenclatures.higher_prof_qualification(id);


--
-- Name: regprof_training_course extrp_tce_pin_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_training_course
    ADD CONSTRAINT extrp_tce_pin_fk FOREIGN KEY (prof_institution_id) REFERENCES regprof.professional_institution(id);


--
-- Name: regprof_training_course extrp_tce_pinn; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_training_course
    ADD CONSTRAINT extrp_tce_pinn FOREIGN KEY (prof_institution_org_name_id) REFERENCES regprof.professional_institution_names(id);


--
-- Name: regprof_training_course extrp_tce_pinn_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_training_course
    ADD CONSTRAINT extrp_tce_pinn_fk FOREIGN KEY (sdk_prof_institution_org_name_id) REFERENCES regprof.professional_institution_names(id);


--
-- Name: regprof_training_course extrp_tce_scr_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_training_course
    ADD CONSTRAINT extrp_tce_scr_fk FOREIGN KEY (sec_caliber_id) REFERENCES nomenclatures.secondary_caliber(id);


--
-- Name: regprof_training_course extrp_tce_sdk_pin_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_training_course
    ADD CONSTRAINT extrp_tce_sdk_pin_fk FOREIGN KEY (sdk_prof_institution_id) REFERENCES regprof.professional_institution(id);


--
-- Name: regprof_training_course extrp_tce_sdk_pqn_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_training_course
    ADD CONSTRAINT extrp_tce_sdk_pqn_fk FOREIGN KEY (sdk_prof_qualification_id) REFERENCES nomenclatures.higher_prof_qualification(id);


--
-- Name: regprof_training_course extrp_tce_spq_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_training_course
    ADD CONSTRAINT extrp_tce_spq_fk FOREIGN KEY (sec_prof_qualification_id) REFERENCES nomenclatures.secondary_prof_qualification(id);


--
-- Name: inquiry_files inquiry_files_blob_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.inquiry_files
    ADD CONSTRAINT inquiry_files_blob_fk FOREIGN KEY (blob_id) REFERENCES blobs.blobs(id);


--
-- Name: inquiry_files inquiry_files_inquiry_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.inquiry_files
    ADD CONSTRAINT inquiry_files_inquiry_fk FOREIGN KEY (inquiry_id) REFERENCES eservices.inquiry(id);


--
-- Name: irregularity_relation irregularity_relation_irregularity_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.irregularity_relation
    ADD CONSTRAINT irregularity_relation_irregularity_id_fkey FOREIGN KEY (irregularity_id) REFERENCES nomenclatures.irregularities(id);


--
-- Name: irregularity_relation irregularity_relation_service_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.irregularity_relation
    ADD CONSTRAINT irregularity_relation_service_id_fkey FOREIGN KEY (service_id) REFERENCES eservices.service_irregularity(id);


--
-- Name: official_notes official_note_company_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.official_notes
    ADD CONSTRAINT official_note_company_fkey FOREIGN KEY (company_id) REFERENCES eservices.company(id);


--
-- Name: official_note_files official_note_files_blob_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.official_note_files
    ADD CONSTRAINT official_note_files_blob_fk FOREIGN KEY (blob_id) REFERENCES blobs.blobs(id);


--
-- Name: official_note_files official_note_files_official_note_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.official_note_files
    ADD CONSTRAINT official_note_files_official_note_fk FOREIGN KEY (official_note_id) REFERENCES eservices.official_notes(id);


--
-- Name: official_notes official_note_representative_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.official_notes
    ADD CONSTRAINT official_note_representative_fkey FOREIGN KEY (representative_id) REFERENCES eservices.person(id);


--
-- Name: official_notes official_notes_applicant_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.official_notes
    ADD CONSTRAINT official_notes_applicant_fkey FOREIGN KEY (applicant_id) REFERENCES eservices.person(id);


--
-- Name: official_notes official_notes_contact_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.official_notes
    ADD CONSTRAINT official_notes_contact_fkey FOREIGN KEY (contact_details_id) REFERENCES eservices.address(id);


--
-- Name: person person_address_id; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.person
    ADD CONSTRAINT person_address_id FOREIGN KEY (address_id) REFERENCES eservices.address(id);


--
-- Name: person person_citizenship_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.person
    ADD CONSTRAINT person_citizenship_id_fkey FOREIGN KEY (citizenship_id) REFERENCES nomenclatures.country(id);


--
-- Name: training_course person_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.training_course
    ADD CONSTRAINT person_id_fkey FOREIGN KEY (person_id) REFERENCES public.person(id);


--
-- Name: recommendation_blob recommendation_blob_blob_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.recommendation_blob
    ADD CONSTRAINT recommendation_blob_blob_id_fkey FOREIGN KEY (blob_id) REFERENCES blobs.blobs(id) ON UPDATE CASCADE;


--
-- Name: recommendation_blob recommendation_blob_recommendation_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.recommendation_blob
    ADD CONSTRAINT recommendation_blob_recommendation_id_fkey FOREIGN KEY (recommendation_id) REFERENCES eservices.recommendation(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: recommendation_diploma_type recommendation_diploma_type_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.recommendation_diploma_type
    ADD CONSTRAINT recommendation_diploma_type_id_fkey FOREIGN KEY (diploma_type_id) REFERENCES public.diploma_type(id) ON UPDATE CASCADE;


--
-- Name: recommendation_diploma_type recommendation_diploma_type_recommendation_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.recommendation_diploma_type
    ADD CONSTRAINT recommendation_diploma_type_recommendation_id_fkey FOREIGN KEY (recommendation_id) REFERENCES eservices.recommendation(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: recommendation_training_course recommendation_training_course_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.recommendation_training_course
    ADD CONSTRAINT recommendation_training_course_id_fkey FOREIGN KEY (training_course_id) REFERENCES public.training_course(id) ON UPDATE CASCADE;


--
-- Name: recommendation_training_course recommendation_training_course_recommendation_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.recommendation_training_course
    ADD CONSTRAINT recommendation_training_course_recommendation_id_fkey FOREIGN KEY (recommendation_id) REFERENCES eservices.recommendation(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: regprof_application_comments regprof_application_comments_application_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_application_comments
    ADD CONSTRAINT regprof_application_comments_application_id_fkey FOREIGN KEY (application_id) REFERENCES eservices.regprof_application(id);


--
-- Name: regprof_application_comments regprof_application_comments_send_email_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_application_comments
    ADD CONSTRAINT regprof_application_comments_send_email_fkey FOREIGN KEY (email_id) REFERENCES public.email(id);


--
-- Name: regprof_application_comments regprof_application_comments_user_created_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_application_comments
    ADD CONSTRAINT regprof_application_comments_user_created_fkey FOREIGN KEY (user_created) REFERENCES public.users(id);


--
-- Name: regprof_document_recipient regprof_document_recipient_application_id_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_document_recipient
    ADD CONSTRAINT regprof_document_recipient_application_id_fk FOREIGN KEY (application_id) REFERENCES eservices.regprof_application(id);


--
-- Name: regprof_document_recipient regprof_document_recipient_country_id_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.regprof_document_recipient
    ADD CONSTRAINT regprof_document_recipient_country_id_fk FOREIGN KEY (country_id) REFERENCES nomenclatures.country(id);


--
-- Name: public_access representative; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.public_access
    ADD CONSTRAINT representative FOREIGN KEY (representative_id) REFERENCES eservices.public_person(id);


--
-- Name: bibliographic_references representative_administrative_structure_public_person_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.bibliographic_references
    ADD CONSTRAINT representative_administrative_structure_public_person_fkey FOREIGN KEY (representative_administrative_id) REFERENCES eservices.public_person(id);


--
-- Name: inquiry representative_analityc_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.inquiry
    ADD CONSTRAINT representative_analityc_fkey FOREIGN KEY (representative_id) REFERENCES eservices.person(id);


--
-- Name: bibliographic_references representative_analityc_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.bibliographic_references
    ADD CONSTRAINT representative_analityc_fkey FOREIGN KEY (representative_id) REFERENCES eservices.person(id);


--
-- Name: analytic_products representative_analityc_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.analytic_products
    ADD CONSTRAINT representative_analityc_fkey FOREIGN KEY (representative_id) REFERENCES eservices.person(id);


--
-- Name: rudi_application representative_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_application
    ADD CONSTRAINT representative_fkey FOREIGN KEY (representative_id) REFERENCES eservices.person(id);


--
-- Name: rudi_training_course rtc_thesis_language_id_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_training_course
    ADD CONSTRAINT rtc_thesis_language_id_fk FOREIGN KEY (thesis_language_id) REFERENCES nomenclatures.language(id);


--
-- Name: rudi_application_comments rudi_application_comments_application_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_application_comments
    ADD CONSTRAINT rudi_application_comments_application_id_fkey FOREIGN KEY (application_id) REFERENCES eservices.rudi_application(id);


--
-- Name: rudi_application_comments rudi_application_comments_send_email_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_application_comments
    ADD CONSTRAINT rudi_application_comments_send_email_fkey FOREIGN KEY (email_id) REFERENCES public.email(id);


--
-- Name: rudi_application_comments rudi_application_comments_user_created_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_application_comments
    ADD CONSTRAINT rudi_application_comments_user_created_fkey FOREIGN KEY (user_created) REFERENCES public.users(id);


--
-- Name: rudi_application_kind rudi_application_kind_application_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_application_kind
    ADD CONSTRAINT rudi_application_kind_application_id_fkey FOREIGN KEY (application_id) REFERENCES eservices.rudi_application(id);


--
-- Name: rudi_application_kind rudi_application_kind_entry_num_series_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_application_kind
    ADD CONSTRAINT rudi_application_kind_entry_num_series_fk FOREIGN KEY (entry_num_series_id) REFERENCES numgenerator.entry_num_series(id);


--
-- Name: rudi_document_recipient rudi_document_recipient_application_id_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_document_recipient
    ADD CONSTRAINT rudi_document_recipient_application_id_fk FOREIGN KEY (application_id) REFERENCES eservices.rudi_application(id);


--
-- Name: rudi_document_recipient rudi_document_recipient_country_id_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_document_recipient
    ADD CONSTRAINT rudi_document_recipient_country_id_fk FOREIGN KEY (country_id) REFERENCES nomenclatures.country(id);


--
-- Name: rudi_training_course rudi_training_course_owner_id_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_training_course
    ADD CONSTRAINT rudi_training_course_owner_id_fk FOREIGN KEY (owner_id) REFERENCES eservices.person(id);


--
-- Name: address settlement; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.address
    ADD CONSTRAINT settlement FOREIGN KEY (settlement_id) REFERENCES nomenclatures.graosettlements(id);


--
-- Name: signals signal_company_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.signals
    ADD CONSTRAINT signal_company_fk FOREIGN KEY (company_id) REFERENCES eservices.company(id);


--
-- Name: signals signal_contact_details_id; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.signals
    ADD CONSTRAINT signal_contact_details_id FOREIGN KEY (contact_details_id) REFERENCES eservices.address(id);


--
-- Name: signal_files signal_files_blob_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.signal_files
    ADD CONSTRAINT signal_files_blob_fk FOREIGN KEY (blob_id) REFERENCES blobs.blobs(id);


--
-- Name: signal_files signal_files_signal_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.signal_files
    ADD CONSTRAINT signal_files_signal_fk FOREIGN KEY (signal_id) REFERENCES eservices.signals(id);


--
-- Name: signals signal_representative_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.signals
    ADD CONSTRAINT signal_representative_fk FOREIGN KEY (representative_id) REFERENCES eservices.public_person(id);


--
-- Name: signals signals_applicant_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.signals
    ADD CONSTRAINT signals_applicant_fk FOREIGN KEY (applicant_id) REFERENCES public.person(id);


--
-- Name: signed_docs signed_docs_id_blob_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.signed_docs
    ADD CONSTRAINT signed_docs_id_blob_id_fkey FOREIGN KEY (file_id) REFERENCES blobs.blobs(id);


--
-- Name: suggestions suggestion_contact_details_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.suggestions
    ADD CONSTRAINT suggestion_contact_details_fk FOREIGN KEY (contact_details_id) REFERENCES eservices.address(id);


--
-- Name: suggestion_files suggestion_files_blob_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.suggestion_files
    ADD CONSTRAINT suggestion_files_blob_fk FOREIGN KEY (blob_id) REFERENCES blobs.blobs(id);


--
-- Name: suggestion_files suggestion_files_suggestion_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.suggestion_files
    ADD CONSTRAINT suggestion_files_suggestion_fk FOREIGN KEY (suggestion_id) REFERENCES eservices.suggestions(id);


--
-- Name: suggestions suggestion_representative_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.suggestions
    ADD CONSTRAINT suggestion_representative_fk FOREIGN KEY (representative_id) REFERENCES eservices.public_person(id);


--
-- Name: suggestions suggestions_applicant_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.suggestions
    ADD CONSTRAINT suggestions_applicant_fk FOREIGN KEY (applicant_id) REFERENCES public.person(id);


--
-- Name: suggestions suggestions_company_id_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.suggestions
    ADD CONSTRAINT suggestions_company_id_fk FOREIGN KEY (company_id) REFERENCES eservices.company(id);


--
-- Name: rudi_training_course tc_prof_group_fk; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.rudi_training_course
    ADD CONSTRAINT tc_prof_group_fk FOREIGN KEY (prof_group_id) REFERENCES nomenclatures.prof_group(id);


--
-- Name: training_course training_form_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.training_course
    ADD CONSTRAINT training_form_id_fkey FOREIGN KEY (training_form_id) REFERENCES nomenclatures.training_form(id);


--
-- Name: training_course tspeciality_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.training_course
    ADD CONSTRAINT tspeciality_id_fkey FOREIGN KEY (speciality_id) REFERENCES nomenclatures.speciality(id);


--
-- Name: application_university university_id_fkey; Type: FK CONSTRAINT; Schema: eservices; Owner: postgres
--

ALTER TABLE ONLY eservices.application_university
    ADD CONSTRAINT university_id_fkey FOREIGN KEY (university_id) REFERENCES public.university(id);


--
-- Name: academic_title academic_title_country_code_fk; Type: FK CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.academic_title
    ADD CONSTRAINT academic_title_country_code_fk FOREIGN KEY (country_code) REFERENCES isobaq.country(code);


--
-- Name: access_further_bologna access_bologna_bologna_cycle_id_fk; Type: FK CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.access_further_bologna
    ADD CONSTRAINT access_bologna_bologna_cycle_id_fk FOREIGN KEY (bologna_cycle_id) REFERENCES isobaq.bologna_cycle(id);


--
-- Name: access_further_bologna access_bologna_edu_doc_type_id_fk; Type: FK CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.access_further_bologna
    ADD CONSTRAINT access_bologna_edu_doc_type_id_fk FOREIGN KEY (edu_doc_type_id) REFERENCES isobaq.edu_doc_type(id);


--
-- Name: access_further_eqf access_eqf_edu_doc_type_id_fk; Type: FK CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.access_further_eqf
    ADD CONSTRAINT access_eqf_edu_doc_type_id_fk FOREIGN KEY (edu_doc_type_id) REFERENCES isobaq.edu_doc_type(id);


--
-- Name: access_further_eqf access_eqf_eqf_id_fk; Type: FK CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.access_further_eqf
    ADD CONSTRAINT access_eqf_eqf_id_fk FOREIGN KEY (eqf_id) REFERENCES isobaq.eqf(id);


--
-- Name: access_further_nqf access_nqf_edu_doc_type_id_fk; Type: FK CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.access_further_nqf
    ADD CONSTRAINT access_nqf_edu_doc_type_id_fk FOREIGN KEY (edu_doc_type_id) REFERENCES isobaq.edu_doc_type(id);


--
-- Name: access_further_nqf access_nqf_nqf_id_fk; Type: FK CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.access_further_nqf
    ADD CONSTRAINT access_nqf_nqf_id_fk FOREIGN KEY (nqf_id) REFERENCES isobaq.nqf(id);


--
-- Name: edu_doc_type_descrs aedu_doc_type_descrs_edu_doc_type_id_fk; Type: FK CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.edu_doc_type_descrs
    ADD CONSTRAINT aedu_doc_type_descrs_edu_doc_type_id_fk FOREIGN KEY (edu_doc_type_id) REFERENCES isobaq.edu_doc_type(id);


--
-- Name: edu_doc_type_linkages aedu_doc_type_linkagesedu_doc_type_id_fk; Type: FK CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.edu_doc_type_linkages
    ADD CONSTRAINT aedu_doc_type_linkagesedu_doc_type_id_fk FOREIGN KEY (edu_doc_type_id) REFERENCES isobaq.edu_doc_type(id);


--
-- Name: edu_doc_type_views aedu_doc_type_views_edu_doc_type_id_fk; Type: FK CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.edu_doc_type_views
    ADD CONSTRAINT aedu_doc_type_views_edu_doc_type_id_fk FOREIGN KEY (edu_doc_type_id) REFERENCES isobaq.edu_doc_type(id);


--
-- Name: award_institution_type award_institution_type_country_code_fk; Type: FK CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.award_institution_type
    ADD CONSTRAINT award_institution_type_country_code_fk FOREIGN KEY (country_code) REFERENCES isobaq.country(code);


--
-- Name: blobs2 blobs2_created_user_id_fk; Type: FK CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.blobs2
    ADD CONSTRAINT blobs2_created_user_id_fk FOREIGN KEY (created_user_id) REFERENCES isobaq.isobaq_user(id);


--
-- Name: blobs blobs_created_user_id_fk; Type: FK CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.blobs
    ADD CONSTRAINT blobs_created_user_id_fk FOREIGN KEY (created_user_id) REFERENCES isobaq.isobaq_user(id);


--
-- Name: edu_doc_type edu_doc_type_academic_title_id_fk; Type: FK CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.edu_doc_type
    ADD CONSTRAINT edu_doc_type_academic_title_id_fk FOREIGN KEY (academic_title_id) REFERENCES isobaq.academic_title(id);


--
-- Name: edu_doc_type edu_doc_type_award_inst_type_id_fk; Type: FK CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.edu_doc_type
    ADD CONSTRAINT edu_doc_type_award_inst_type_id_fk FOREIGN KEY (award_institution_type_id) REFERENCES isobaq.award_institution_type(id);


--
-- Name: edu_doc_type edu_doc_type_bologna_cycle_id_fk; Type: FK CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.edu_doc_type
    ADD CONSTRAINT edu_doc_type_bologna_cycle_id_fk FOREIGN KEY (bologna_cycle_id) REFERENCES isobaq.bologna_cycle(id);


--
-- Name: edu_doc_type edu_doc_type_country_code_fk; Type: FK CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.edu_doc_type
    ADD CONSTRAINT edu_doc_type_country_code_fk FOREIGN KEY (country_code) REFERENCES isobaq.country(code);


--
-- Name: edu_doc_type edu_doc_type_created_user_id_fk; Type: FK CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.edu_doc_type
    ADD CONSTRAINT edu_doc_type_created_user_id_fk FOREIGN KEY (created_user_id) REFERENCES isobaq.isobaq_user(id);


--
-- Name: edu_doc_type_descrs edu_doc_type_descrs_blob_id_fk; Type: FK CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.edu_doc_type_descrs
    ADD CONSTRAINT edu_doc_type_descrs_blob_id_fk FOREIGN KEY (blob_id) REFERENCES isobaq.blobs(id);


--
-- Name: edu_doc_type edu_doc_type_doc_type_id_fk; Type: FK CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.edu_doc_type
    ADD CONSTRAINT edu_doc_type_doc_type_id_fk FOREIGN KEY (doc_type_id) REFERENCES isobaq.doc_type(id);


--
-- Name: edu_doc_type edu_doc_type_eqf_id_fk; Type: FK CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.edu_doc_type
    ADD CONSTRAINT edu_doc_type_eqf_id_fk FOREIGN KEY (eqf_id) REFERENCES isobaq.eqf(id);


--
-- Name: edu_doc_type_linkages edu_doc_type_linkages_blob_id_fk; Type: FK CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.edu_doc_type_linkages
    ADD CONSTRAINT edu_doc_type_linkages_blob_id_fk FOREIGN KEY (blob_id) REFERENCES isobaq.blobs(id);


--
-- Name: edu_doc_type_nat_heis edu_doc_type_nat_heis_blob_id_fk; Type: FK CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.edu_doc_type_nat_heis
    ADD CONSTRAINT edu_doc_type_nat_heis_blob_id_fk FOREIGN KEY (blob_id) REFERENCES isobaq.blobs(id);


--
-- Name: edu_doc_type_nat_heis edu_doc_type_nat_heis_edu_doc_type_id_fk; Type: FK CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.edu_doc_type_nat_heis
    ADD CONSTRAINT edu_doc_type_nat_heis_edu_doc_type_id_fk FOREIGN KEY (edu_doc_type_id) REFERENCES isobaq.edu_doc_type(id);


--
-- Name: edu_doc_type edu_doc_type_nqf_id_fk; Type: FK CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.edu_doc_type
    ADD CONSTRAINT edu_doc_type_nqf_id_fk FOREIGN KEY (nqf_id) REFERENCES isobaq.nqf(id);


--
-- Name: edu_doc_type edu_doc_type_updated_user_id_fk; Type: FK CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.edu_doc_type
    ADD CONSTRAINT edu_doc_type_updated_user_id_fk FOREIGN KEY (updated_user_id) REFERENCES isobaq.isobaq_user(id);


--
-- Name: edu_doc_type_views edu_doc_type_views_blob_id_fk; Type: FK CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.edu_doc_type_views
    ADD CONSTRAINT edu_doc_type_views_blob_id_fk FOREIGN KEY (blob_id) REFERENCES isobaq.blobs(id);


--
-- Name: isobaq_authority isobaq_authority_isobaq_user_id_fkey; Type: FK CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.isobaq_authority
    ADD CONSTRAINT isobaq_authority_isobaq_user_id_fkey FOREIGN KEY (isobaq_user_id) REFERENCES isobaq.isobaq_user(id);


--
-- Name: isobaq_user isobaq_user_created_user_id_fkey; Type: FK CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.isobaq_user
    ADD CONSTRAINT isobaq_user_created_user_id_fkey FOREIGN KEY (created_user_id) REFERENCES isobaq.isobaq_user(id);


--
-- Name: isobaq_user isobaq_user_updated_user_id_fkey; Type: FK CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.isobaq_user
    ADD CONSTRAINT isobaq_user_updated_user_id_fkey FOREIGN KEY (updated_user_id) REFERENCES isobaq.isobaq_user(id);


--
-- Name: nqf nqf_country_code_fk; Type: FK CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.nqf
    ADD CONSTRAINT nqf_country_code_fk FOREIGN KEY (country_code) REFERENCES isobaq.country(code);


--
-- Name: edu_doc_type way_of_graduation_id_fk; Type: FK CONSTRAINT; Schema: isobaq; Owner: postgres
--

ALTER TABLE ONLY isobaq.edu_doc_type
    ADD CONSTRAINT way_of_graduation_id_fk FOREIGN KEY (way_of_graduation_id) REFERENCES isobaq.way_of_graduation(id);


--
-- Name: doc_type_to_doc_category doc_type_to_doc_category_doc_category_id_fkey; Type: FK CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.doc_type_to_doc_category
    ADD CONSTRAINT doc_type_to_doc_category_doc_category_id_fkey FOREIGN KEY (doc_category_id) REFERENCES nomenclatures.doc_category(id);


--
-- Name: doc_type_to_doc_category doc_type_to_doc_category_doc_type_id_fkey; Type: FK CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.doc_type_to_doc_category
    ADD CONSTRAINT doc_type_to_doc_category_doc_type_id_fkey FOREIGN KEY (doc_type_id) REFERENCES nomenclatures.doc_types(id);


--
-- Name: edu_level_to_app_type elat_edu_level_id_fk; Type: FK CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.edu_level_to_app_type
    ADD CONSTRAINT elat_edu_level_id_fk FOREIGN KEY (edu_level_id) REFERENCES nomenclatures.edu_level(id);


--
-- Name: expert_position epn_status_id_fk; Type: FK CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.expert_position
    ADD CONSTRAINT epn_status_id_fk FOREIGN KEY (related_app_status_id) REFERENCES nomenclatures.app_status(id);


--
-- Name: irregularity_service irregularity_service_entry_num_series_fkey; Type: FK CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.irregularity_service
    ADD CONSTRAINT irregularity_service_entry_num_series_fkey FOREIGN KEY (entry_num_series) REFERENCES numgenerator.entry_num_series(id);


--
-- Name: irregularity_service irregularity_service_irregularity_id_fkey; Type: FK CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.irregularity_service
    ADD CONSTRAINT irregularity_service_irregularity_id_fkey FOREIGN KEY (irregularity_id) REFERENCES nomenclatures.irregularities(id);


--
-- Name: legal_reason_to_app_type lrat_legal_reason_id_fk; Type: FK CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.legal_reason_to_app_type
    ADD CONSTRAINT lrat_legal_reason_id_fk FOREIGN KEY (legal_reason_id) REFERENCES nomenclatures.legal_reason(id);


--
-- Name: prof_group n_edu_area_n_prof_group_fk1; Type: FK CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.prof_group
    ADD CONSTRAINT n_edu_area_n_prof_group_fk1 FOREIGN KEY (edu_area_id) REFERENCES nomenclatures.edu_area(id);


--
-- Name: speciality n_prof_group_n_speciality_fk1; Type: FK CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.speciality
    ADD CONSTRAINT n_prof_group_n_speciality_fk1 FOREIGN KEY (prof_group_id) REFERENCES nomenclatures.prof_group(id);


--
-- Name: national_qualifications_framework national_qualifications_framework_country_id_fkey; Type: FK CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.national_qualifications_framework
    ADD CONSTRAINT national_qualifications_framework_country_id_fkey FOREIGN KEY (country_id) REFERENCES nomenclatures.country(id);


--
-- Name: original_edu_level original_edu_level_country_id_fkey; Type: FK CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.original_edu_level
    ADD CONSTRAINT original_edu_level_country_id_fkey FOREIGN KEY (country_id) REFERENCES nomenclatures.country(id);


--
-- Name: original_edu_level original_edu_level_edu_level_id_fkey; Type: FK CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.original_edu_level
    ADD CONSTRAINT original_edu_level_edu_level_id_fkey FOREIGN KEY (edu_level_id) REFERENCES nomenclatures.edu_level(id);


--
-- Name: secondary_prof_qualification prof_group_fk; Type: FK CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.secondary_prof_qualification
    ADD CONSTRAINT prof_group_fk FOREIGN KEY (profession_group_id) REFERENCES nomenclatures.secondary_profession_group(id);


--
-- Name: secondary_speciality prof_qual_fk; Type: FK CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.secondary_speciality
    ADD CONSTRAINT prof_qual_fk FOREIGN KEY (prof_qualification_id) REFERENCES nomenclatures.secondary_prof_qualification(id);


--
-- Name: secondary_speciality qualif_degree_fk; Type: FK CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.secondary_speciality
    ADD CONSTRAINT qualif_degree_fk FOREIGN KEY (qualification_degree_id) REFERENCES nomenclatures.secondary_qualification_degree(id);


--
-- Name: article_item regprof_aricle_directive_id_fk; Type: FK CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.article_item
    ADD CONSTRAINT regprof_aricle_directive_id_fk FOREIGN KEY (article_directive_id) REFERENCES nomenclatures.article_directive(id);


--
-- Name: way_of_graduation_to_app_type way_of_graduation_app_type_way_of_graduation_id_fkey; Type: FK CONSTRAINT; Schema: nomenclatures; Owner: postgres
--

ALTER TABLE ONLY nomenclatures.way_of_graduation_to_app_type
    ADD CONSTRAINT way_of_graduation_app_type_way_of_graduation_id_fkey FOREIGN KEY (way_of_graduation_id) REFERENCES nomenclatures.way_of_graduation(id);


--
-- Name: entry_nums entry_nums_series_id_fkey; Type: FK CONSTRAINT; Schema: numgenerator; Owner: postgres
--

ALTER TABLE ONLY numgenerator.entry_nums
    ADD CONSTRAINT entry_nums_series_id_fkey FOREIGN KEY (series_id) REFERENCES numgenerator.entry_num_series(id);


--
-- Name: entry_nums entry_nums_submission_type_fkey; Type: FK CONSTRAINT; Schema: numgenerator; Owner: postgres
--

ALTER TABLE ONLY numgenerator.entry_nums
    ADD CONSTRAINT entry_nums_submission_type_fkey FOREIGN KEY (submission_type) REFERENCES numgenerator.submission_types(id);


--
-- Name: epay_code epay_code_liabilities_fk; Type: FK CONSTRAINT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.epay_code
    ADD CONSTRAINT epay_code_liabilities_fk FOREIGN KEY (liability_id) REFERENCES payments.liabilities(id);


--
-- Name: epay_module_configurations epay_module_configurations_epay_merchant_config_id_fkey; Type: FK CONSTRAINT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.epay_module_configurations
    ADD CONSTRAINT epay_module_configurations_epay_merchant_config_id_fkey FOREIGN KEY (epay_merchant_config_id) REFERENCES payments.epay_merchant_configurations(id);


--
-- Name: liability_code_to_module liability_code_to_module_liability_code_fkey; Type: FK CONSTRAINT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.liability_code_to_module
    ADD CONSTRAINT liability_code_to_module_liability_code_fkey FOREIGN KEY (liability_code) REFERENCES payments.nom_liability_codes(liability_code);


--
-- Name: liability_code_to_module liability_code_to_module_module_fk; Type: FK CONSTRAINT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.liability_code_to_module
    ADD CONSTRAINT liability_code_to_module_module_fk FOREIGN KEY (module) REFERENCES payments.modules(module);


--
-- Name: liability_details liability_details_liability_code_fkey; Type: FK CONSTRAINT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.liability_details
    ADD CONSTRAINT liability_details_liability_code_fkey FOREIGN KEY (liability_code) REFERENCES payments.nom_liability_codes(liability_code);


--
-- Name: liabilities liability_module_fk; Type: FK CONSTRAINT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.liabilities
    ADD CONSTRAINT liability_module_fk FOREIGN KEY (module) REFERENCES payments.modules(module);


--
-- Name: module_configurations module_configuration_module_fk; Type: FK CONSTRAINT; Schema: payments; Owner: postgres
--

ALTER TABLE ONLY payments.module_configurations
    ADD CONSTRAINT module_configuration_module_fk FOREIGN KEY (module) REFERENCES payments.modules(module);


--
-- Name: application apn_applicant_company_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application
    ADD CONSTRAINT apn_applicant_company_id_fk FOREIGN KEY (applicant_company_id) REFERENCES backoffice.company(id);


--
-- Name: application apn_company_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application
    ADD CONSTRAINT apn_company_id_fk FOREIGN KEY (company_id) REFERENCES backoffice.company(id);


--
-- Name: application app_applicant_personal_id_document_type_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application
    ADD CONSTRAINT app_applicant_personal_id_document_type_fk FOREIGN KEY (applicant_personal_id_document_type) REFERENCES nomenclatures.personal_id_document_type(id);


--
-- Name: application_changes_history app_changes_app_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application_changes_history
    ADD CONSTRAINT app_changes_app_id_fk FOREIGN KEY (application_id) REFERENCES public.application(id);


--
-- Name: application_changes_history app_changes_usr_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application_changes_history
    ADD CONSTRAINT app_changes_usr_id_fk FOREIGN KEY (user_id) REFERENCES public.users(id);


--
-- Name: app_status_history app_status_history_application_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.app_status_history
    ADD CONSTRAINT app_status_history_application_id_fkey FOREIGN KEY (application_id) REFERENCES public.application(id);


--
-- Name: app_status_history app_status_history_status_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.app_status_history
    ADD CONSTRAINT app_status_history_status_id_fkey FOREIGN KEY (status_id) REFERENCES nomenclatures.app_status(id);


--
-- Name: application app_usr_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application
    ADD CONSTRAINT app_usr_id_fk FOREIGN KEY (created_by_user_id) REFERENCES public.users(id);


--
-- Name: application application_app_status_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application
    ADD CONSTRAINT application_app_status_id_fk FOREIGN KEY (app_status_id) REFERENCES nomenclatures.app_status(id);


--
-- Name: attached_docs application_attached_docs_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.attached_docs
    ADD CONSTRAINT application_attached_docs_fk1 FOREIGN KEY (parent_id) REFERENCES public.application(id);


--
-- Name: comission_agenda application_comission_agenda_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comission_agenda
    ADD CONSTRAINT application_comission_agenda_fk1 FOREIGN KEY (application_id) REFERENCES public.application(id);


--
-- Name: application application_docflow_status_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application
    ADD CONSTRAINT application_docflow_status_id_fk FOREIGN KEY (docflow_status_id) REFERENCES nomenclatures.app_status_docflow(id);


--
-- Name: application_expert application_expert_application_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application_expert
    ADD CONSTRAINT application_expert_application_id_fkey FOREIGN KEY (application_id) REFERENCES public.application(id);


--
-- Name: application_expert application_expert_edu_level_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application_expert
    ADD CONSTRAINT application_expert_edu_level_fk FOREIGN KEY (edu_level) REFERENCES nomenclatures.edu_level(id);


--
-- Name: application_expert application_expert_expert_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application_expert
    ADD CONSTRAINT application_expert_expert_id_fkey FOREIGN KEY (expert_id) REFERENCES public.comission_member(id);


--
-- Name: application_expert application_expert_legal_reason_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application_expert
    ADD CONSTRAINT application_expert_legal_reason_fkey FOREIGN KEY (legal_reason) REFERENCES nomenclatures.legal_reason(id);


--
-- Name: application_expert application_expert_position_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application_expert
    ADD CONSTRAINT application_expert_position_fkey FOREIGN KEY ("position") REFERENCES nomenclatures.expert_position(id);


--
-- Name: application_expert application_expert_qualification_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application_expert
    ADD CONSTRAINT application_expert_qualification_fk FOREIGN KEY (qualification) REFERENCES nomenclatures.qualification(id);


--
-- Name: application_expert_specialities application_expert_specialities_application_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application_expert_specialities
    ADD CONSTRAINT application_expert_specialities_application_id_fkey FOREIGN KEY (application_id) REFERENCES public.application(id);


--
-- Name: application_expert_specialities application_expert_specialities_expert_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application_expert_specialities
    ADD CONSTRAINT application_expert_specialities_expert_id_fkey FOREIGN KEY (expert_id) REFERENCES public.comission_member(id);


--
-- Name: application_expert_specialities application_expert_specialities_speciality_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application_expert_specialities
    ADD CONSTRAINT application_expert_specialities_speciality_id_fkey FOREIGN KEY (speciality_id) REFERENCES nomenclatures.speciality(id);


--
-- Name: expert_statement application_expert_statement_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.expert_statement
    ADD CONSTRAINT application_expert_statement_fk1 FOREIGN KEY (application_id) REFERENCES public.application(id);


--
-- Name: application_kind application_kind_application_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application_kind
    ADD CONSTRAINT application_kind_application_id_fkey FOREIGN KEY (application_id) REFERENCES public.application(id);


--
-- Name: application_kind application_kind_entry_num_series_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application_kind
    ADD CONSTRAINT application_kind_entry_num_series_fk FOREIGN KEY (entry_num_series_id) REFERENCES numgenerator.entry_num_series(id);


--
-- Name: application_kind application_kind_final_status_history_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application_kind
    ADD CONSTRAINT application_kind_final_status_history_id_fkey FOREIGN KEY (final_status_history_id) REFERENCES public.app_status_history(id);


--
-- Name: purpose_of_recognition application_purpose_of_recognition_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.purpose_of_recognition
    ADD CONSTRAINT application_purpose_of_recognition_fk1 FOREIGN KEY (application_id) REFERENCES public.application(id);


--
-- Name: bg_academic_recognition_info arn_uny_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.bg_academic_recognition_info
    ADD CONSTRAINT arn_uny_id FOREIGN KEY (recognized_university_id) REFERENCES public.university(id);


--
-- Name: attached_docs attached_docs_document_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.attached_docs
    ADD CONSTRAINT attached_docs_document_id_fk FOREIGN KEY (document_id) REFERENCES blobs.blobs(id);


--
-- Name: attached_docs attached_docs_document_type_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.attached_docs
    ADD CONSTRAINT attached_docs_document_type_fk FOREIGN KEY (doc_type_id) REFERENCES nomenclatures.doc_types(id);


--
-- Name: attached_docs attached_docs_scanned_document_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.attached_docs
    ADD CONSTRAINT attached_docs_scanned_document_id_fk FOREIGN KEY (scanned_document_id) REFERENCES blobs.blobs(id);


--
-- Name: cert_number_to_attached_doc cert_number_to_attached_doc_attached_doc_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cert_number_to_attached_doc
    ADD CONSTRAINT cert_number_to_attached_doc_attached_doc_id_fkey FOREIGN KEY (attached_doc_id) REFERENCES public.attached_docs(id);


--
-- Name: comission_agenda comission_calendar_comission_agenda_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comission_agenda
    ADD CONSTRAINT comission_calendar_comission_agenda_fk1 FOREIGN KEY (session_id) REFERENCES public.comission_calendar(id);


--
-- Name: comission_participation comission_calendar_comission_participation_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comission_participation
    ADD CONSTRAINT comission_calendar_comission_participation_fk1 FOREIGN KEY (session_id) REFERENCES public.comission_calendar(id);


--
-- Name: comission_participation comission_member_comission_participation_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comission_participation
    ADD CONSTRAINT comission_member_comission_participation_fk1 FOREIGN KEY (expert_id) REFERENCES public.comission_member(id);


--
-- Name: expert_statement comission_member_expert_statement_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.expert_statement
    ADD CONSTRAINT comission_member_expert_statement_fk1 FOREIGN KEY (expert_id) REFERENCES public.comission_member(id);


--
-- Name: comission_member comission_member_fk3; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comission_member
    ADD CONSTRAINT comission_member_fk3 FOREIGN KEY (comission_pos) REFERENCES nomenclatures.commission_position(id);


--
-- Name: comission_member comission_member_prof_group_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comission_member
    ADD CONSTRAINT comission_member_prof_group_id_fkey FOREIGN KEY (prof_group_id) REFERENCES nomenclatures.prof_group(id);


--
-- Name: comission_member comission_member_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comission_member
    ADD CONSTRAINT comission_member_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id);


--
-- Name: diploma_examination competent_institution_diploma_examination_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.diploma_examination
    ADD CONSTRAINT competent_institution_diploma_examination_fk1 FOREIGN KEY (competent_institution_id) REFERENCES public.competent_institution(id);


--
-- Name: sources_of_information competent_institution_sources_of_information_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sources_of_information
    ADD CONSTRAINT competent_institution_sources_of_information_fk1 FOREIGN KEY (competent_institution_id) REFERENCES public.competent_institution(id);


--
-- Name: diploma_issuer di_faculty_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.diploma_issuer
    ADD CONSTRAINT di_faculty_fk FOREIGN KEY (faculty_id) REFERENCES public.university_faculty(id);


--
-- Name: dipl_exam_attached_docs dipl_exam_attached_docs_document_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dipl_exam_attached_docs
    ADD CONSTRAINT dipl_exam_attached_docs_document_id_fk FOREIGN KEY (document_id) REFERENCES blobs.blobs(id);


--
-- Name: dipl_exam_attached_docs dipl_exam_attached_docs_scanned_document_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dipl_exam_attached_docs
    ADD CONSTRAINT dipl_exam_attached_docs_scanned_document_id_fk FOREIGN KEY (scanned_document_id) REFERENCES blobs.blobs(id);


--
-- Name: diploma_type diploma_type_acc_bologna_cycle_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.diploma_type
    ADD CONSTRAINT diploma_type_acc_bologna_cycle_id_fkey FOREIGN KEY (acc_bologna_cycle_id) REFERENCES nomenclatures.bologna_cycle(id);


--
-- Name: diploma_type diploma_type_acc_eqf_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.diploma_type
    ADD CONSTRAINT diploma_type_acc_eqf_id_fkey FOREIGN KEY (acc_eqf_id) REFERENCES nomenclatures.european_qualifications_framework(id);


--
-- Name: diploma_type diploma_type_acc_nqf_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.diploma_type
    ADD CONSTRAINT diploma_type_acc_nqf_id_fkey FOREIGN KEY (acc_nqf_id) REFERENCES nomenclatures.national_qualifications_framework(id);


--
-- Name: diploma_type_attached_docs diploma_type_attached_docs_document_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.diploma_type_attached_docs
    ADD CONSTRAINT diploma_type_attached_docs_document_id_fk FOREIGN KEY (document_id) REFERENCES blobs.blobs(id);


--
-- Name: diploma_type diploma_type_bologna_cycle_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.diploma_type
    ADD CONSTRAINT diploma_type_bologna_cycle_id_fkey FOREIGN KEY (bologna_cycle_id) REFERENCES nomenclatures.bologna_cycle(id);


--
-- Name: diploma_type_attached_docs diploma_type_diploma_type_attached_docs_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.diploma_type_attached_docs
    ADD CONSTRAINT diploma_type_diploma_type_attached_docs_fk1 FOREIGN KEY (diploma_type_id) REFERENCES public.diploma_type(id);


--
-- Name: diploma_type diploma_type_eqf_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.diploma_type
    ADD CONSTRAINT diploma_type_eqf_id_fkey FOREIGN KEY (eqf_id) REFERENCES nomenclatures.european_qualifications_framework(id);


--
-- Name: diploma_type_issuer diploma_type_issuer_diploma_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.diploma_type_issuer
    ADD CONSTRAINT diploma_type_issuer_diploma_type_id_fkey FOREIGN KEY (diploma_type_id) REFERENCES public.diploma_type(id);


--
-- Name: diploma_type diploma_type_nqf_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.diploma_type
    ADD CONSTRAINT diploma_type_nqf_id_fkey FOREIGN KEY (nqf_id) REFERENCES nomenclatures.national_qualifications_framework(id);


--
-- Name: training_course diploma_type_training_course_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_course
    ADD CONSTRAINT diploma_type_training_course_fk1 FOREIGN KEY (diploma_type_id) REFERENCES public.diploma_type(id);


--
-- Name: application document_receive_method_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application
    ADD CONSTRAINT document_receive_method_id_fk FOREIGN KEY (document_receive_method_id) REFERENCES nomenclatures.document_receive_method(id);


--
-- Name: document_recipient document_recipient_application_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.document_recipient
    ADD CONSTRAINT document_recipient_application_id_fk FOREIGN KEY (application_id) REFERENCES public.application(id);


--
-- Name: document_recipient document_recipient_country_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.document_recipient
    ADD CONSTRAINT document_recipient_country_id_fk FOREIGN KEY (country_id) REFERENCES nomenclatures.country(id);


--
-- Name: diploma_type_issuer dti_faculty_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.diploma_type_issuer
    ADD CONSTRAINT dti_faculty_fk FOREIGN KEY (faculty_id) REFERENCES public.university_faculty(id);


--
-- Name: event event_doc_category_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.event
    ADD CONSTRAINT event_doc_category_id_fkey FOREIGN KEY (doc_category_id) REFERENCES nomenclatures.doc_category(id);


--
-- Name: event event_type_event_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.event
    ADD CONSTRAINT event_type_event_fk1 FOREIGN KEY (event_type_id) REFERENCES nomenclatures.event_type(id);


--
-- Name: event event_type_event_fk2; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.event
    ADD CONSTRAINT event_type_event_fk2 FOREIGN KEY (application_id) REFERENCES public.application(id);


--
-- Name: epay_payment_details ext_epay_pmt_liab_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.epay_payment_details
    ADD CONSTRAINT ext_epay_pmt_liab_fk FOREIGN KEY (liability_id) REFERENCES public.liabilities(id);


--
-- Name: application final_status_history_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application
    ADD CONSTRAINT final_status_history_id_fk FOREIGN KEY (final_status_history_id) REFERENCES public.app_status_history(id);


--
-- Name: application n_country_application_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application
    ADD CONSTRAINT n_country_application_fk1 FOREIGN KEY (home_country_id) REFERENCES nomenclatures.country(id);


--
-- Name: purpose_of_recognition n_purpose_of_recognition_purpose_of_recognition_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.purpose_of_recognition
    ADD CONSTRAINT n_purpose_of_recognition_purpose_of_recognition_fk1 FOREIGN KEY (purpose_of_recognition_id) REFERENCES nomenclatures.purpose_of_recognition(id);


--
-- Name: training_form n_training_form_training_form_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_form
    ADD CONSTRAINT n_training_form_training_form_fk1 FOREIGN KEY (training_form_id) REFERENCES nomenclatures.training_form(id);


--
-- Name: way_of_graduation n_way_of_graduation_way_of_graduation_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.way_of_graduation
    ADD CONSTRAINT n_way_of_graduation_way_of_graduation_fk1 FOREIGN KEY (way_of_graduation_id) REFERENCES nomenclatures.way_of_graduation(id);


--
-- Name: person_document pers_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.person_document
    ADD CONSTRAINT pers_id_fk FOREIGN KEY (person_id) REFERENCES public.person(id);


--
-- Name: application person_application_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application
    ADD CONSTRAINT person_application_fk1 FOREIGN KEY (applicant_id) REFERENCES public.person(id);


--
-- Name: application person_application_fk2; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application
    ADD CONSTRAINT person_application_fk2 FOREIGN KEY (representative_id) REFERENCES public.person(id);


--
-- Name: person person_citizenship_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.person
    ADD CONSTRAINT person_citizenship_id_fkey FOREIGN KEY (citizenship_id) REFERENCES nomenclatures.country(id);


--
-- Name: bg_academic_recognition_info recognition_status_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.bg_academic_recognition_info
    ADD CONSTRAINT recognition_status_id_fk FOREIGN KEY (recognition_status_id) REFERENCES nomenclatures.bg_academic_recognition_status(id);


--
-- Name: recognized_specs recognized_specs_spec_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recognized_specs
    ADD CONSTRAINT recognized_specs_spec_id_fkey FOREIGN KEY (spec_id) REFERENCES nomenclatures.speciality(id);


--
-- Name: recognized_specs recognized_specs_training_course_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recognized_specs
    ADD CONSTRAINT recognized_specs_training_course_id_fkey FOREIGN KEY (training_course_id) REFERENCES public.training_course(id);


--
-- Name: bg_academic_recognition_info related_recognition_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.bg_academic_recognition_info
    ADD CONSTRAINT related_recognition_id_fk FOREIGN KEY (related_recognition_id) REFERENCES public.bg_academic_recognition_info(id);


--
-- Name: application res_usr_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application
    ADD CONSTRAINT res_usr_id_fk FOREIGN KEY (responsible_user) REFERENCES public.users(id);


--
-- Name: training_course tc_dut_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_course
    ADD CONSTRAINT tc_dut_fk FOREIGN KEY (duration_unit_id) REFERENCES nomenclatures.duration_unit(id);


--
-- Name: training_course tc_prof_group_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_course
    ADD CONSTRAINT tc_prof_group_fk FOREIGN KEY (prof_group_id) REFERENCES nomenclatures.prof_group(id);


--
-- Name: training_course tc_rec_prof_group_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_course
    ADD CONSTRAINT tc_rec_prof_group_fk FOREIGN KEY (recognized_prof_group_id) REFERENCES nomenclatures.prof_group(id);


--
-- Name: training_course tc_thesis_language_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_course
    ADD CONSTRAINT tc_thesis_language_id_fk FOREIGN KEY (thesis_language_id) REFERENCES nomenclatures.language(id);


--
-- Name: application training_course_application_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.application
    ADD CONSTRAINT training_course_application_fk1 FOREIGN KEY (training_course_id) REFERENCES public.training_course(id);


--
-- Name: diploma_examination training_course_diploma_examination_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.diploma_examination
    ADD CONSTRAINT training_course_diploma_examination_fk1 FOREIGN KEY (training_course_id) REFERENCES public.training_course(id);


--
-- Name: diploma_issuer training_course_diploma_issuer_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.diploma_issuer
    ADD CONSTRAINT training_course_diploma_issuer_fk1 FOREIGN KEY (diploma_id) REFERENCES public.training_course(id);


--
-- Name: training_course training_course_graduation_document_type_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_course
    ADD CONSTRAINT training_course_graduation_document_type_fk FOREIGN KEY (graduation_document_type_id) REFERENCES nomenclatures.graduation_document_type(id);


--
-- Name: training_course_institution training_course_institution_training_course_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_course_institution
    ADD CONSTRAINT training_course_institution_training_course_id_fkey FOREIGN KEY (training_course_id) REFERENCES public.training_course(id);


--
-- Name: training_course_institution training_course_institution_training_inst_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_course_institution
    ADD CONSTRAINT training_course_institution_training_inst_id_fkey FOREIGN KEY (training_inst_id) REFERENCES public.training_institution(id);


--
-- Name: training_course training_course_original_qualification_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_course
    ADD CONSTRAINT training_course_original_qualification_id_fkey FOREIGN KEY (original_qualification_id) REFERENCES nomenclatures.original_qualification(id);


--
-- Name: training_course training_course_owner_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_course
    ADD CONSTRAINT training_course_owner_id_fk FOREIGN KEY (owner_id) REFERENCES public.person(id);


--
-- Name: training_course training_course_prev_diploma_speciality; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_course
    ADD CONSTRAINT training_course_prev_diploma_speciality FOREIGN KEY (prev_diploma_speciality_id) REFERENCES nomenclatures.speciality(id);


--
-- Name: training_course training_course_recognized_edu_level_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_course
    ADD CONSTRAINT training_course_recognized_edu_level_id_fkey FOREIGN KEY (recognized_edu_level_id) REFERENCES nomenclatures.edu_level(id);


--
-- Name: training_course training_course_recognized_qualification_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_course
    ADD CONSTRAINT training_course_recognized_qualification_id_fkey FOREIGN KEY (recognized_qualification_id) REFERENCES nomenclatures.qualification(id);


--
-- Name: training_course_specialities training_course_specialities_speciality_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_course_specialities
    ADD CONSTRAINT training_course_specialities_speciality_id_fkey FOREIGN KEY (speciality_id) REFERENCES nomenclatures.speciality(id);


--
-- Name: training_course_specialities training_course_specialities_training_course_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_course_specialities
    ADD CONSTRAINT training_course_specialities_training_course_id_fkey FOREIGN KEY (training_course_id) REFERENCES public.training_course(id);


--
-- Name: training_form training_course_training_form_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_form
    ADD CONSTRAINT training_course_training_form_fk1 FOREIGN KEY (training_course_id) REFERENCES public.training_course(id);


--
-- Name: university_examination training_course_university_examination_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.university_examination
    ADD CONSTRAINT training_course_university_examination_fk1 FOREIGN KEY (training_course_id) REFERENCES public.training_course(id);


--
-- Name: way_of_graduation training_course_way_of_graduation_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.way_of_graduation
    ADD CONSTRAINT training_course_way_of_graduation_fk1 FOREIGN KEY (training_course_id) REFERENCES public.training_course(id);


--
-- Name: training_institution training_institution_country_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_institution
    ADD CONSTRAINT training_institution_country_id_fkey FOREIGN KEY (country_id) REFERENCES nomenclatures.country(id);


--
-- Name: training_location training_location_training_course_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_location
    ADD CONSTRAINT training_location_training_course_id_fkey FOREIGN KEY (training_course_id) REFERENCES public.training_course(id);


--
-- Name: training_location training_location_training_institution_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_location
    ADD CONSTRAINT training_location_training_institution_id_fkey FOREIGN KEY (training_institution_id) REFERENCES public.training_institution(id);


--
-- Name: training_location training_location_training_location_country_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.training_location
    ADD CONSTRAINT training_location_training_location_country_id_fkey FOREIGN KEY (training_location_country_id) REFERENCES nomenclatures.country(id);


--
-- Name: uni_exam_attached_docs uni_exam_attached_docs_document_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.uni_exam_attached_docs
    ADD CONSTRAINT uni_exam_attached_docs_document_id_fk FOREIGN KEY (document_id) REFERENCES blobs.blobs(id);


--
-- Name: uni_exam_attached_docs uni_exam_attached_docs_scanned_document_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.uni_exam_attached_docs
    ADD CONSTRAINT uni_exam_attached_docs_scanned_document_id_fk FOREIGN KEY (scanned_document_id) REFERENCES blobs.blobs(id);


--
-- Name: diploma_issuer university_diploma_issuer_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.diploma_issuer
    ADD CONSTRAINT university_diploma_issuer_fk1 FOREIGN KEY (university_id) REFERENCES public.university(id);


--
-- Name: university_faculty university_faculty_university_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.university_faculty
    ADD CONSTRAINT university_faculty_university_id_fkey FOREIGN KEY (university_id) REFERENCES public.university(id);


--
-- Name: university university_generic_name_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.university
    ADD CONSTRAINT university_generic_name_id_fk FOREIGN KEY (university_generic_name_id) REFERENCES nomenclatures.university_generic_name(id);


--
-- Name: university_id university_id_training_inst_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.university_id
    ADD CONSTRAINT university_id_training_inst_id_fkey FOREIGN KEY (training_inst_id) REFERENCES public.training_institution(id);


--
-- Name: university_id university_id_university_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.university_id
    ADD CONSTRAINT university_id_university_id_fkey FOREIGN KEY (university_id) REFERENCES public.university(id);


--
-- Name: university_validity university_university_validity_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.university_validity
    ADD CONSTRAINT university_university_validity_fk1 FOREIGN KEY (university_id) REFERENCES public.university(id);


--
-- Name: available_training_forms university_validity_available_training_forms_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.available_training_forms
    ADD CONSTRAINT university_validity_available_training_forms_fk1 FOREIGN KEY (university_validity_id) REFERENCES public.university_validity(id);


--
-- Name: sources_of_information university_validity_sources_of_information_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sources_of_information
    ADD CONSTRAINT university_validity_sources_of_information_fk1 FOREIGN KEY (university_validity_id) REFERENCES public.university_validity(id);


--
-- Name: uni_exam_attached_docs university_validity_uni_exam_attached_docs_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.uni_exam_attached_docs
    ADD CONSTRAINT university_validity_uni_exam_attached_docs_fk1 FOREIGN KEY (parent_id) REFERENCES public.university_validity(id);


--
-- Name: university_examination university_validity_university_examination_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.university_examination
    ADD CONSTRAINT university_validity_university_examination_fk1 FOREIGN KEY (university_validity_id) REFERENCES public.university_validity(id);


--
-- Name: user_addr users_user_addr_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_addr
    ADD CONSTRAINT users_user_addr_fk1 FOREIGN KEY (user_id) REFERENCES public.users(id);


--
-- Name: users_group_membership users_users_group_membership_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_group_membership
    ADD CONSTRAINT users_users_group_membership_fk1 FOREIGN KEY (user_id) REFERENCES public.users(id);


--
-- Name: users_sys_log users_users_sys_log_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_sys_log
    ADD CONSTRAINT users_users_sys_log_fk1 FOREIGN KEY (user_id) REFERENCES public.users(id);


--
-- Name: app_status_doc_type app_status_doc_type_app_status_id_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.app_status_doc_type
    ADD CONSTRAINT app_status_doc_type_app_status_id_fkey FOREIGN KEY (app_status_id) REFERENCES nomenclatures.regprof_app_status(id);


--
-- Name: app_status_doc_type app_status_doc_type_doc_type_id_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.app_status_doc_type
    ADD CONSTRAINT app_status_doc_type_doc_type_id_fkey FOREIGN KEY (doc_type_id) REFERENCES nomenclatures.doc_types(id);


--
-- Name: app_status_history app_status_hist_application_id_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.app_status_history
    ADD CONSTRAINT app_status_hist_application_id_fk FOREIGN KEY (application_id) REFERENCES regprof.regprof_application(id);


--
-- Name: app_status_history app_status_hist_status_id_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.app_status_history
    ADD CONSTRAINT app_status_hist_status_id_fk FOREIGN KEY (status_id) REFERENCES nomenclatures.app_status(id);


--
-- Name: app_status_history app_status_hist_user_assigned_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.app_status_history
    ADD CONSTRAINT app_status_hist_user_assigned_fk FOREIGN KEY (user_assigned) REFERENCES public.users(id);


--
-- Name: regprof_application applicant_id_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regprof_application
    ADD CONSTRAINT applicant_id_fk FOREIGN KEY (applicant_id) REFERENCES public.person(id);


--
-- Name: regprof_application application_docflow_status_id_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regprof_application
    ADD CONSTRAINT application_docflow_status_id_fk FOREIGN KEY (docflow_status_id) REFERENCES nomenclatures.app_status_docflow(id);


--
-- Name: cert_number_to_attached_doc cert_b\number_to_attached_doc_attachment_id_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.cert_number_to_attached_doc
    ADD CONSTRAINT "cert_b\number_to_attached_doc_attachment_id_fk" FOREIGN KEY (attached_doc_id) REFERENCES regprof.regprof_attached_docs(id);


--
-- Name: cert_number_to_attached_doc cert_number_to_attached_doc_app_id_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.cert_number_to_attached_doc
    ADD CONSTRAINT cert_number_to_attached_doc_app_id_fk FOREIGN KEY (application_id) REFERENCES regprof.regprof_application(id);


--
-- Name: regprof_application country_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regprof_application
    ADD CONSTRAINT country_fk FOREIGN KEY (applicant_country_id) REFERENCES nomenclatures.country(id);


--
-- Name: doc_exam_attached_docs doc_exam_attached_docs_parent_id_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.doc_exam_attached_docs
    ADD CONSTRAINT doc_exam_attached_docs_parent_id_fk FOREIGN KEY (parent_id) REFERENCES regprof.document_examination(id);


--
-- Name: training_course doc_type_high_sec_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.training_course
    ADD CONSTRAINT doc_type_high_sec_fk FOREIGN KEY (document_type) REFERENCES nomenclatures.education_document_type(id);


--
-- Name: regprof_application document_receive_method_id_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regprof_application
    ADD CONSTRAINT document_receive_method_id_fk FOREIGN KEY (document_receive_method_id) REFERENCES nomenclatures.document_receive_method(id);


--
-- Name: regprof_application documents_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regprof_application
    ADD CONSTRAINT documents_fk FOREIGN KEY (applicant_documents_id) REFERENCES public.person_document(id);


--
-- Name: education_type_to_institution_type education_type_to_institution_type_education_type_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.education_type_to_institution_type
    ADD CONSTRAINT education_type_to_institution_type_education_type_fkey FOREIGN KEY (education_type) REFERENCES nomenclatures.education_type(id);


--
-- Name: education_type_to_institution_type education_type_to_institution_type_institution_type_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.education_type_to_institution_type
    ADD CONSTRAINT education_type_to_institution_type_institution_type_fkey FOREIGN KEY (institution_type) REFERENCES nomenclatures.professional_institution_type(id);


--
-- Name: regprof_application final_status_history_id_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regprof_application
    ADD CONSTRAINT final_status_history_id_fk FOREIGN KEY (final_status_history_id) REFERENCES regprof.app_status_history(id);


--
-- Name: professional_institution_validity institution_validity_professional_institution_id_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.professional_institution_validity
    ADD CONSTRAINT institution_validity_professional_institution_id_fkey FOREIGN KEY (professional_institution_id) REFERENCES regprof.professional_institution(id);


--
-- Name: professional_institution_validity institution_validity_qual_bg_high_sdk_id; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.professional_institution_validity
    ADD CONSTRAINT institution_validity_qual_bg_high_sdk_id FOREIGN KEY (qualification_bulgaria_high_sdk_id) REFERENCES nomenclatures.higher_prof_qualification(id);


--
-- Name: professional_institution_validity institution_validity_qual_bg_sec_id_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.professional_institution_validity
    ADD CONSTRAINT institution_validity_qual_bg_sec_id_fk FOREIGN KEY (qualification_bulgaria_sec_id) REFERENCES nomenclatures.secondary_prof_qualification(id);


--
-- Name: professional_institution_validity institution_validity_user_created_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.professional_institution_validity
    ADD CONSTRAINT institution_validity_user_created_fkey FOREIGN KEY (user_created) REFERENCES public.users(id);


--
-- Name: profession_experience_dates pedates_pedocs_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.profession_experience_dates
    ADD CONSTRAINT pedates_pedocs_fk FOREIGN KEY (prof_experience_document_id) REFERENCES regprof.profession_experience_documents(id);


--
-- Name: prof_qualification_examination pqe_age_range_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.prof_qualification_examination
    ADD CONSTRAINT pqe_age_range_fk FOREIGN KEY (age_range) REFERENCES nomenclatures.age_range(id);


--
-- Name: prof_qualification_examination pqe_grade_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.prof_qualification_examination
    ADD CONSTRAINT pqe_grade_fk FOREIGN KEY (grade) REFERENCES nomenclatures.grade(id);


--
-- Name: prof_qualification_examination pqe_school_type_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.prof_qualification_examination
    ADD CONSTRAINT pqe_school_type_fk FOREIGN KEY (school_type) REFERENCES nomenclatures.school_type(id);


--
-- Name: professional_institution prof_inst_country_id_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.professional_institution
    ADD CONSTRAINT prof_inst_country_id_fk FOREIGN KEY (country_id) REFERENCES nomenclatures.country(id);


--
-- Name: training_course prof_inst_id_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.training_course
    ADD CONSTRAINT prof_inst_id_fk FOREIGN KEY (prof_institution_id) REFERENCES regprof.professional_institution(id);


--
-- Name: prof_qualification_examination prof_qual_exam_qual_degree_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.prof_qualification_examination
    ADD CONSTRAINT prof_qual_exam_qual_degree_fk FOREIGN KEY (recognized_qualification_degree_id) REFERENCES nomenclatures.secondary_qualification_degree(id);


--
-- Name: prof_qualification_examination prof_qual_exam_qual_level_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.prof_qualification_examination
    ADD CONSTRAINT prof_qual_exam_qual_level_fk FOREIGN KEY (recognized_qualification_level_id) REFERENCES nomenclatures.edu_level(id);


--
-- Name: prof_qualification_examination prof_qual_exam_training_course_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.prof_qualification_examination
    ADD CONSTRAINT prof_qual_exam_training_course_fk FOREIGN KEY (training_course_id) REFERENCES regprof.training_course(id);


--
-- Name: prof_qualification_examination prof_qual_exam_user_created; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.prof_qualification_examination
    ADD CONSTRAINT prof_qual_exam_user_created FOREIGN KEY (user_created) REFERENCES public.users(id);


--
-- Name: prof_qualification_examination prof_qualification_examination_recognized_profession_id_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.prof_qualification_examination
    ADD CONSTRAINT prof_qualification_examination_recognized_profession_id_fk FOREIGN KEY (recognized_profession_id) REFERENCES nomenclatures.profession(id);


--
-- Name: profession_experience_examination profession_expeience_examination_article_item_id_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.profession_experience_examination
    ADD CONSTRAINT profession_expeience_examination_article_item_id_fk FOREIGN KEY (article_item_id) REFERENCES nomenclatures.article_item(id);


--
-- Name: profession_experience_documents profession_experience_document_prof_experience_doc_type_id_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.profession_experience_documents
    ADD CONSTRAINT profession_experience_document_prof_experience_doc_type_id_fkey FOREIGN KEY (prof_experience_doc_type_id) REFERENCES nomenclatures.profession_experience_document_type(id);


--
-- Name: profession_experience_documents profession_experience_documents_prof_experience_id_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.profession_experience_documents
    ADD CONSTRAINT profession_experience_documents_prof_experience_id_fkey FOREIGN KEY (prof_experience_id) REFERENCES regprof.profession_experience(id);


--
-- Name: profession_experience_exam_attached_docs profession_experience_exam_attached_docs_parent_id_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.profession_experience_exam_attached_docs
    ADD CONSTRAINT profession_experience_exam_attached_docs_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES regprof.profession_experience_documents(id);


--
-- Name: profession_experience_examination profession_experience_examina_regprof_profession_experienc_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.profession_experience_examination
    ADD CONSTRAINT profession_experience_examina_regprof_profession_experienc_fkey FOREIGN KEY (regprof_profession_experience_id) REFERENCES regprof.profession_experience(id);


--
-- Name: profession_experience_examination profession_experience_examination_article_item_id_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.profession_experience_examination
    ADD CONSTRAINT profession_experience_examination_article_item_id_fk FOREIGN KEY (article_item_id) REFERENCES nomenclatures.article_item(id);


--
-- Name: profession_experience_examination profession_experience_examination_user_id_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.profession_experience_examination
    ADD CONSTRAINT profession_experience_examination_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id);


--
-- Name: profession_experience profession_experience_n_profession_experience_id_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.profession_experience
    ADD CONSTRAINT profession_experience_n_profession_experience_id_fkey FOREIGN KEY (n_profession_experience_id) REFERENCES nomenclatures.profession_experience(id);


--
-- Name: profession_experience profession_experience_training_course_id_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.profession_experience
    ADD CONSTRAINT profession_experience_training_course_id_fkey FOREIGN KEY (training_course_id) REFERENCES regprof.training_course(id);


--
-- Name: professional_institution_examination professional_institution_exam_professional_institution_val_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.professional_institution_examination
    ADD CONSTRAINT professional_institution_exam_professional_institution_val_fkey FOREIGN KEY (professional_institution_validity_id) REFERENCES regprof.professional_institution_validity(id);


--
-- Name: professional_institution_examination professional_institution_examinatio_regprof_application_id_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.professional_institution_examination
    ADD CONSTRAINT professional_institution_examinatio_regprof_application_id_fkey FOREIGN KEY (regprof_application_id) REFERENCES regprof.regprof_application(id);


--
-- Name: professional_institution_examination professional_institution_examination_user_created_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.professional_institution_examination
    ADD CONSTRAINT professional_institution_examination_user_created_fkey FOREIGN KEY (user_created) REFERENCES public.users(id);


--
-- Name: professional_institution_names professional_institution_names_professional_institution_id_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.professional_institution_names
    ADD CONSTRAINT professional_institution_names_professional_institution_id_fkey FOREIGN KEY (professional_institution_id) REFERENCES regprof.professional_institution(id);


--
-- Name: professional_institution professional_institution_professional_institution_type_id_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.professional_institution
    ADD CONSTRAINT professional_institution_professional_institution_type_id_fkey FOREIGN KEY (professional_institution_type_id) REFERENCES nomenclatures.professional_institution_type(id);


--
-- Name: regulated_examination reg_exam_reg_validity_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regulated_examination
    ADD CONSTRAINT reg_exam_reg_validity_fk FOREIGN KEY (regulated_validity_id) REFERENCES regprof.regulated_validity(id);


--
-- Name: regulated_examination reg_exam_regprof_app_id_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regulated_examination
    ADD CONSTRAINT reg_exam_regprof_app_id_fk FOREIGN KEY (regprof_application_id) REFERENCES regprof.regprof_application(id);


--
-- Name: regulated_examination reg_exam_user_id_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regulated_examination
    ADD CONSTRAINT reg_exam_user_id_fk FOREIGN KEY (user_created) REFERENCES public.users(id);


--
-- Name: regulated_validity reg_val_user_vreated_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regulated_validity
    ADD CONSTRAINT reg_val_user_vreated_fk FOREIGN KEY (user_created) REFERENCES public.users(id);


--
-- Name: regprof_application regprof_app_applicant_personal_id_document_type_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regprof_application
    ADD CONSTRAINT regprof_app_applicant_personal_id_document_type_fk FOREIGN KEY (applicant_personal_id_document_type) REFERENCES nomenclatures.personal_id_document_type(id);


--
-- Name: app_status_docflow_history regprof_app_status_docflow_history_app_status_docflow_id_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.app_status_docflow_history
    ADD CONSTRAINT regprof_app_status_docflow_history_app_status_docflow_id_fkey FOREIGN KEY (app_status_docflow_id) REFERENCES nomenclatures.app_status_docflow(id);


--
-- Name: app_status_docflow_history regprof_app_status_docflow_history_application_id_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.app_status_docflow_history
    ADD CONSTRAINT regprof_app_status_docflow_history_application_id_fkey FOREIGN KEY (application_id) REFERENCES regprof.regprof_application(id);


--
-- Name: regprof_application regprof_application_application_country_id_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regprof_application
    ADD CONSTRAINT regprof_application_application_country_id_fk FOREIGN KEY (application_country_id) REFERENCES nomenclatures.country(id);


--
-- Name: regprof_application regprof_application_rep_from_company_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regprof_application
    ADD CONSTRAINT regprof_application_rep_from_company_fkey FOREIGN KEY (rep_from_company) REFERENCES backoffice.company(id);


--
-- Name: regprof_application regprof_application_service_type_id_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regprof_application
    ADD CONSTRAINT regprof_application_service_type_id_fk FOREIGN KEY (service_type_id) REFERENCES nomenclatures.service_type(id);


--
-- Name: prof_qualification_examination regprof_article_item_id_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.prof_qualification_examination
    ADD CONSTRAINT regprof_article_item_id_fk FOREIGN KEY (article_item_id) REFERENCES nomenclatures.article_item(id);


--
-- Name: regprof_attached_docs regprof_attached_docs_document_id_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regprof_attached_docs
    ADD CONSTRAINT regprof_attached_docs_document_id_fk FOREIGN KEY (document_id) REFERENCES blobs.blobs(id);


--
-- Name: regprof_attached_docs regprof_attached_docs_fk1; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regprof_attached_docs
    ADD CONSTRAINT regprof_attached_docs_fk1 FOREIGN KEY (parent_id) REFERENCES regprof.regprof_application(id);


--
-- Name: regprof_attached_docs regprof_attached_docs_scanned_document_id_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regprof_attached_docs
    ADD CONSTRAINT regprof_attached_docs_scanned_document_id_fk FOREIGN KEY (scanned_document_id) REFERENCES blobs.blobs(id);


--
-- Name: doc_exam_attached_docs regprof_doc_exam_attached_docs_document_id_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.doc_exam_attached_docs
    ADD CONSTRAINT regprof_doc_exam_attached_docs_document_id_fk FOREIGN KEY (document_id) REFERENCES blobs.blobs(id);


--
-- Name: doc_exam_attached_docs regprof_doc_exam_attached_docs_scanned_document_id_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.doc_exam_attached_docs
    ADD CONSTRAINT regprof_doc_exam_attached_docs_scanned_document_id_fk FOREIGN KEY (scanned_document_id) REFERENCES blobs.blobs(id);


--
-- Name: regprof_document_recipient regprof_document_recipient_application_id_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regprof_document_recipient
    ADD CONSTRAINT regprof_document_recipient_application_id_fk FOREIGN KEY (application_id) REFERENCES regprof.regprof_application(id);


--
-- Name: regprof_document_recipient regprof_document_recipient_country_id_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regprof_document_recipient
    ADD CONSTRAINT regprof_document_recipient_country_id_fk FOREIGN KEY (country_id) REFERENCES nomenclatures.country(id);


--
-- Name: profession_experience_exam_attached_docs regprof_profession_experience_exam_attached_docs_document_id_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.profession_experience_exam_attached_docs
    ADD CONSTRAINT regprof_profession_experience_exam_attached_docs_document_id_fk FOREIGN KEY (document_id) REFERENCES blobs.blobs(id);


--
-- Name: profession_experience_exam_attached_docs regprof_profession_experience_exam_attached_docs_scanned_docume; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.profession_experience_exam_attached_docs
    ADD CONSTRAINT regprof_profession_experience_exam_attached_docs_scanned_docume FOREIGN KEY (scanned_document_id) REFERENCES blobs.blobs(id);


--
-- Name: regulated_validity regulaled_validity_country_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regulated_validity
    ADD CONSTRAINT regulaled_validity_country_fk FOREIGN KEY (country_id) REFERENCES nomenclatures.country(id);


--
-- Name: regprof_application rep_id_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regprof_application
    ADD CONSTRAINT rep_id_fk FOREIGN KEY (representative_id) REFERENCES public.person(id);


--
-- Name: responsible_users responsible_users_regprof_application_id; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.responsible_users
    ADD CONSTRAINT responsible_users_regprof_application_id FOREIGN KEY (regprof_application_id) REFERENCES regprof.regprof_application(id);


--
-- Name: responsible_users responsible_users_user_id_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.responsible_users
    ADD CONSTRAINT responsible_users_user_id_fk FOREIGN KEY (user_id) REFERENCES public.users(id);


--
-- Name: training_course sdk_doc_type_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.training_course
    ADD CONSTRAINT sdk_doc_type_fk FOREIGN KEY (sdk_document_type) REFERENCES nomenclatures.education_document_type(id);


--
-- Name: regprof_application status_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regprof_application
    ADD CONSTRAINT status_fk FOREIGN KEY (status) REFERENCES nomenclatures.app_status(id);


--
-- Name: regprof_application tr_course_id_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.regprof_application
    ADD CONSTRAINT tr_course_id_fk FOREIGN KEY (training_course_id) REFERENCES regprof.training_course(id);


--
-- Name: training_course training_course_certificate_prof_qualification_id_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.training_course
    ADD CONSTRAINT training_course_certificate_prof_qualification_id_fkey FOREIGN KEY (certificate_prof_qualification_id) REFERENCES nomenclatures.certificate_prof_qualification(id);


--
-- Name: training_course training_course_document_civil_id_type_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.training_course
    ADD CONSTRAINT training_course_document_civil_id_type_fk FOREIGN KEY (document_civil_id_type) REFERENCES nomenclatures.civil_id_type(id);


--
-- Name: training_course training_course_education_type_id_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.training_course
    ADD CONSTRAINT training_course_education_type_id_fkey FOREIGN KEY (education_type_id) REFERENCES nomenclatures.education_type(id);


--
-- Name: training_course training_course_high_edu_level_id_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.training_course
    ADD CONSTRAINT training_course_high_edu_level_id_fkey FOREIGN KEY (high_edu_level_id) REFERENCES nomenclatures.edu_level(id);


--
-- Name: training_course training_course_high_prof_qualification_id_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.training_course
    ADD CONSTRAINT training_course_high_prof_qualification_id_fkey FOREIGN KEY (high_prof_qualification_id) REFERENCES nomenclatures.higher_prof_qualification(id);


--
-- Name: document_examination training_course_id_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.document_examination
    ADD CONSTRAINT training_course_id_fk FOREIGN KEY (training_course_id) REFERENCES regprof.training_course(id);


--
-- Name: training_course training_course_prof_institution_org_name_id_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.training_course
    ADD CONSTRAINT training_course_prof_institution_org_name_id_fkey FOREIGN KEY (prof_institution_org_name_id) REFERENCES regprof.professional_institution_names(id);


--
-- Name: training_course training_course_sdk_prof_institution_id_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.training_course
    ADD CONSTRAINT training_course_sdk_prof_institution_id_fkey FOREIGN KEY (sdk_prof_institution_id) REFERENCES regprof.professional_institution(id);


--
-- Name: training_course training_course_sdk_prof_institution_org_name_id_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.training_course
    ADD CONSTRAINT training_course_sdk_prof_institution_org_name_id_fkey FOREIGN KEY (sdk_prof_institution_org_name_id) REFERENCES regprof.professional_institution_names(id);


--
-- Name: training_course training_course_sdk_prof_qualification_id_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.training_course
    ADD CONSTRAINT training_course_sdk_prof_qualification_id_fkey FOREIGN KEY (sdk_prof_qualification_id) REFERENCES nomenclatures.higher_prof_qualification(id);


--
-- Name: training_course training_course_sec_caliber_id_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.training_course
    ADD CONSTRAINT training_course_sec_caliber_id_fkey FOREIGN KEY (sec_caliber_id) REFERENCES nomenclatures.secondary_caliber(id);


--
-- Name: training_course training_course_sec_prof_qualification_id_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.training_course
    ADD CONSTRAINT training_course_sec_prof_qualification_id_fkey FOREIGN KEY (sec_prof_qualification_id) REFERENCES nomenclatures.secondary_prof_qualification(id);


--
-- Name: training_course_specialities training_course_specialities_higher_speciality_id_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.training_course_specialities
    ADD CONSTRAINT training_course_specialities_higher_speciality_id_fkey FOREIGN KEY (higher_speciality_id) REFERENCES nomenclatures.higher_speciality(id);


--
-- Name: training_course_specialities training_course_specialities_sdk_speciality_id_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.training_course_specialities
    ADD CONSTRAINT training_course_specialities_sdk_speciality_id_fkey FOREIGN KEY (sdk_speciality_id) REFERENCES nomenclatures.higher_speciality(id);


--
-- Name: training_course_specialities training_course_specialities_secondary_speciality_id_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.training_course_specialities
    ADD CONSTRAINT training_course_specialities_secondary_speciality_id_fkey FOREIGN KEY (secondary_speciality_id) REFERENCES nomenclatures.secondary_speciality(id);


--
-- Name: training_course_specialities training_course_specialities_training_course_id_fkey; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.training_course_specialities
    ADD CONSTRAINT training_course_specialities_training_course_id_fkey FOREIGN KEY (training_course_id) REFERENCES regprof.training_course(id);


--
-- Name: document_examination user_created_exam_fk; Type: FK CONSTRAINT; Schema: regprof; Owner: postgres
--

ALTER TABLE ONLY regprof.document_examination
    ADD CONSTRAINT user_created_exam_fk FOREIGN KEY (user_created) REFERENCES public.users(id);


--
-- Name: SCHEMA public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- Name: TABLE vw_regix_applications; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.vw_regix_applications FROM PUBLIC;
REVOKE ALL ON TABLE public.vw_regix_applications FROM postgres;
GRANT ALL ON TABLE public.vw_regix_applications TO postgres;
GRANT SELECT ON TABLE public.vw_regix_applications TO regix;


--
-- PostgreSQL database dump complete
--

